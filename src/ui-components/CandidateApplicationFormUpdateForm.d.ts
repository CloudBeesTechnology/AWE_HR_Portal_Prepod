/***************************************************************************
 * The contents of this file were generated with Amplify Studio.           *
 * Please refrain from making any modifications to this file.              *
 * Any changes to this file will be overwritten when running amplify pull. *
 **************************************************************************/

import * as React from "react";
import { GridProps, TextFieldProps } from "@aws-amplify/ui-react";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type CandidateApplicationFormUpdateFormInputValues = {
    profilePhoto?: string;
    agent?: string;
    position?: string;
    contractType?: string;
    employeeType?: string;
    name?: string;
    chinese?: string;
    gender?: string;
    age?: number;
    email?: string;
    countryOfBirth?: string;
    nationality?: string;
    otherNationality?: string;
    marital?: string;
    race?: string;
    otherRace?: string;
    religion?: string;
    otherReligion?: string;
    icNo?: string;
    icExpiry?: string;
    icColour?: string;
    passportNo?: string;
    alternateNo?: string;
    passportIssued?: string;
    passportExpiry?: string;
    passportDestination?: string;
    contactNo?: string;
    presentAddress?: string;
    permanentAddress?: string;
    drivingLicense?: string;
    language?: string;
    familyDetails?: string[];
    educationDetails?: string[];
    workExperience?: string[];
    referees?: string[];
    relatives?: string[];
    description?: string;
    emergencyContact?: string[];
    disease?: string;
    liquor?: string;
    crime?: string;
    diseaseDescription?: string;
    liquorDescription?: string;
    crimeDescription?: string;
    salaryException?: string;
    noticePeriod?: string;
    employeeStatement?: string;
    perInterviewStatus?: string;
    perInterviewDescription?: string;
    supportInfo?: string;
    uploadResume?: string;
    uploadCertificate?: string;
    uploadPassport?: string;
    dateOfBirth?: string;
    tempID?: string;
    experience?: string;
};
export declare type CandidateApplicationFormUpdateFormValidationValues = {
    profilePhoto?: ValidationFunction<string>;
    agent?: ValidationFunction<string>;
    position?: ValidationFunction<string>;
    contractType?: ValidationFunction<string>;
    employeeType?: ValidationFunction<string>;
    name?: ValidationFunction<string>;
    chinese?: ValidationFunction<string>;
    gender?: ValidationFunction<string>;
    age?: ValidationFunction<number>;
    email?: ValidationFunction<string>;
    countryOfBirth?: ValidationFunction<string>;
    nationality?: ValidationFunction<string>;
    otherNationality?: ValidationFunction<string>;
    marital?: ValidationFunction<string>;
    race?: ValidationFunction<string>;
    otherRace?: ValidationFunction<string>;
    religion?: ValidationFunction<string>;
    otherReligion?: ValidationFunction<string>;
    icNo?: ValidationFunction<string>;
    icExpiry?: ValidationFunction<string>;
    icColour?: ValidationFunction<string>;
    passportNo?: ValidationFunction<string>;
    alternateNo?: ValidationFunction<string>;
    passportIssued?: ValidationFunction<string>;
    passportExpiry?: ValidationFunction<string>;
    passportDestination?: ValidationFunction<string>;
    contactNo?: ValidationFunction<string>;
    presentAddress?: ValidationFunction<string>;
    permanentAddress?: ValidationFunction<string>;
    drivingLicense?: ValidationFunction<string>;
    language?: ValidationFunction<string>;
    familyDetails?: ValidationFunction<string>;
    educationDetails?: ValidationFunction<string>;
    workExperience?: ValidationFunction<string>;
    referees?: ValidationFunction<string>;
    relatives?: ValidationFunction<string>;
    description?: ValidationFunction<string>;
    emergencyContact?: ValidationFunction<string>;
    disease?: ValidationFunction<string>;
    liquor?: ValidationFunction<string>;
    crime?: ValidationFunction<string>;
    diseaseDescription?: ValidationFunction<string>;
    liquorDescription?: ValidationFunction<string>;
    crimeDescription?: ValidationFunction<string>;
    salaryException?: ValidationFunction<string>;
    noticePeriod?: ValidationFunction<string>;
    employeeStatement?: ValidationFunction<string>;
    perInterviewStatus?: ValidationFunction<string>;
    perInterviewDescription?: ValidationFunction<string>;
    supportInfo?: ValidationFunction<string>;
    uploadResume?: ValidationFunction<string>;
    uploadCertificate?: ValidationFunction<string>;
    uploadPassport?: ValidationFunction<string>;
    dateOfBirth?: ValidationFunction<string>;
    tempID?: ValidationFunction<string>;
    experience?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CandidateApplicationFormUpdateFormOverridesProps = {
    CandidateApplicationFormUpdateFormGrid?: PrimitiveOverrideProps<GridProps>;
    profilePhoto?: PrimitiveOverrideProps<TextFieldProps>;
    agent?: PrimitiveOverrideProps<TextFieldProps>;
    position?: PrimitiveOverrideProps<TextFieldProps>;
    contractType?: PrimitiveOverrideProps<TextFieldProps>;
    employeeType?: PrimitiveOverrideProps<TextFieldProps>;
    name?: PrimitiveOverrideProps<TextFieldProps>;
    chinese?: PrimitiveOverrideProps<TextFieldProps>;
    gender?: PrimitiveOverrideProps<TextFieldProps>;
    age?: PrimitiveOverrideProps<TextFieldProps>;
    email?: PrimitiveOverrideProps<TextFieldProps>;
    countryOfBirth?: PrimitiveOverrideProps<TextFieldProps>;
    nationality?: PrimitiveOverrideProps<TextFieldProps>;
    otherNationality?: PrimitiveOverrideProps<TextFieldProps>;
    marital?: PrimitiveOverrideProps<TextFieldProps>;
    race?: PrimitiveOverrideProps<TextFieldProps>;
    otherRace?: PrimitiveOverrideProps<TextFieldProps>;
    religion?: PrimitiveOverrideProps<TextFieldProps>;
    otherReligion?: PrimitiveOverrideProps<TextFieldProps>;
    icNo?: PrimitiveOverrideProps<TextFieldProps>;
    icExpiry?: PrimitiveOverrideProps<TextFieldProps>;
    icColour?: PrimitiveOverrideProps<TextFieldProps>;
    passportNo?: PrimitiveOverrideProps<TextFieldProps>;
    alternateNo?: PrimitiveOverrideProps<TextFieldProps>;
    passportIssued?: PrimitiveOverrideProps<TextFieldProps>;
    passportExpiry?: PrimitiveOverrideProps<TextFieldProps>;
    passportDestination?: PrimitiveOverrideProps<TextFieldProps>;
    contactNo?: PrimitiveOverrideProps<TextFieldProps>;
    presentAddress?: PrimitiveOverrideProps<TextFieldProps>;
    permanentAddress?: PrimitiveOverrideProps<TextFieldProps>;
    drivingLicense?: PrimitiveOverrideProps<TextFieldProps>;
    language?: PrimitiveOverrideProps<TextFieldProps>;
    familyDetails?: PrimitiveOverrideProps<TextFieldProps>;
    educationDetails?: PrimitiveOverrideProps<TextFieldProps>;
    workExperience?: PrimitiveOverrideProps<TextFieldProps>;
    referees?: PrimitiveOverrideProps<TextFieldProps>;
    relatives?: PrimitiveOverrideProps<TextFieldProps>;
    description?: PrimitiveOverrideProps<TextFieldProps>;
    emergencyContact?: PrimitiveOverrideProps<TextFieldProps>;
    disease?: PrimitiveOverrideProps<TextFieldProps>;
    liquor?: PrimitiveOverrideProps<TextFieldProps>;
    crime?: PrimitiveOverrideProps<TextFieldProps>;
    diseaseDescription?: PrimitiveOverrideProps<TextFieldProps>;
    liquorDescription?: PrimitiveOverrideProps<TextFieldProps>;
    crimeDescription?: PrimitiveOverrideProps<TextFieldProps>;
    salaryException?: PrimitiveOverrideProps<TextFieldProps>;
    noticePeriod?: PrimitiveOverrideProps<TextFieldProps>;
    employeeStatement?: PrimitiveOverrideProps<TextFieldProps>;
    perInterviewStatus?: PrimitiveOverrideProps<TextFieldProps>;
    perInterviewDescription?: PrimitiveOverrideProps<TextFieldProps>;
    supportInfo?: PrimitiveOverrideProps<TextFieldProps>;
    uploadResume?: PrimitiveOverrideProps<TextFieldProps>;
    uploadCertificate?: PrimitiveOverrideProps<TextFieldProps>;
    uploadPassport?: PrimitiveOverrideProps<TextFieldProps>;
    dateOfBirth?: PrimitiveOverrideProps<TextFieldProps>;
    tempID?: PrimitiveOverrideProps<TextFieldProps>;
    experience?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type CandidateApplicationFormUpdateFormProps = React.PropsWithChildren<{
    overrides?: CandidateApplicationFormUpdateFormOverridesProps | undefined | null;
} & {
    id?: string;
    candidateApplicationForm?: any;
    onSubmit?: (fields: CandidateApplicationFormUpdateFormInputValues) => CandidateApplicationFormUpdateFormInputValues;
    onSuccess?: (fields: CandidateApplicationFormUpdateFormInputValues) => void;
    onError?: (fields: CandidateApplicationFormUpdateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: CandidateApplicationFormUpdateFormInputValues) => CandidateApplicationFormUpdateFormInputValues;
    onValidate?: CandidateApplicationFormUpdateFormValidationValues;
} & React.CSSProperties>;
export default function CandidateApplicationFormUpdateForm(props: CandidateApplicationFormUpdateFormProps): React.ReactElement;
