{"version":3,"file":"static/js/607.981f1024.chunk.js","mappings":"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","sources":["pages/forgotPassword/ForgotPassword.jsx","services/Validation.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport resetImage from \"../../assets/login/resetImage.jpg\";\r\nimport logo from \"../../assets/logo/logo-with-name.svg\";\r\nimport { newPasswordSchema } from \"../../services/Validation\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IoEyeOffOutline, IoEyeOutline } from \"react-icons/io5\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [isNewPasswordVisible, setIsNewPasswordVisible] = useState(false);\r\n  const [isRePasswordVisible, setIsRePasswordVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm({ resolver: yupResolver(newPasswordSchema) });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const Submit = handleSubmit(async (data) => {\r\n    console.log(data);\r\n    navigate(\"/login\");\r\n  });\r\n\r\n  return (\r\n    <section className=\"screen-size mx-auto flex h-screen\">\r\n      <div className=\"flex-1 border-r-2 border-[#E9E9E9] center\">\r\n        <img\r\n          className=\"w-full max-w-[450px]\"\r\n          src={resetImage}\r\n          alt=\"Rightside Pic not found\"\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 flex items-center gap-8 py-20 flex-col w-full px-3\">\r\n        <div>\r\n          <img\r\n            className=\"w-full max-w-[450px]\"\r\n            src={logo}\r\n            alt=\"Logo not found\"\r\n          />\r\n        </div>\r\n        <article className=\"space-y-2 mt-10\">\r\n          <h1 className=\"text-dark_grey title\">Reset Password</h1>\r\n        </article>\r\n        {error && <p className=\"text-red\">{error}</p>}\r\n        <section className=\"space-y-5\">\r\n          {/* New Password Field */}\r\n          <div className=\"w-[400px] space-y-1\">\r\n            <label htmlFor=\"newPassword\" className=\"text-dark_grey text_size_8\">\r\n              New Password\r\n            </label>\r\n            <div className=\"shadow-md shadow-[#00000040] border border-[#D3D3D3] overflow-hidden rounded-lg py-1 pl-3 pr-4 w-full center\">\r\n              <input\r\n                className=\"outline-none py-2 w-full\"\r\n                type={isNewPasswordVisible ? \"text\" : \"password\"}\r\n                placeholder=\"\"\r\n                id=\"newPassword\"\r\n                name=\"newPassword\"\r\n                {...register(\"newPassword\")}\r\n              />\r\n              {isNewPasswordVisible ? (\r\n                <IoEyeOutline\r\n                  className=\"text-2xl text-[#837E7E]\"\r\n                  onClick={() =>\r\n                    setIsNewPasswordVisible(!isNewPasswordVisible)\r\n                  }\r\n                />\r\n              ) : (\r\n                <IoEyeOffOutline\r\n                  className=\"text-2xl text-[#837E7E]\"\r\n                  onClick={() =>\r\n                    setIsNewPasswordVisible(!isNewPasswordVisible)\r\n                  }\r\n                />\r\n              )}\r\n            </div>\r\n            <p className=\"text-[red] text-sm my-2 ml-5\">\r\n              {errors.newPassword?.message}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Re-enter Password Field */}\r\n          <div className=\"w-[400px] space-y-1\">\r\n            <label htmlFor=\"rePassword\" className=\"text-dark_grey text_size_8\">\r\n              Re-enter Password\r\n            </label>\r\n            <div className=\"shadow-md shadow-[#00000040] border border-[#D3D3D3] overflow-hidden rounded-lg py-1 pl-3 pr-4 w-full center\">\r\n              <input\r\n                className=\"outline-none py-2 w-full\"\r\n                type={isRePasswordVisible ? \"text\" : \"password\"}\r\n                placeholder=\"\"\r\n                id=\"rePassword\"\r\n                name=\"rePassword\"\r\n                {...register(\"rePassword\")}\r\n              />\r\n              {isRePasswordVisible ? (\r\n                <IoEyeOutline\r\n                  className=\"text-2xl text-[#837E7E]\"\r\n                  onClick={() => setIsRePasswordVisible(!isRePasswordVisible)}\r\n                />\r\n              ) : (\r\n                <IoEyeOffOutline\r\n                  className=\"text-2xl text-[#837E7E]\"\r\n                  onClick={() => setIsRePasswordVisible(!isRePasswordVisible)}\r\n                />\r\n              )}\r\n            </div>\r\n            <p className=\"text-[red] text-sm my-2 ml-5\">\r\n              {errors.rePassword?.message}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"center\">\r\n            <button className=\"primary_btn text_size_4 my-5\" onClick={Submit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const LoginSchema = Yup.object({\r\n  userID: Yup.string().required(\"UserID is mandatory\"),\r\n  password: Yup.string().required(\"Password is Required\"),\r\n});\r\nexport const newPasswordSchema = Yup.object({\r\n  newPassword: Yup.string()\r\n  .required(\"New Password is required\")\r\n  .min(8, \"Password must be at least 8 characters\"),\r\nrePassword: Yup.string()\r\n  .required(\"Please confirm your password\")\r\n  .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\"),\r\n});\r\nexport const EmailSchema = Yup.object({\r\n  userName: Yup.string().required(\"User Name is mandatory\"),\r\n\r\n});\r\n\r\nexport const UserSchema = Yup.object({\r\n  empID: Yup.string().required(\"Employee ID is required\"),\r\n  password: Yup.string().required(\"Temporary Password is required\"),\r\n  selectType: Yup.string().required(\"Please select a type\"),\r\n  officialEmail: Yup.string().required(\"OfficialEmail is required\"),\r\n  userID: Yup.string().required(\"User ID is mandatory\"),\r\n  name: Yup.string().required(\"Name is mandatory\"),\r\n  contactNo: Yup.string().required(\"Contact number is mandatory\"),\r\n  position: Yup.string().required(\"Position is mandatory\"),\r\n  department: Yup.string().required(\"Department is mandatory\"),\r\n});\r\n\r\nexport const ChangePasswordSchema = Yup.object({\r\n  userID: Yup.string().required(\"User ID is mandatory\"),\r\n  currentPassword: Yup.string().required(\"Current Password is mandatory\"),\r\n  password: Yup.string()\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .max(15, \"Password cannot exceed 15 characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])/,\r\n      \"Password must contain at least one lowercase letter, one uppercase letter, one number, and one special character\"\r\n    )\r\n    .required(\"Password is required\"),\r\n\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm password is required\"),\r\n});\r\n\r\nexport const ApplicantSchema = Yup.object().shape({\r\n  profilePhoto: Yup.mixed()\r\n    .required(\"Upload Photo is mandatory\")\r\n    .test(\"fileType\", \"Profile photo must be a JPG or PNG file\", (value) =>\r\n      value ? /\\.(jpg|jpeg|png)$/.test(value.name) : false\r\n    ),\r\n  agent: Yup.string().notRequired(),\r\n  position: Yup.string().required(\"Position is mandatory\"),\r\n  contractType: Yup.string().required(\"Contract Type mandatory\"),\r\n  empType: Yup.string().required(\"Employee Type mandatory\"),\r\n  name: Yup.string()\r\n    .min(3, \"Name must be at least 3 characters\")\r\n    .required(\"Name is mandatory\"),\r\n  chinese: Yup.string().notRequired(),\r\n  gender: Yup.string().required(\"Gender is mandatory\"),\r\n  // age: Yup.string().required(\"age is mandatory\"),\r\n  dob: Yup.string().required(\"Date of Birth is mandatory\"),\r\n  age: Yup.number()\r\n    .min(20, \"Age must be at least 20\")\r\n    .max(99, \"Age cannot exceed 99\")\r\n    .required(\"Age is required\"),\r\n  email: Yup.string()\r\n    .email(\"Please enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  cob: Yup.string().required(\"Country of Birth is mandatory\"),\r\n  nationality: Yup.string().required(\"Nationality is mandatory\"),\r\n  otherNation: Yup.string().when(\"nationality\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"other\",\r\n    then: () => Yup.string().required(\"Other Nationality is required\"),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n  marital: Yup.string().required(\"Marital status is mandatory\"),\r\n  race: Yup.string().required(\"Race is mandatory\"),\r\n  otherRace: Yup.string().when(\"race\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"other\",\r\n    then: () => Yup.string().required(\"Other Race is required\"),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n  religion: Yup.string().required(\"Religion is mandatory\"),\r\n  otherReligion: Yup.string().when(\"religion\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"other\",\r\n    then: () => Yup.string().required(\"Other religion is required\"),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n});\r\n\r\nexport const PersonalSchema = (nationality) => {\r\n  console.log(nationality);\r\n  const isBruneian =\r\n    nationality &&\r\n    (nationality.trim().toLowerCase() === \"bruneian\" ||\r\n      nationality.trim().toLowerCase() === \"brunei pr\");\r\n  console.log(isBruneian);\r\n\r\n  return Yup.object({\r\n    bwnIcNo: isBruneian\r\n      ? Yup.string()\r\n          .matches(\r\n            /^\\d{2}-\\d{6}$/,\r\n            \"I/C Number must be in the format XX-XXXXXX, where X is a digit\"\r\n          )\r\n          .required(\"I/C Number is mandatory for Bruneians\")\r\n      : Yup.string().notRequired(),\r\n\r\n    bwnIcColour: isBruneian\r\n      ? Yup.string().required(\"I/C Colour is mandatory for Bruneians\")\r\n      : Yup.string().notRequired(),\r\n\r\n    bwnIcExpiry: isBruneian\r\n      ? Yup.string().required(\"I/C Expiry is mandatory for Bruneians\")\r\n      : Yup.string().notRequired(),\r\n    ppNo: isBruneian\r\n      ? Yup.string().notRequired()\r\n      : Yup.string().required(\"Passport Number is mandatory\"),\r\n\r\n    ppIssued: isBruneian\r\n      ? Yup.string().notRequired()\r\n      : Yup.string().required(\"Passport issued is mandatory\"),\r\n    ppExpiry: isBruneian\r\n      ? Yup.string().notRequired()\r\n      : Yup.string().required(\"Passport Expiry is mandatory\"),\r\n    ppDestinate: isBruneian\r\n      ? Yup.string().notRequired()\r\n      : Yup.string().required(\"Passport destination is mandatory\"),\r\n\r\n    alternateNo: Yup.string().notRequired(),\r\n    contactNo: Yup.string().required(\"Contact Number is mandatory\"),\r\n    presentAddress: Yup.string().required(\"Present Address is mandatory\"),\r\n    permanentAddress: Yup.string().required(\"Permanent Address is mandatory\"),\r\n    driveLic: Yup.string().notRequired(),\r\n    lang: Yup.string().required(\"Language is mandatory\"),\r\n    familyDetails: Yup.array()\r\n      .of(\r\n        Yup.object().shape({\r\n          name: Yup.string().notRequired(),\r\n          relationship: Yup.string().notRequired(),\r\n          age: Yup.string().notRequired(),\r\n          occupation: Yup.string().notRequired(),\r\n          place: Yup.string().notRequired(),\r\n        })\r\n      )\r\n      .notRequired(),\r\n    eduDetails: Yup.array()\r\n      .of(\r\n        Yup.object().shape({\r\n          university: Yup.string().required(\"University Name is mandatory \"),\r\n          fromDate: Yup.string().required(\"From Date is mandatory\"),\r\n          toDate: Yup.string().required(\"To Date is mandatory\"),\r\n          degree: Yup.string().required(\"Degree is mandatory\"),\r\n        })\r\n      )\r\n      .required(\"At least one education detail is mandatory\"),\r\n    workExperience: Yup.array().of(\r\n      Yup.object().shape({\r\n        fromDate: Yup.string().notRequired(),\r\n        toDate: Yup.string().notRequired(),\r\n        companyAndAddress: Yup.string().notRequired(),\r\n        position: Yup.string().notRequired(),\r\n        salary: Yup.string().notRequired(),\r\n        reasonLeaving: Yup.string().notRequired(),\r\n      })\r\n    ),\r\n  });\r\n};\r\n\r\nexport const EducationSchema = Yup.object({\r\n  referees: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        name: Yup.string().notRequired(),\r\n        address: Yup.string().notRequired(),\r\n        phoneNumber: Yup.string().notRequired(),\r\n        profession: Yup.string().notRequired(),\r\n      })\r\n    )\r\n    .notRequired(),\r\n  relatives: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        name: Yup.string().notRequired(),\r\n        position: Yup.string().notRequired(),\r\n        relationship: Yup.string().notRequired(),\r\n      })\r\n    )\r\n    .notRequired(),\r\n  description: Yup.string().notRequired(),\r\n  emgDetails: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        name: Yup.string().required(\"Name is mandatory\"),\r\n        relationship: Yup.string().required(\"Relationship is mandatory\"),\r\n        address: Yup.string().required(\"Address is mandatory\"),\r\n        phoneNumber: Yup.string().required(\"Phone Number is mandatory\"),\r\n        bloodGroup: Yup.string().notRequired(),\r\n      })\r\n    )\r\n    .required(\"At least one emergency contact is mandatory\"),\r\n  disease: Yup.string().notRequired(),\r\n  liquor: Yup.string().notRequired(),\r\n  crime: Yup.string().notRequired(),\r\n  diseaseDesc: Yup.string().when(\"disease\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"yes\",\r\n    then: () => Yup.string().notRequired(),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n  liquorDesc: Yup.string().when(\"liquor\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"yes\",\r\n    then: () => Yup.string().notRequired(),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n  crimeDesc: Yup.string().when(\"crime\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"yes\",\r\n    then: () => Yup.string().notRequired(),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n});\r\n\r\nexport const CandidatesSchema = Yup.object().shape({\r\n  salaryExpectation: Yup.string().notRequired(),\r\n  noExperience: Yup.string().required(\"Experience is required\"),\r\n  noticePeriod: Yup.string().required(\"Notice period is required\"),\r\n  empStatement: Yup.string().required(\"Employee Statement is required\"),\r\n  perIS: Yup.string().required(\"Interview status is required\"),\r\n  perID: Yup.string().when(\"perInterviewStatus\", {\r\n    is: (value) => value && value.trim().toLowerCase() === \"yes\",\r\n    then: () => Yup.string().notRequired(),\r\n    otherwise: () => Yup.string(),\r\n  }),\r\n  supportInfo: Yup.string(),\r\n\r\n  // File validation for resume (e.g., PDF, Word, Excel, or images)\r\n  uploadResume: Yup.mixed()\r\n    .required(\"Resume is required\")\r\n    .test(\r\n      \"fileType\",\r\n      \"Only PDF, Word, Excel, or image formats (JPEG, JPG, PNG, SVG) are allowed\",\r\n      (value) => {\r\n        return (\r\n          value &&\r\n          [\r\n            \"application/pdf\", // PDF\r\n            \"application/msword\", // Word .doc\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", // Word .docx\r\n            \"application/vnd.ms-excel\", // Excel .xls\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", // Excel .xlsx\r\n            \"image/jpeg\",\r\n            \"image/jpg\",\r\n            \"image/png\",\r\n            \"image/svg+xml\", // Images\r\n          ].includes(value.type)\r\n        );\r\n      }\r\n    ),\r\n\r\n  // File validation for certificate (e.g., PDF, Word, Excel, or images)\r\n  uploadCertificate: Yup.mixed()\r\n    .required(\"Certificate is required\")\r\n    .test(\r\n      \"fileType\",\r\n      \"Only PDF, Word, Excel, or image formats (JPEG, JPG, PNG, SVG) are allowed\",\r\n      (value) => {\r\n        return (\r\n          value &&\r\n          [\r\n            \"application/pdf\", // PDF\r\n            \"application/msword\", // Word .doc\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", // Word .docx\r\n            \"application/vnd.ms-excel\", // Excel .xls\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", // Excel .xlsx\r\n            \"image/jpeg\",\r\n            \"image/jpg\",\r\n            \"image/png\",\r\n            \"image/svg+xml\", // Images\r\n          ].includes(value.type)\r\n        );\r\n      }\r\n    ),\r\n\r\n  // File validation for passport (e.g., PDF, Word, Excel, or images)\r\n  uploadPp: Yup.mixed()\r\n    .required(\"Passport is required\")\r\n    .test(\r\n      \"fileType\",\r\n      \"Only PDF, Word, Excel, or image formats (JPEG, JPG, PNG, SVG) are allowed\",\r\n      (value) => {\r\n        return (\r\n          value &&\r\n          [\r\n            \"application/pdf\", // PDF\r\n            \"application/msword\", // Word .doc\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", // Word .docx\r\n            \"application/vnd.ms-excel\", // Excel .xls\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", // Excel .xlsx\r\n            \"image/jpeg\",\r\n            \"image/jpg\",\r\n            \"image/png\",\r\n            \"image/svg+xml\", // Images\r\n          ].includes(value.type)\r\n        );\r\n      }\r\n    ),\r\n});\r\n\r\n// Define the validation schema using Yup\r\nexport const EmpRequisitionSchema = Yup.object().shape({\r\n  nameReq: Yup.string().notRequired(),\r\n  requestorID: Yup.string().notRequired(),\r\n  approverID: Yup.string().notRequired(),\r\n  department: Yup.string().required(\"Department is required\"),\r\n  project: Yup.string().required(\"Project is required\"),\r\n  position: Yup.string().required(\"Position is required\"),\r\n  quantity: Yup.number()\r\n    .typeError(\"Quantity must be a number\")\r\n    .required(\"Quantity is required\"),\r\n  reasonForReq: Yup.string().required(\"Reason for request is required\"),\r\n  justification: Yup.string().required(\"Justification is required\"),\r\n  replacementFor: Yup.string().notRequired(),\r\n  qualification: Yup.string().required(\"State Qualification is required\"),\r\n  tentativeDate: Yup.date()\r\n    .min(new Date(), \"Tentative date must be in the future\")\r\n    .required(\"Tentative date is required\")\r\n    .typeError(\"Please enter a valid date\"),\r\n  status: Yup.string().notRequired(),\r\n  remarkReq: Yup.string().notRequired(),\r\n});\r\n\r\n\r\nexport const InterviewScheduleSchema = Yup.object().shape({\r\n  interDate: Yup.date()\r\n  .required(\"Date is required\")\r\n  .typeError(\"Date is required\")\r\n  .min(\r\n    new Date(),\r\n    \"The selected date is in the past. Please choose a valid date.\"\r\n  ),\r\n  interTime: Yup.string()\r\n  .required(\"Time is required\")\r\n  .matches(\r\n    /^(0[8-9]|1[0-5]):([0-5]\\d)$/,\r\n    \"Please choose a time between 8:00 AM and 4:00 PM.\"\r\n  ),\r\n  venue: Yup.string().required(\"Venue is required\"),\r\n  interType: Yup.string().notRequired(),\r\n  empBadgeNo: Yup.string().notRequired(\"Badge Number is required\"),\r\n  manager:  Yup.string().notRequired(\"Manager is required\"),\r\n  message: Yup.string().optional(),\r\n});\r\n\r\nexport const hiringJobSchema = Yup.object().shape({\r\n  jobTitle: Yup.string().required(\"Job Title is required\"),\r\n  location: Yup.string().notRequired(),\r\n  jobDesc: Yup.string().notRequired(),\r\n  experience: Yup.string().required(\"Experience is required\"),\r\n  quantity: Yup.string().notRequired(),\r\n  startDate: Yup.date()\r\n    .nullable()\r\n    .transform((value, originalValue) => (originalValue === \"\" ? null : value))\r\n    .notRequired(),\r\n  expiryDate: Yup.date()\r\n    .nullable()\r\n    .transform((value, originalValue) => (originalValue === \"\" ? null : value))\r\n    .notRequired()\r\n    .test(\"is-future-date\", \"Only Future Dates Allowed\", function (value) {\r\n      return !value || new Date(value) > new Date();\r\n    }),\r\n    uploadJobDetails:Yup.string().notRequired()\r\n});\r\n\r\n//WorkPass Tracking Forms Schema - Recruitment \r\nexport const SawpFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  sawpLtrReq: Yup.date().notRequired(),\r\n  sawpLtrRece: Yup.date().notRequired(),\r\n  sawpFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const DoeFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  doeSubmit: Yup.date().notRequired(),\r\n  doeApproval: Yup.date().notRequired(),\r\n  doeValid: Yup.date().notRequired(),\r\n  doeRefNo: Yup.string().notRequired(),\r\n  doeFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const NlmsFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  nlmsSubmit: Yup.date().notRequired(),\r\n  nlmsSubmitRefNo: Yup.string().notRequired(),\r\n  nlmsApproval: Yup.date().notRequired(),\r\n  nlmsValid: Yup.date().notRequired(),\r\n  ldRefNo: Yup.string().notRequired(),\r\n  nlmsFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const BankFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  bgSubmit: Yup.date().notRequired(),\r\n  bgRece: Yup.date().notRequired(),\r\n  bgValid: Yup.date().notRequired(),\r\n  bgRefNo: Yup.string().notRequired(),\r\n  bgAmount: Yup.string().notRequired(),\r\n  bgFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const JitpaFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  jpTbaPurchase: Yup.date().notRequired(),\r\n  jpEndorsement: Yup.date().notRequired(),\r\n  jitpaValid: Yup.date().notRequired(),\r\n  jpAmount: Yup.string().notRequired(),\r\n  jitpaFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const LabourDepFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  labDepReceiptNo: Yup.string().notRequired(),\r\n  labDepAmount: Yup.string().notRequired(),\r\n  labEndrose: Yup.date().notRequired(),\r\n  labDepFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const ImmigrationFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  immbdNo: Yup.string().notRequired(),\r\n  docSubmit: Yup.date().notRequired(),\r\n  visaApproval: Yup.date().notRequired(),\r\n  visaRefNo: Yup.string().notRequired(),\r\n  visaFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const AirTktFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  departure: Yup.date().notRequired(),\r\n  arrival: Yup.date().notRequired(),\r\n  cityName: Yup.string().notRequired(),\r\n  airFare: Yup.string().notRequired(),\r\n  airTktFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});\r\nexport const NonLocalMOBFormSchema = Yup.object().shape({\r\n  tempID: Yup.string().required(\"Temporary ID is Required\"),\r\n  mobSignDate: Yup.date().notRequired(),\r\n  agent: Yup.string().notRequired(),\r\n  remarkNLMob: Yup.string().notRequired(),\r\n  mobFile: Yup.mixed()\r\n    .nullable()\r\n    .notRequired()\r\n    .test(\"fileType\", \"Only PDF files are allowed\", (value) =>\r\n      value ? value.type === \"application/pdf\" : false\r\n    ),\r\n});"],"names":["ForgotPassword","_errors$newPassword","_errors$rePassword","isNewPasswordVisible","setIsNewPasswordVisible","useState","isRePasswordVisible","setIsRePasswordVisible","navigate","useNavigate","register","formState","errors","handleSubmit","useForm","resolver","yupResolver","newPasswordSchema","error","setError","Submit","async","console","log","data","_jsxs","className","children","_jsx","src","resetImage","alt","logo","htmlFor","_objectSpread","type","placeholder","id","name","IoEyeOutline","onClick","IoEyeOffOutline","newPassword","message","rePassword","LoginSchema","Yup","userID","required","password","min","oneOf","EmailSchema","userName","UserSchema","empID","selectType","officialEmail","contactNo","position","department","ApplicantSchema","currentPassword","max","matches","confirmPassword","shape","profilePhoto","test","value","agent","notRequired","contractType","empType","chinese","gender","dob","age","email","cob","nationality","otherNation","when","is","trim","toLowerCase","then","otherwise","marital","race","otherRace","religion","otherReligion","PersonalSchema","isBruneian","bwnIcNo","bwnIcColour","bwnIcExpiry","ppNo","ppIssued","ppExpiry","ppDestinate","alternateNo","presentAddress","permanentAddress","driveLic","lang","familyDetails","of","relationship","occupation","place","eduDetails","university","fromDate","toDate","degree","workExperience","companyAndAddress","salary","reasonLeaving","EducationSchema","referees","address","phoneNumber","profession","relatives","description","emgDetails","bloodGroup","disease","liquor","crime","diseaseDesc","liquorDesc","crimeDesc","CandidatesSchema","salaryExpectation","noExperience","noticePeriod","empStatement","perIS","perID","supportInfo","uploadResume","includes","uploadCertificate","uploadPp","EmpRequisitionSchema","nameReq","requestorID","approverID","project","quantity","typeError","reasonForReq","justification","replacementFor","qualification","tentativeDate","Date","status","remarkReq","InterviewScheduleSchema","interDate","interTime","venue","interType","empBadgeNo","manager","optional","hiringJobSchema","jobTitle","location","jobDesc","experience","startDate","nullable","transform","originalValue","expiryDate","uploadJobDetails","SawpFormSchema","tempID","sawpLtrReq","sawpLtrRece","sawpFile","DoeFormSchema","doeSubmit","doeApproval","doeValid","doeRefNo","doeFile","NlmsFormSchema","nlmsSubmit","nlmsSubmitRefNo","nlmsApproval","nlmsValid","ldRefNo","nlmsFile","BankFormSchema","bgSubmit","bgRece","bgValid","bgRefNo","bgAmount","bgFile","JitpaFormSchema","jpTbaPurchase","jpEndorsement","jitpaValid","jpAmount","jitpaFile","LabourDepFormSchema","labDepReceiptNo","labDepAmount","labEndrose","labDepFile","ImmigrationFormSchema","immbdNo","docSubmit","visaApproval","visaRefNo","visaFile","AirTktFormSchema","departure","arrival","cityName","airFare","airTktFile","NonLocalMOBFormSchema","mobSignDate","remarkNLMob","mobFile"],"sourceRoot":""}