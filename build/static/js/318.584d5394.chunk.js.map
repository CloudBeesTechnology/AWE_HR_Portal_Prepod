{"version":3,"file":"static/js/318.584d5394.chunk.js","mappings":"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","sources":["components/SvgIcons.jsx","components/RouterPaths.jsx","components/Sidebar.jsx"],"sourcesContent":["export const DashboardIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M7.551 0.588257H4.29715C2.93601 0.588257 1.82861 1.67394 1.82861 3.00839V7.30525C1.82861 8.63971 2.93601 9.72539 4.29715 9.72539H7.551C8.91226 9.72539 10.0197 8.63971 10.0197 7.30525V3.00839C10.0197 1.67394 8.91226 0.588257 7.551 0.588257ZM8.93394 7.30525C8.93394 8.05276 8.31356 8.66097 7.551 8.66097H4.29715C3.5347 8.66097 2.91433 8.05276 2.91433 7.30525V3.00839C2.91433 2.26089 3.5347 1.65268 4.29715 1.65268H7.551C8.31356 1.65268 8.93394 2.26089 8.93394 3.00839V7.30525Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M7.551 10.9395H4.29715C2.93601 10.9395 1.82861 12.0251 1.82861 13.3597V20.521C1.82861 21.8555 2.93601 22.9411 4.29715 22.9411H7.551C8.91226 22.9411 10.0197 21.8555 10.0197 20.521V13.3597C10.0197 12.0251 8.91226 10.9395 7.551 10.9395ZM8.93394 20.521C8.93394 21.2685 8.31356 21.8767 7.551 21.8767H4.29715C3.5347 21.8767 2.91433 21.2685 2.91433 20.521V13.3597C2.91433 12.6121 3.5347 12.0039 4.29715 12.0039H7.551C8.31356 12.0039 8.93394 12.6121 8.93394 13.3597V20.521Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M19.703 13.8041H16.4491C15.0879 13.8041 13.9805 14.8898 13.9805 16.2242V20.5211C13.9805 21.8555 15.0879 22.9412 16.4491 22.9412H19.703C21.0641 22.9412 22.1715 21.8555 22.1715 20.5211V16.2242C22.1715 14.8898 21.0641 13.8041 19.703 13.8041ZM21.0858 20.5211C21.0858 21.2686 20.4654 21.8768 19.703 21.8768H16.4491C15.6866 21.8768 15.0662 21.2686 15.0662 20.5211V16.2242C15.0662 15.4767 15.6866 14.8685 16.4491 14.8685H19.703C20.4654 14.8685 21.0858 15.4767 21.0858 16.2242V20.5211Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M19.703 0.588257H16.4491C15.0879 0.588257 13.9805 1.67394 13.9805 3.00839V10.1697C13.9805 11.5043 15.0879 12.59 16.4491 12.59H19.703C21.0641 12.59 22.1715 11.5043 22.1715 10.1697V3.00839C22.1715 1.67394 21.0641 0.588257 19.703 0.588257ZM21.0858 10.1697C21.0858 10.9173 20.4654 11.5255 19.703 11.5255H16.4491C15.6866 11.5255 15.0662 10.9173 15.0662 10.1697V3.00839C15.0662 2.26089 15.6866 1.65268 16.4491 1.65268H19.703C20.4654 1.65268 21.0858 2.26089 21.0858 3.00839V10.1697Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const UserIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"30\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 110 105\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M29.9492 37.52C29.9492 47.1919 37.8086 55.051 47.4692 55.051C57.1298 55.051 65.0002 47.1916 65.0002 37.52C65.0002 27.8484 57.1291 20 47.4692 20C37.8093 20 29.9492 27.8594 29.9492 37.52ZM62.0112 37.52C62.0112 45.5317 55.4917 52.051 47.4802 52.051C39.4687 52.051 32.9602 45.5315 32.9602 37.52C32.9602 29.5085 39.4719 23 47.4802 23C55.4919 23 62.0112 29.5195 62.0112 37.52Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M76.1019 67.2382C75.7621 67.2382 75.4301 67.2694 75.0902 67.289C71.8207 61.3007 65.4691 57.23 58.1922 57.23H36.7822C26.1732 57.23 17.5322 65.8589 17.5322 76.468V81.0969C17.5322 85.9953 21.5322 89.9875 26.4306 89.9875H61.0086C63.4969 95.8664 69.3289 99.9995 76.0986 99.9995C85.1377 99.9995 92.4776 92.6479 92.4776 83.6205C92.4776 74.5893 85.1378 67.2415 76.0986 67.2415L76.1019 67.2382ZM60.0709 86.9882H26.4229C23.1729 86.9882 20.5245 84.3476 20.5245 81.0976V76.4687C20.5245 67.5195 27.8136 60.2307 36.7745 60.2307H58.1845C63.9462 60.2307 69.0125 63.2619 71.8955 67.801C64.8955 69.6721 59.7155 76.0393 59.7155 83.621C59.7155 84.7812 59.8366 85.9022 60.0671 86.9921L60.0709 86.9882ZM76.1019 97.0002C68.723 97.0002 62.7229 91.0002 62.7229 83.6212C62.7229 76.2422 68.7229 70.2422 76.1019 70.2422C83.4808 70.2422 89.4809 76.2422 89.4809 83.6212C89.4809 91.0002 83.4809 97.0002 76.1019 97.0002Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M79.8202 79.5122L74.789 84.5434L72.3906 82.145C71.8008 81.5552 70.8515 81.5552 70.2695 82.145C69.6797 82.7348 69.6797 83.6841 70.2695 84.2661L74.789 88.7856L81.9374 81.6372C82.5273 81.0591 82.5273 80.106 81.9374 79.5161C81.3476 78.938 80.3983 78.938 79.8163 79.5161L79.8202 79.5122Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const RecruitmentIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"26\"\r\n      height=\"26\"\r\n      viewBox=\"0 0 26 26\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M20.1438 1.625H5.16528C4.71357 1.62875 4.27568 1.78113 3.91922 2.0586C3.56277 2.33607 3.30759 2.72319 3.19311 3.16017C3.07863 3.59714 3.11122 4.05965 3.28584 4.47625C3.46046 4.89285 3.76739 5.24037 4.15923 5.46511L4.15918 23.9688C4.15914 24.0221 4.16963 24.0749 4.19004 24.1243C4.21044 24.1736 4.24037 24.2184 4.2781 24.2561C4.31583 24.2938 4.36062 24.3237 4.40992 24.3441C4.45923 24.3645 4.51207 24.375 4.56543 24.375H20.1029C20.1563 24.375 20.2091 24.3645 20.2584 24.3441C20.3077 24.3237 20.3525 24.2938 20.3902 24.2561C20.428 24.2184 20.4579 24.1736 20.4783 24.1243C20.4987 24.0749 20.5092 24.0221 20.5092 23.9688V22.0454H22.473C22.5263 22.0454 22.5792 22.035 22.6285 22.0146C22.6778 21.9941 22.7226 21.9642 22.7603 21.9265C22.798 21.8888 22.8279 21.844 22.8484 21.7947C22.8688 21.7454 22.8792 21.6925 22.8792 21.6392V4.36084C22.8784 3.63556 22.59 2.94021 22.0772 2.42732C21.5644 1.91444 20.869 1.6259 20.1438 1.625ZM5.16528 2.4375H18.6797C18.4066 2.79494 18.2585 3.23227 18.2584 3.68212C18.2583 4.13196 18.4061 4.56937 18.679 4.92697H5.16528C4.83809 4.92251 4.52582 4.7894 4.29603 4.55646C4.06624 4.32351 3.9374 4.00945 3.9374 3.68224C3.9374 3.35502 4.06624 3.04096 4.29603 2.80802C4.52582 2.57507 4.83809 2.44196 5.16528 2.4375ZM19.6967 23.5625H4.97168V5.73947H19.6967V23.5625ZM22.0667 21.2329H20.5092V5.33322C20.5057 5.23375 20.4685 5.13842 20.4036 5.06298C20.3386 4.98753 20.2499 4.93648 20.1521 4.91826C19.8507 4.8804 19.5736 4.73342 19.3732 4.50512C19.1729 4.27682 19.0631 3.98302 19.0647 3.67926C19.3116 1.48554 22.1393 2.55997 22.0667 4.36086C22.0661 9.44803 22.0671 16.1563 22.0667 21.2329Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M17.9132 13.4784H10.8416C10.7338 13.4784 10.6305 13.5212 10.5543 13.5974C10.4781 13.6736 10.4353 13.7769 10.4353 13.8846C10.4353 13.9924 10.4781 14.0957 10.5543 14.1719C10.6305 14.2481 10.7338 14.2909 10.8416 14.2909H17.9132C18.0196 14.2888 18.1208 14.245 18.1953 14.1691C18.2697 14.0931 18.3114 13.991 18.3114 13.8846C18.3114 13.7783 18.2697 13.6762 18.1953 13.6002C18.1208 13.5243 18.0196 13.4805 17.9132 13.4784Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M16.1819 15.011H10.8415C10.7351 15.0131 10.6338 15.0568 10.5593 15.1327C10.4848 15.2087 10.4431 15.3109 10.4431 15.4173C10.4431 15.5236 10.4849 15.6258 10.5593 15.7017C10.6338 15.7777 10.7352 15.8214 10.8415 15.8235H16.1819C16.2882 15.8214 16.3895 15.7777 16.464 15.7017C16.5385 15.6258 16.5803 15.5236 16.5803 15.4172C16.5803 15.3108 16.5385 15.2087 16.464 15.1327C16.3895 15.0568 16.2882 15.0131 16.1819 15.011Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M8.8047 13.2234H6.76196C6.7086 13.2234 6.65576 13.2338 6.60646 13.2542C6.55716 13.2747 6.51236 13.3046 6.47463 13.3423C6.4369 13.38 6.40698 13.4248 6.38657 13.4741C6.36617 13.5234 6.35568 13.5763 6.35571 13.6296V15.6724C6.35568 15.7258 6.36617 15.7786 6.38657 15.8279C6.40698 15.8772 6.4369 15.922 6.47463 15.9597C6.51236 15.9975 6.55716 16.0274 6.60646 16.0478C6.65576 16.0682 6.7086 16.0787 6.76196 16.0786H8.80472C8.85808 16.0787 8.91092 16.0682 8.96022 16.0478C9.00952 16.0274 9.05432 15.9975 9.09205 15.9597C9.12978 15.922 9.1597 15.8772 9.18011 15.8279C9.20052 15.7786 9.21101 15.7258 9.21101 15.6724V13.6296C9.21101 13.5763 9.20052 13.5234 9.18011 13.4741C9.1597 13.4248 9.12978 13.38 9.09205 13.3423C9.05432 13.3046 9.00952 13.2747 8.96022 13.2542C8.91092 13.2338 8.85808 13.2234 8.8047 13.2234Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const EmployeeIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M10.9532 11.1267C10.0303 11.1267 9.12801 10.853 8.36058 10.3402C7.59315 9.82741 6.99501 9.09858 6.6418 8.24586C6.28859 7.39314 6.19618 6.45483 6.37624 5.54958C6.5563 4.64434 7.00076 3.81282 7.65341 3.16017C8.30605 2.50753 9.13757 2.06307 10.0428 1.88301C10.9481 1.70294 11.8864 1.79536 12.7391 2.14857C13.5918 2.50177 14.3206 3.09991 14.8334 3.86734C15.3462 4.63477 15.6199 5.53702 15.6199 6.46C15.6199 7.69768 15.1282 8.88467 14.2531 9.75984C13.3779 10.635 12.1909 11.1267 10.9532 11.1267ZM10.9532 3.18C10.294 3.18 9.6495 3.3755 9.10134 3.74177C8.55317 4.10804 8.12593 4.62864 7.87364 5.23773C7.62135 5.84681 7.55534 6.51703 7.68395 7.16364C7.81257 7.81024 8.13004 8.40418 8.59622 8.87036C9.06239 9.33653 9.65633 9.654 10.3029 9.78262C10.9495 9.91124 11.6198 9.84523 12.2288 9.59294C12.8379 9.34064 13.3585 8.9134 13.7248 8.36524C14.0911 7.81707 14.2866 7.17261 14.2866 6.51334C14.2866 6.0756 14.2004 5.64214 14.0328 5.23773C13.8653 4.83331 13.6198 4.46584 13.3103 4.15631C13.0007 3.84679 12.6333 3.60125 12.2288 3.43374C11.8244 3.26622 11.391 3.18 10.9532 3.18ZM14.6666 11.9333C11.0589 11.121 7.28446 11.5121 3.91991 13.0467C3.45717 13.2677 3.06675 13.6157 2.7941 14.05C2.52146 14.4843 2.37782 14.9872 2.37991 15.5V19.4667C2.37991 19.5542 2.39715 19.6409 2.43065 19.7218C2.46416 19.8027 2.51326 19.8762 2.57517 19.9381C2.63707 20 2.71057 20.0491 2.79145 20.0826C2.87233 20.1161 2.95902 20.1333 3.04657 20.1333C3.13412 20.1333 3.22081 20.1161 3.30169 20.0826C3.38258 20.0491 3.45607 20 3.51798 19.9381C3.57988 19.8762 3.62899 19.8027 3.66249 19.7218C3.69599 19.6409 3.71324 19.5542 3.71324 19.4667V15.5C3.70743 15.2405 3.77752 14.9849 3.91489 14.7646C4.05226 14.5443 4.25095 14.369 4.48657 14.26C6.51335 13.3239 8.72076 12.8438 10.9532 12.8533C12.2041 12.8519 13.4507 12.9996 14.6666 13.2933V11.9333ZM14.7599 18.2733H18.8532V19.2067H14.7599V18.2733Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M22.1134 14.3133H18.6667V15.6466H21.4467V21.2266H12.0001V15.6466H16.2001V15.9266C16.2001 16.1034 16.2703 16.273 16.3953 16.398C16.5204 16.5231 16.6899 16.5933 16.8667 16.5933C17.0436 16.5933 17.2131 16.5231 17.3382 16.398C17.4632 16.273 17.5334 16.1034 17.5334 15.9266V13.3333C17.5334 13.1565 17.4632 12.9869 17.3382 12.8619C17.2131 12.7369 17.0436 12.6666 16.8667 12.6666C16.6899 12.6666 16.5204 12.7369 16.3953 12.8619C16.2703 12.9869 16.2001 13.1565 16.2001 13.3333V14.3133H11.3334C11.1566 14.3133 10.987 14.3835 10.862 14.5086C10.737 14.6336 10.6667 14.8031 10.6667 14.98V21.8933C10.6667 22.0701 10.737 22.2397 10.862 22.3647C10.987 22.4897 11.1566 22.56 11.3334 22.56H22.1134C22.2902 22.56 22.4598 22.4897 22.5848 22.3647C22.7098 22.2397 22.7801 22.0701 22.7801 21.8933V14.98C22.7801 14.8031 22.7098 14.6336 22.5848 14.5086C22.4598 14.3835 22.2902 14.3133 22.1134 14.3133Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const InsuranceIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"30\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 38 41\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M31.1771 7.46751C26.8283 6.63181 21.7768 3.79963 18.8928 0.580934C18.8467 0.529415 18.7913 0.488419 18.73 0.460413C18.6688 0.432406 18.6028 0.417969 18.5362 0.417969C18.4695 0.417969 18.4036 0.432406 18.3423 0.460413C18.281 0.488419 18.2256 0.529415 18.1795 0.580934C15.2959 3.79963 10.2424 6.63139 5.89209 7.46751C5.77792 7.48938 5.67459 7.55358 5.60018 7.64884C5.52577 7.74411 5.48503 7.86437 5.48511 7.98856V27.3229C5.48511 28.9387 7.04162 31.363 9.64855 33.8075C12.3281 36.32 15.5133 38.3052 18.3891 39.2545C18.4839 39.2857 18.5853 39.2857 18.6802 39.2545C21.5544 38.3052 24.7396 36.32 27.4207 33.8075C30.0276 31.363 31.5841 28.9387 31.5841 27.3229V7.98856C31.5842 7.86437 31.5435 7.74411 31.469 7.64884C31.3946 7.55358 31.2913 7.48938 31.1771 7.46751ZM30.5957 27.3229C30.5957 28.599 29.0938 30.8328 26.7694 33.011C24.3704 35.3019 21.5725 37.0627 18.5362 38.1924C15.4993 37.0627 12.7007 35.3016 10.3014 33.0102C7.97693 30.8307 6.47505 28.5981 6.47505 27.322V8.42605C10.8004 7.49132 15.5336 4.84717 18.5346 1.69952C21.5356 4.84885 26.2688 7.49132 30.5942 8.42689L30.5957 27.3229ZM18.2256 4.51289C15.3618 6.92162 12.0936 8.72057 8.59774 9.81248C8.4946 9.84422 8.4039 9.91105 8.33935 10.0029C8.2748 10.0947 8.2399 10.2065 8.23993 10.3214V27.2464C8.23991 27.2904 8.24503 27.3342 8.25515 27.3768C8.48413 27.9935 8.80226 28.5678 9.19787 29.0787C9.97033 30.1078 10.839 31.0496 11.7904 31.8895C13.7452 33.6846 15.9661 35.1178 18.3614 36.1303C18.4731 36.1749 18.5961 36.1749 18.7079 36.1303C21.1032 35.1178 23.324 33.6846 25.2788 31.8895C26.2299 31.0494 27.0986 30.1078 27.8713 29.0791C28.2669 28.568 28.585 27.9936 28.8141 27.3768C28.8242 27.3342 28.8293 27.2904 28.8293 27.2464V10.321C28.8293 10.2061 28.7944 10.0943 28.7299 10.0024C28.6653 9.91063 28.5746 9.84381 28.4715 9.81206C24.9756 8.72028 21.7075 6.92148 18.8436 4.51289C18.756 4.43747 18.647 4.39636 18.5346 4.39636C18.4222 4.39636 18.3132 4.43747 18.2256 4.51289ZM27.8409 10.7171V27.1683C27.6382 27.6178 27.3871 28.0403 27.0925 28.4272C26.3618 29.3987 25.5404 30.2879 24.6413 31.081C22.8191 32.7529 20.7571 34.0992 18.5346 35.0681C16.3121 34.0992 14.2501 32.7529 12.428 31.081C11.5288 30.2879 10.7075 29.3987 9.97671 28.4272C9.68217 28.0403 9.43098 27.6178 9.22831 27.1683V10.7171C12.5888 9.61434 15.7398 7.88152 18.5346 5.5993C21.3295 7.88152 24.4804 9.61434 27.8409 10.7171ZM14.9537 15.1396C14.9537 15.898 15.1637 16.6394 15.5572 17.27C15.9507 17.9006 16.5099 18.3921 17.1643 18.6823C17.8186 18.9726 18.5386 19.0485 19.2332 18.9006C19.9278 18.7526 20.5659 18.3874 21.0667 17.8511C21.5675 17.3148 21.9085 16.6316 22.0467 15.8877C22.1849 15.1439 22.1139 14.3729 21.8429 13.6722C21.5719 12.9715 21.1129 12.3726 20.524 11.9513C19.9352 11.5299 19.2428 11.305 18.5346 11.305C17.5853 11.3062 16.6751 11.7106 16.0038 12.4295C15.3325 13.1484 14.9549 14.123 14.9537 15.1396ZM21.1271 15.1396C21.1271 15.6887 20.9751 16.2255 20.6902 16.682C20.4053 17.1385 20.0004 17.4944 19.5267 17.7045C19.053 17.9146 18.5317 17.9696 18.0288 17.8625C17.5259 17.7554 17.064 17.491 16.7014 17.1027C16.3389 16.7144 16.092 16.2198 15.9919 15.6812C15.8919 15.1427 15.9432 14.5845 16.1395 14.0772C16.3357 13.57 16.668 13.1364 17.0943 12.8313C17.5206 12.5263 18.0219 12.3634 18.5346 12.3634C19.2219 12.3643 19.8809 12.6571 20.3669 13.1775C20.8529 13.698 21.1263 14.4036 21.1271 15.1396ZM12.2824 26.7654C12.2824 26.9059 12.3345 27.0405 12.4272 27.1398C12.5199 27.2391 12.6457 27.2949 12.7768 27.2949H24.2924C24.4235 27.2949 24.5493 27.2391 24.642 27.1398C24.7347 27.0405 24.7868 26.9059 24.7868 26.7654C24.7868 24.9898 24.1281 23.2868 22.9556 22.0312C21.7831 20.7756 20.1928 20.0703 18.5346 20.0703C16.8764 20.0703 15.2862 20.7756 14.1136 22.0312C12.9411 23.2868 12.2824 24.9898 12.2824 26.7654ZM23.7754 26.2365H21.8482V24.4443C21.8446 24.3065 21.7909 24.1757 21.6986 24.0796C21.6064 23.9835 21.4827 23.9298 21.354 23.9298C21.2253 23.9298 21.1017 23.9835 21.0094 24.0796C20.9171 24.1757 20.8634 24.3065 20.8598 24.4443V26.236H16.2094V24.4443C16.2058 24.3065 16.1521 24.1757 16.0598 24.0796C15.9676 23.9835 15.8439 23.9298 15.7152 23.9298C15.5865 23.9298 15.4629 23.9835 15.3706 24.0796C15.2783 24.1757 15.2246 24.3065 15.221 24.4443V26.236H13.2938C13.4173 24.8391 14.0227 23.5417 14.9919 22.5975C15.9611 21.6532 17.2243 21.1299 18.5346 21.1299C19.8449 21.1299 21.1081 21.6532 22.0773 22.5975C23.0465 23.5417 23.652 24.8391 23.7754 26.236V26.2365Z\"\r\n        fill={props.color}\r\n      />\r\n   \r\n    </svg>\r\n  );\r\n};\r\nexport const LeaveIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M14.3272 15.5879C14.0605 15.5879 13.8181 15.8303 13.8181 16.097V19.8546H3.68476V4.43639H13.8181V8.21821C13.8181 8.48488 14.0605 8.7273 14.3272 8.7273C14.5938 8.7273 14.8363 8.48488 14.8363 8.21821V3.9273C14.8363 3.66064 14.5938 3.41821 14.3272 3.41821H3.17567C2.88476 3.41821 2.64233 3.63639 2.64233 3.9273V20.3637C2.64233 20.6303 2.88476 20.8728 3.15143 20.8728H14.3029C14.5696 20.8728 14.812 20.6303 14.812 20.3637V16.097C14.8363 15.8061 14.5938 15.5879 14.3272 15.5879Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M21.7938 12.5576C21.7938 12.5091 21.7938 12.4849 21.7938 12.4606C21.7938 12.4364 21.7938 12.4122 21.7695 12.3879C21.7695 12.3637 21.7695 12.3394 21.7453 12.3152C21.7453 12.3152 21.7453 12.2909 21.721 12.2909C21.6968 12.2667 21.6968 12.2425 21.6726 12.2182C21.6483 12.194 21.6483 12.1697 21.6241 12.1697C21.6241 12.1697 21.6241 12.1455 21.5998 12.1455L17.6241 8.04852C17.4301 7.83034 17.0907 7.83034 16.8968 8.04852C16.6786 8.24246 16.6786 8.58186 16.8726 8.7758L20.0483 12.0485H10.9817H10.9574H8.72711C8.46044 12.0485 8.21802 12.2909 8.21802 12.5576C8.21802 12.8243 8.46044 13.0667 8.72711 13.0667H20.0726L16.921 16.3152C16.7271 16.5334 16.7271 16.8485 16.9453 17.0425C17.0423 17.1394 17.1877 17.1879 17.3089 17.1879C17.4301 17.1879 17.5756 17.1394 17.6726 17.0425L21.6726 12.897C21.6726 12.897 21.6968 12.8728 21.6968 12.8485C21.721 12.8 21.7695 12.7758 21.7695 12.7273C21.7695 12.7273 21.7695 12.7273 21.7695 12.7031C21.7938 12.6788 21.7938 12.6303 21.7938 12.5576C21.7938 12.5819 21.7938 12.5819 21.7938 12.5576Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const LogoutIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12 22C6.477 22 2 17.523 2 12C2 6.477 6.477 2 12 2C13.5526 1.99922 15.084 2.36033 16.4727 3.05467C17.8613 3.74901 19.0691 4.75746 20 6H17.29C16.1352 4.98176 14.7112 4.31836 13.1887 4.0894C11.6663 3.86044 10.1101 4.07566 8.70689 4.70921C7.30371 5.34277 6.11315 6.36776 5.27807 7.66119C4.44299 8.95461 3.99887 10.4615 3.999 12.0011C3.99913 13.5407 4.4435 15.0475 5.27879 16.3408C6.11409 17.6341 7.30482 18.6589 8.7081 19.2922C10.1114 19.9255 11.6676 20.1405 13.19 19.9113C14.7125 19.6821 16.1364 19.0184 17.291 18H20.001C19.07 19.2427 17.8621 20.2512 16.4732 20.9456C15.0844 21.6399 13.5528 22.0009 12 22ZM19 16V13H11V11H19V8L24 12L19 16Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const NotificationIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"23\"\r\n      viewBox=\"0 0 24 23\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M21.34 5.70406C21.3399 4.85729 21.0326 4.03931 20.4751 3.40207C19.9176 2.76482 19.1478 2.35162 18.3086 2.2392C17.4695 2.12679 16.6181 2.32281 15.9126 2.79085C15.2071 3.25889 14.6954 3.96715 14.4725 4.78406H3.67925C3.28892 4.78406 2.91458 4.93914 2.63858 5.2152C2.36258 5.49125 2.20752 5.86566 2.20752 6.25606V16.1921C2.20752 16.5825 2.36258 16.9569 2.63858 17.2329C2.91458 17.509 3.28892 17.6641 3.67925 17.6641H12.7248L16.2975 21.2355C16.3661 21.3046 16.4594 21.3436 16.5568 21.3441C16.6054 21.344 16.6535 21.3346 16.6985 21.3165C16.7656 21.2884 16.823 21.2412 16.8632 21.1806C16.9035 21.12 16.9249 21.0488 16.9248 20.9761V17.6641H18.3965C18.7868 17.6641 19.1612 17.509 19.4372 17.2329C19.7132 16.9569 19.8682 16.5825 19.8682 16.1921V8.55422C20.3246 8.23253 20.6967 7.80549 20.9529 7.30932C21.2091 6.81315 21.3419 6.26249 21.34 5.70406ZM17.8446 2.94406C18.3904 2.94406 18.9239 3.10593 19.3777 3.4092C19.8315 3.71247 20.1852 4.14353 20.394 4.64785C20.6029 5.15217 20.6575 5.70712 20.5511 6.24251C20.4446 6.77789 20.1818 7.26968 19.7959 7.65567C19.4099 8.04166 18.9182 8.30453 18.383 8.41102C17.8477 8.51752 17.2928 8.46286 16.7886 8.25396C16.2844 8.04507 15.8534 7.69131 15.5502 7.23743C15.247 6.78355 15.0851 6.24993 15.0851 5.70406C15.0849 5.54051 15.0997 5.37729 15.1293 5.21646C15.2436 4.57934 15.5782 4.00268 16.0746 3.5873C16.5709 3.17191 17.1974 2.94423 17.8446 2.94406ZM19.1324 16.1921C19.1324 16.3873 19.0548 16.5745 18.9168 16.7125C18.7788 16.8505 18.5917 16.9281 18.3965 16.9281H16.5568C16.4593 16.9281 16.3657 16.9668 16.2967 17.0358C16.2277 17.1049 16.1889 17.1985 16.1889 17.2961V20.0873L13.1369 17.0366C13.0682 16.9675 12.975 16.9285 12.8775 16.9281H3.67925C3.48408 16.9281 3.29691 16.8505 3.15891 16.7125C3.02091 16.5745 2.94338 16.3873 2.94338 16.1921V6.25606C2.94338 6.06086 3.02091 5.87365 3.15891 5.73563C3.29691 5.5976 3.48408 5.52006 3.67925 5.52006H14.3493C14.3493 5.58078 14.3493 5.64334 14.3493 5.70406C14.3493 6.63125 14.7175 7.52047 15.373 8.1761C16.0285 8.83173 16.9176 9.20006 17.8446 9.20006C17.944 9.20006 18.0433 9.20006 18.1426 9.18534L18.2291 9.17614C18.3027 9.17614 18.3763 9.15774 18.4499 9.14486L18.5308 9.13198C18.6265 9.11174 18.7148 9.08966 18.8178 9.06206H18.8435C18.93 9.0363 19.0146 9.00686 19.0993 8.97374L19.1324 8.9627V16.1921Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M15.0852 8.64807H6.99073C6.89315 8.64807 6.79957 8.68684 6.73057 8.75586C6.66157 8.82487 6.6228 8.91847 6.6228 9.01607C6.6228 9.11367 6.66157 9.20727 6.73057 9.27629C6.79957 9.3453 6.89315 9.38407 6.99073 9.38407H15.0852C15.1828 9.38407 15.2764 9.3453 15.3454 9.27629C15.4144 9.20727 15.4532 9.11367 15.4532 9.01607C15.4532 8.91847 15.4144 8.82487 15.3454 8.75586C15.2764 8.68684 15.1828 8.64807 15.0852 8.64807Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M15.0852 10.8561H6.99073C6.89315 10.8561 6.79957 10.8949 6.73057 10.9639C6.66157 11.0329 6.6228 11.1265 6.6228 11.2241C6.6228 11.3217 6.66157 11.4153 6.73057 11.4843C6.79957 11.5533 6.89315 11.5921 6.99073 11.5921H15.0852C15.1828 11.5921 15.2764 11.5533 15.3454 11.4843C15.4144 11.4153 15.4532 11.3217 15.4532 11.2241C15.4532 11.1265 15.4144 11.0329 15.3454 10.9639C15.2764 10.8949 15.1828 10.8561 15.0852 10.8561Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M15.0852 13.0641H6.99073C6.89315 13.0641 6.79957 13.1029 6.73057 13.1719C6.66157 13.2409 6.6228 13.3345 6.6228 13.4321C6.6228 13.5297 6.66157 13.6233 6.73057 13.6923C6.79957 13.7613 6.89315 13.8001 6.99073 13.8001H15.0852C15.1828 13.8001 15.2764 13.7613 15.3454 13.6923C15.4144 13.6233 15.4532 13.5297 15.4532 13.4321C15.4532 13.3345 15.4144 13.2409 15.3454 13.1719C15.2764 13.1029 15.1828 13.0641 15.0852 13.0641Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const ReportIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"19\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 19 20\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g clipPath=\"url(#clip0_904_1540)\">\r\n        <path\r\n          d=\"M4.72597 9.94466C4.72597 9.7774 4.86269 9.64172 5.03122 9.64172H11.3881C11.5566 9.64172 11.6933 9.7774 11.6933 9.94466C11.6933 10.1119 11.5566 10.2476 11.3881 10.2476H5.03122C4.86249 10.2476 4.72597 10.1121 4.72597 9.94466ZM5.03122 12.5035H10.2155C10.384 12.5035 10.5207 12.3678 10.5207 12.2005C10.5207 12.0333 10.384 11.8976 10.2155 11.8976H5.03122C4.86269 11.8976 4.72597 12.0333 4.72597 12.2005C4.72597 12.3678 4.86249 12.5035 5.03122 12.5035ZM5.03122 7.99172H11.3881C11.5566 7.99172 11.6933 7.85603 11.6933 7.68878C11.6933 7.52152 11.5566 7.38584 11.3881 7.38584H5.03122C4.86269 7.38584 4.72597 7.52152 4.72597 7.68878C4.72597 7.85603 4.86249 7.99172 5.03122 7.99172ZM17.8719 6.88152L14.9159 11.9886V18.3243C14.9159 18.4915 14.7792 18.6272 14.6106 18.6272H2.03742C1.8689 18.6272 1.73218 18.4915 1.73218 18.3243V3.82074C1.73218 3.80133 1.73435 3.7825 1.73791 3.76407C1.7381 3.76309 1.7381 3.76211 1.7381 3.76113C1.74344 3.73466 1.75312 3.71015 1.76478 3.68682C1.76754 3.68152 1.77031 3.67642 1.77327 3.67113C1.7869 3.6476 1.80251 3.62525 1.82187 3.60623L4.37785 1.06956C4.39701 1.05054 4.41934 1.03505 4.44305 1.02152C4.44858 1.01839 4.45372 1.01544 4.45945 1.0127C4.48296 1.00113 4.50746 0.991719 4.53393 0.986425C4.53531 0.986229 4.5367 0.986229 4.53808 0.986033C4.55626 0.9827 4.57483 0.980347 4.59399 0.980347H14.6106C14.7792 0.980347 14.9159 1.11603 14.9159 1.28329V6.47701L15.4738 5.5129C15.6242 5.25329 15.8913 5.05074 16.1888 4.97133C16.4806 4.89348 16.779 4.93505 17.052 5.09113L17.4483 5.31839C17.9984 5.63368 18.1884 6.33486 17.8719 6.88152ZM15.4084 9.92152L14.0703 9.15466L12.3407 12.1427C12.8445 12.1566 13.4082 12.487 13.6688 12.9268L15.4084 9.92152ZM12.0521 12.8576L12.1376 13.998L13.1814 13.5184C13.2022 13.478 13.2332 13.3878 13.1451 13.2368C12.9917 12.9749 12.6009 12.7456 12.3076 12.7456C12.3072 12.7456 12.3066 12.7456 12.3062 12.7456C12.158 12.7462 12.0898 12.8043 12.0521 12.8576ZM2.77417 3.5178H4.28874V2.01466L2.77417 3.5178ZM14.3054 13.0435L13.8599 13.8133C13.8283 13.8676 13.7806 13.9109 13.7233 13.9374L11.9944 14.7315C11.9535 14.7503 11.9098 14.7596 11.8662 14.7596C11.8243 14.7596 11.783 14.7484 11.7441 14.7313C11.7054 14.749 11.6625 14.7596 11.617 14.7596H5.03122C4.86269 14.7596 4.72597 14.6239 4.72597 14.4566C4.72597 14.2894 4.86269 14.1537 5.03122 14.1537H11.5372L11.422 12.6182C11.4175 12.5578 11.4313 12.4974 11.4618 12.4449L13.6935 8.58917C13.6935 8.58917 13.6935 8.58897 13.6935 8.58878L14.3054 7.53172V1.58623H4.89924V3.82074C4.89924 3.98799 4.76252 4.12368 4.59399 4.12368H2.34267V18.0215H14.3054V13.0435ZM17.1431 5.84329L16.7468 5.61603C16.6152 5.54093 16.4802 5.52054 16.3477 5.55662C16.2076 5.59407 16.0725 5.69544 16.0033 5.81486L14.3743 8.62917L15.7125 9.39584L17.3426 6.57956C17.4918 6.32211 17.4023 5.99172 17.1431 5.84329Z\"\r\n          fill={props.color}\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_904_1540\">\r\n          <rect width=\"18.7692\" height=\"20\" fill={props.color} />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\nexport const RewardIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"21\"\r\n      height=\"23\"\r\n      viewBox=\"0 0 21 23\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M18.5158 17.8898L15.9853 14.5193C16.0168 14.4185 16.042 14.3135 16.0588 14.2043L16.1512 13.5428C16.2079 13.1375 16.4305 12.8267 16.7959 12.6398L17.4805 12.2912C17.9194 12.0686 18.2176 11.7158 18.3667 11.2454C18.5158 10.775 18.4717 10.3172 18.2407 9.88044L17.9257 9.29244C17.7325 8.93124 17.7304 8.54904 17.9152 8.18364L18.2638 7.50114C18.4885 7.06224 18.5221 6.60234 18.3667 6.13404C18.2113 5.66574 17.9068 5.31924 17.4637 5.10504L16.8631 4.81314C16.4956 4.63464 16.2667 4.32594 16.2037 3.92274L16.084 3.16464C16.0084 2.67744 15.7648 2.28474 15.3637 1.99914C14.9626 1.71354 14.5132 1.61064 14.0281 1.69674L13.3708 1.81434C12.9676 1.88574 12.6022 1.77024 12.3145 1.48044L11.7727 0.936541C11.422 0.590041 10.9957 0.417841 10.5022 0.419941C10.0087 0.424141 9.58656 0.606841 9.24426 0.961741L8.78016 1.44264C8.49666 1.73664 8.13336 1.85844 7.72806 1.79334L6.97206 1.67364C6.48486 1.59594 6.03756 1.70514 5.64066 1.99914C5.24376 2.29314 5.00856 2.68794 4.94136 3.17724L4.84896 3.83874C4.79226 4.24404 4.56966 4.55484 4.20426 4.74174L3.51966 5.09034C3.08076 5.31294 2.78256 5.66574 2.63346 6.13614C2.48436 6.60654 2.52846 7.06434 2.75946 7.50114L3.07446 8.08914C3.26766 8.45034 3.26976 8.83254 3.08496 9.19794L2.73636 9.88044C2.51166 10.3193 2.47806 10.7792 2.63346 11.2475C2.78886 11.7158 3.09336 12.0623 3.53646 12.2765L4.13706 12.5684C4.50456 12.7469 4.73346 13.0556 4.79646 13.4588L4.91616 14.2169C4.93506 14.3303 4.96236 14.4395 4.99806 14.5445L2.48436 17.8898C2.41926 17.9759 2.40876 18.0935 2.45706 18.1901C2.50536 18.2867 2.60616 18.3476 2.71536 18.3476L5.14086 18.3203L6.32946 20.435C6.37986 20.5253 6.47646 20.5799 6.57936 20.5799C6.58356 20.5799 6.58986 20.5799 6.59406 20.5799C6.70326 20.5736 6.79776 20.5064 6.84186 20.4077L8.74236 15.9536L9.22956 16.4429C9.57396 16.7873 9.99396 16.9616 10.4791 16.9616C10.4854 16.9616 10.4917 16.9616 10.4959 16.9616C10.9894 16.9574 11.4115 16.7747 11.7538 16.4198L12.2179 15.9389C12.2263 15.9305 12.2347 15.9242 12.2431 15.9158L14.1583 20.4056C14.2003 20.5064 14.2969 20.5736 14.4061 20.5778C14.4103 20.5778 14.4166 20.5778 14.4208 20.5778C14.5237 20.5778 14.6182 20.5232 14.6707 20.4329L15.8593 18.3182L18.2848 18.3455C18.394 18.3476 18.4927 18.2867 18.5431 18.188C18.5914 18.0935 18.5809 17.9759 18.5158 17.8898ZM6.54366 19.6475L5.55666 17.8919C5.50626 17.8016 5.40756 17.7449 5.30466 17.747L3.28866 17.7701L5.30886 15.08C5.40336 15.1892 5.51046 15.29 5.63646 15.3803C6.03756 15.6659 6.48696 15.7688 6.97206 15.6827L7.62936 15.5651C7.85406 15.5252 8.06616 15.5462 8.26146 15.6197L6.54366 19.6475ZM11.3443 16.0229C11.1091 16.2665 10.8298 16.3862 10.4917 16.3904C10.4875 16.3904 10.4833 16.3904 10.4791 16.3904C10.1473 16.3904 9.87006 16.2749 9.63276 16.0376L9.09096 15.4937C8.75076 15.1514 8.32026 14.9729 7.85616 14.9729C7.74906 14.9729 7.63986 14.9834 7.52856 15.0023L6.87126 15.1199C6.53736 15.1787 6.24126 15.1115 5.96616 14.9162C5.69106 14.7188 5.53146 14.4605 5.47896 14.1266L5.35926 13.3685C5.26686 12.7805 4.92036 12.3122 4.38486 12.0518L3.78846 11.7599C3.48396 11.6108 3.28446 11.384 3.17736 11.0627C3.07026 10.7414 3.09336 10.439 3.24666 10.1387L3.59526 9.45624C3.86616 8.92704 3.86196 8.34534 3.58056 7.81824L3.26556 7.23024C3.10596 6.93204 3.07866 6.62964 3.17946 6.30624C3.28026 5.98284 3.47766 5.75184 3.78006 5.59854L4.46466 5.24994C4.99596 4.98114 5.33406 4.50654 5.41596 3.91644L5.50836 3.25494C5.55456 2.91894 5.70996 2.65854 5.98296 2.45694C6.25596 2.25534 6.54996 2.18394 6.88386 2.23644L7.64196 2.35824C8.22996 2.45274 8.78226 2.26794 9.19386 1.83954L9.65796 1.35864C9.89316 1.11504 10.1725 0.995341 10.5106 0.991141C10.8487 0.989041 11.1301 1.10244 11.3695 1.34184L11.9113 1.88574C12.3313 2.30784 12.8857 2.48214 13.4716 2.37714L14.1289 2.25954C14.4628 2.20074 14.7589 2.26794 15.034 2.46324C15.3091 2.66064 15.4687 2.91684 15.5212 3.25284L15.6409 4.01094C15.7333 4.59894 16.0798 5.06724 16.6153 5.32764L17.2159 5.61954C17.5204 5.76864 17.7199 5.99544 17.827 6.31674C17.9341 6.63804 17.911 6.94044 17.7577 7.24074L17.4091 7.92324C17.1382 8.45454 17.1424 9.03414 17.4238 9.56124L17.7388 10.1513C17.8984 10.4495 17.9257 10.7519 17.8249 11.0753C17.7241 11.3987 17.5267 11.6297 17.2243 11.783L16.5397 12.1316C16.0084 12.4004 15.6703 12.875 15.5884 13.4651L15.496 14.1266C15.4498 14.4626 15.2944 14.723 15.0214 14.9246C14.7484 15.1262 14.4544 15.1976 14.1205 15.1451L13.3624 15.0233C12.7744 14.9288 12.2221 15.1136 11.8105 15.542L11.3443 16.0229ZM15.6955 17.747C15.5926 17.7449 15.4939 17.8016 15.4435 17.8919L14.4565 19.6475L12.7366 15.6176C12.9025 15.5693 13.081 15.5567 13.27 15.5861L14.0281 15.7079C14.5153 15.7856 14.9626 15.6764 15.3595 15.3824C15.4855 15.29 15.5926 15.185 15.6871 15.0716L17.7136 17.7701L15.6955 17.747ZM15.8068 8.68974C15.8068 5.76444 13.4254 3.38304 10.5001 3.38304C7.57476 3.38304 5.19336 5.76444 5.19336 8.68974C5.19336 11.615 7.57476 13.9964 10.5001 13.9964C13.4254 13.9964 15.8068 11.6171 15.8068 8.68974ZM10.5001 13.4252C7.88976 13.4252 5.76456 11.3021 5.76456 8.68974C5.76456 6.07734 7.88976 3.95634 10.5001 3.95634C13.1104 3.95634 15.2356 6.07944 15.2356 8.69184C15.2356 11.3042 13.1104 13.4252 10.5001 13.4252ZM13.501 7.44234L11.5795 7.20294L10.7584 5.44944C10.7122 5.34864 10.6114 5.28564 10.5001 5.28564C10.3888 5.28564 10.288 5.35074 10.2418 5.44944L9.42066 7.20294L7.49916 7.44234C7.38996 7.45704 7.29756 7.53264 7.26186 7.63764C7.22826 7.74264 7.25766 7.85814 7.33746 7.93374L8.75076 9.25674L8.38536 11.1593C8.36436 11.2685 8.40846 11.3798 8.49876 11.4449C8.58906 11.51 8.70666 11.5184 8.80536 11.4638L10.5001 10.5293L12.1948 11.4659C12.2389 11.489 12.2851 11.5016 12.3334 11.5016C12.3922 11.5016 12.451 11.4827 12.5014 11.447C12.5917 11.3819 12.6358 11.2706 12.6148 11.1614L12.2494 9.25884L13.6627 7.93584C13.7446 7.86024 13.774 7.74474 13.7383 7.63974C13.7047 7.53264 13.6123 7.45704 13.501 7.44234ZM11.7433 8.94804C11.6719 9.01524 11.6404 9.11394 11.6572 9.21054L11.9386 10.6679L10.6387 9.94974C10.5526 9.90144 10.4476 9.90144 10.3636 9.94974L9.06366 10.6679L9.34506 9.21054C9.36396 9.11394 9.33036 9.01524 9.25896 8.94804L8.17536 7.93374L9.64746 7.75104C9.74406 7.73844 9.83016 7.67754 9.87006 7.58934L10.5001 6.24534L11.1301 7.58934C11.1721 7.67754 11.2561 7.73844 11.3527 7.75104L12.8248 7.93374L11.7433 8.94804Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const TimeIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"26\"\r\n      height=\"25\"\r\n      viewBox=\"0 0 26 25\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M4.12376 20.8207H13.6438C14.3946 22.2907 15.9447 23.3051 17.7361 23.3051C20.2514 23.3051 22.2978 21.3067 22.3068 18.8469C22.307 18.8418 22.3098 18.8376 22.3098 18.8326C22.3098 18.8279 22.3073 18.8241 22.3071 18.8195C22.3023 16.9277 21.0882 15.3124 19.3835 14.6653V7.01967C19.3835 7.00822 19.3778 6.99862 19.3769 6.9874C19.3741 6.95564 19.3678 6.9252 19.3578 6.89486C19.3512 6.87427 19.3456 6.85433 19.3361 6.83522C19.3248 6.81319 19.3089 6.79384 19.2937 6.77375C19.2772 6.75182 19.263 6.72924 19.2426 6.7108L14.6878 2.25712C14.6663 2.23433 14.6399 2.21827 14.6138 2.20053C14.5972 2.18926 14.5817 2.17638 14.5639 2.16758C14.5406 2.1561 14.5162 2.14948 14.4908 2.14221C14.4664 2.1352 14.4421 2.13034 14.4168 2.12763C14.4012 2.12595 14.3875 2.11865 14.3714 2.11865H4.12376C3.88424 2.11865 3.69043 2.30838 3.69043 2.54238V20.3969C3.69043 20.6309 3.88424 20.8207 4.12376 20.8207ZM21.4137 18.4088H20.9861C20.7466 18.4088 20.5528 18.5986 20.5528 18.8326C20.5528 19.0666 20.7466 19.2563 20.9861 19.2563H21.4132C21.2137 20.9166 19.8658 22.236 18.1694 22.4306V22.0105C18.1694 21.7765 17.9756 21.5868 17.7361 21.5868C17.4966 21.5868 17.3028 21.7765 17.3028 22.0105V22.4307C15.9574 22.2767 14.829 21.418 14.319 20.2414C14.3171 20.2365 14.3157 20.2316 14.3136 20.2269C14.1831 19.9222 14.0956 19.5961 14.0548 19.2563H14.4861C14.7256 19.2563 14.9194 19.0666 14.9194 18.8326C14.9194 18.5986 14.7256 18.4088 14.4861 18.4088H14.0543C14.2526 16.7485 15.6032 15.4289 17.3028 15.2346V15.6546C17.3028 15.8886 17.4966 16.0783 17.7361 16.0783C17.9756 16.0783 18.1694 15.8886 18.1694 15.6546V15.2347C19.867 15.4292 21.2156 16.7487 21.4137 18.4088ZM14.8026 3.56777L17.9033 6.59946H14.8026V3.56777ZM4.5571 2.96611H13.936V7.02319C13.936 7.25719 14.1298 7.44692 14.3693 7.44692H18.5169V14.4303C18.2626 14.3873 18.0028 14.3602 17.7361 14.3602C15.2131 14.3602 13.1603 16.3657 13.1603 18.8307C13.1603 19.2262 13.2182 19.6078 13.3172 19.9732H4.5571V2.96611Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M6.28856 5.68523H10.6947C10.9342 5.68523 11.128 5.4955 11.128 5.2615C11.128 5.02749 10.9342 4.83777 10.6947 4.83777H6.28856C6.04904 4.83777 5.85522 5.02749 5.85522 5.2615C5.85522 5.4955 6.04904 5.68523 6.28856 5.68523Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M6.28856 9.11162H12.3565C12.596 9.11162 12.7898 8.92189 12.7898 8.68789C12.7898 8.45389 12.596 8.26416 12.3565 8.26416H6.28856C6.04904 8.26416 5.85522 8.45389 5.85522 8.68789C5.85522 8.92189 6.04904 9.11162 6.28856 9.11162Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M6.28856 12.538H16.6594C16.8989 12.538 17.0927 12.3483 17.0927 12.1143C17.0927 11.8803 16.8989 11.6906 16.6594 11.6906H6.28856C6.04904 11.6906 5.85522 11.8803 5.85522 12.1143C5.85522 12.3483 6.04904 12.538 6.28856 12.538Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M12.4542 15.1171H6.28856C6.04904 15.1171 5.85522 15.3068 5.85522 15.5408C5.85522 15.7748 6.04904 15.9645 6.28856 15.9645H12.4542C12.6938 15.9645 12.8876 15.7748 12.8876 15.5408C12.8876 15.3068 12.6938 15.1171 12.4542 15.1171Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M17.4275 19.1321L18.4363 20.1188C18.521 20.2016 18.6319 20.243 18.7427 20.243C18.8536 20.243 18.9645 20.2016 19.0491 20.1188C19.2184 19.9535 19.2184 19.6852 19.0491 19.5197L18.3466 18.8325L19.5806 17.6259C19.7499 17.4604 19.7499 17.1922 19.5806 17.0267C19.4113 16.8612 19.1371 16.8612 18.9679 17.0267L17.4275 18.533C17.2582 18.6985 17.2582 18.9666 17.4275 19.1321Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport const TrainingIcons = (props) => {\r\n  return (\r\n    <svg\r\n      width=\"29\"\r\n      height=\"28\"\r\n      viewBox=\"0 0 29 28\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M6.34658 8.25282C4.7748 8.25282 3.49756 6.97377 3.49756 5.39979C3.49756 3.8258 4.7748 2.54675 6.34658 2.54675C7.91836 2.54675 9.19561 3.8258 9.19561 5.39979C9.19561 6.97377 7.91836 8.25282 6.34658 8.25282ZM6.34658 3.39756C5.24492 3.39756 4.34717 4.29657 4.34717 5.39979C4.34717 6.503 5.24492 7.40201 6.34658 7.40201C7.44824 7.40201 8.346 6.503 8.346 5.39979C8.346 4.29657 7.44824 3.39756 6.34658 3.39756Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M7.43691 25.3314C7.00928 25.3314 6.62129 25.1527 6.34375 24.8663C6.06621 25.1527 5.67822 25.3314 5.25059 25.3314C4.4123 25.3314 3.73262 24.6507 3.73262 23.8113V18.4625C3.54287 18.5476 3.33613 18.5873 3.12373 18.5845C2.35342 18.5675 1.72754 17.9209 1.72754 17.1381V11.5625C1.72754 10.0821 2.92832 8.87964 4.40664 8.87964H5.61025L6.34375 10.0509L7.07725 8.87964H8.04863C8.43662 8.87964 8.81894 8.97606 9.15596 9.15757L14.0582 11.7582C14.5085 11.9964 14.786 12.4587 14.786 12.9663C14.786 13.4286 14.5538 13.8568 14.1687 14.1093C13.7807 14.3617 13.2992 14.4042 12.8744 14.217L9.11348 12.5636C9.10781 12.5608 9.09365 12.558 9.07383 12.558C9.00869 12.558 8.95488 12.6118 8.95488 12.6771V23.8113C8.95488 24.6507 8.2752 25.3314 7.43691 25.3314ZM6.76855 17.9946V23.8113C6.76855 24.1799 7.06875 24.4806 7.43691 24.4806C7.80508 24.4806 8.10527 24.1799 8.10527 23.8113V12.6771C8.10527 12.1411 8.53857 11.7071 9.07383 11.7071C9.20976 11.7071 9.3457 11.7355 9.46465 11.7894L13.2143 13.4371C13.3757 13.508 13.5541 13.4938 13.7014 13.3946C13.8486 13.2982 13.9364 13.1393 13.9364 12.9635C13.9364 12.7735 13.8316 12.5977 13.6617 12.5069L8.75381 9.90628C8.54141 9.79 8.29785 9.73044 8.04863 9.73044H7.54736L6.34375 11.6504L5.14014 9.73044H4.40664C3.39844 9.73044 2.57715 10.5529 2.57715 11.5625V17.1381C2.57715 17.4614 2.8292 17.728 3.14072 17.7337C3.29932 17.7365 3.44658 17.677 3.55986 17.5664C3.67031 17.4558 3.73262 17.3111 3.73262 17.1551V12.1325H4.58223V23.8113C4.58223 24.1799 4.88242 24.4806 5.25059 24.4806C5.61875 24.4806 5.91895 24.1799 5.91895 23.8113V17.9946H6.76855Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M27.3009 4.35608H8.72559V5.20688H27.3009V4.35608Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M24.6726 22.0018V21.151C25.0974 21.151 25.4429 20.805 25.4429 20.3796V4.78149H26.2925V20.3796C26.2925 21.2729 25.5647 22.0018 24.6726 22.0018Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M16.0688 5.20409H13.2368V3.30396C13.2368 2.99484 13.4889 2.74243 13.7976 2.74243H15.5053C15.8168 2.74243 16.0688 2.99484 16.0688 3.30396V5.20409ZM14.0864 4.35329H15.2192V3.59324H14.0864V4.35329Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M20.7106 22.7618C19.9432 22.7618 19.2267 22.4158 18.748 21.8118C18.394 21.3665 18.21 20.8277 18.21 20.2576C18.21 18.8765 19.3314 17.7534 20.7106 17.7534C20.7135 17.7534 20.7135 17.7534 20.7163 17.7534C21.379 17.7534 22.0049 18.0115 22.475 18.4823C22.9479 18.9559 23.2113 19.5855 23.2113 20.2576C23.2113 20.8277 23.0244 21.3665 22.6732 21.8118C22.1975 22.4158 21.481 22.7618 20.7106 22.7618ZM20.7163 18.6042H20.7135C19.8016 18.6042 19.0624 19.3473 19.0624 20.2576C19.0624 20.6348 19.1842 20.9893 19.4192 21.2843C19.7336 21.6813 20.2065 21.911 20.7135 21.911C21.2232 21.911 21.6962 21.6841 22.0077 21.2843C22.2399 20.9893 22.3646 20.6348 22.3646 20.2576C22.3646 19.8152 22.1918 19.3983 21.8774 19.0863C21.5659 18.7744 21.1524 18.6042 20.7163 18.6042Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M23.4125 26.4912H17.9863L17.958 25.6404C17.9126 25.6432 17.8787 25.6801 17.8787 25.7283V24.5457C17.8787 24.2564 17.8305 23.9728 17.7342 23.6977L17.6663 23.4992L17.7795 23.3234C18.3573 22.4385 19.3343 21.9082 20.3935 21.9082H21.025C22.7469 21.9082 24.1459 23.3092 24.1459 25.0335V25.7538C24.1459 26.1622 23.8174 26.4912 23.4125 26.4912ZM18.7283 25.6404H23.2963V25.0363C23.2963 23.7828 22.2768 22.7618 21.025 22.7618H20.3935C19.6883 22.7618 19.0341 23.0851 18.6037 23.6325C18.6858 23.9303 18.7283 24.2366 18.7283 24.5457V25.6404Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M14.6529 21.9734C13.0302 21.9734 11.7104 20.6519 11.7104 19.0268C11.7104 17.4018 13.0302 16.0802 14.6529 16.0802C16.2757 16.0802 17.5954 17.4018 17.5954 19.0268C17.5954 20.6519 16.2757 21.9734 14.6529 21.9734ZM14.6529 16.931C13.5003 16.931 12.5601 17.8726 12.5601 19.0268C12.5601 20.1811 13.5003 21.1226 14.6529 21.1226C15.8056 21.1226 16.7458 20.1811 16.7458 19.0268C16.7458 17.8726 15.8056 16.931 14.6529 16.931Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M17.9976 26.4913H11.2913C10.8892 26.4657 10.5776 26.1311 10.5776 25.7284V24.5458C10.5776 24.1629 10.6428 23.7829 10.7674 23.4199C11.246 22.0472 12.5431 21.1227 13.9987 21.1227H15.31C16.7628 21.1227 18.0627 22.0444 18.5413 23.4199C18.6659 23.7772 18.7282 24.1572 18.7282 24.5458V25.7284C18.7282 26.1311 18.4139 26.4657 18.0117 26.4913H17.9976ZM11.4244 25.6405H17.8758V24.5458C17.8758 24.2508 17.8276 23.9672 17.7342 23.6978C17.3745 22.6655 16.4003 21.9735 15.3071 21.9735H13.9959C12.9027 21.9735 11.9285 22.6655 11.5688 23.6978C11.4726 23.97 11.4244 24.2565 11.4244 24.5458V25.6405Z\"\r\n        fill={props.color}\r\n      />\r\n      <path\r\n        d=\"M17.9946 12.5976L15.9018 10.5018L14.0836 12.3707L13.4775 11.7751L15.8961 9.29361L17.9946 11.3951L21.8858 7.49841L22.4862 8.09965L17.9946 12.5976Z\"\r\n        fill={props.color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","export const RecruitmentPaths = [\r\n  \"/recruitment\",\r\n  \"/recrutiles\",\r\n  \"/recrutiles/candidate\",\r\n  \"/recrutiles/applyemployreq\",\r\n  \"/recrutiles/listofcandi\",\r\n  \"/recrutiles/localcandi\",\r\n  \"/recrutiles/nonloccandi\",\r\n  \"/recrutiles/employreq\",\r\n  \"/recrutiles/status\",\r\n  \"/recrutiles/workpasstracking\",\r\n  \"/addCandidates\",\r\n  \"/addCandidates/personalDetails\",\r\n  \"/addCandidates/educationDetails\",\r\n  \"/addCandidates/otherDetails\",\r\n  \"/hiringJob\",\r\n  \"/postJob\",\r\n];\r\nexport const EmployeePaths = [\r\n  \"/employee\",\r\n  \"/allempDetails\",\r\n  \"/employeeInfo\",\r\n  \"/insuranceAdd\",\r\n  \"/workInfo\",\r\n  \"/labourImmigration\",\r\n  \"/workPass\",\r\n  \"/nonLocalAcco\",\r\n  \"/insuranceAdd/employeeInsurances\",\r\n  \"/insuranceAdd/dependentInsurance\",\r\n  \"/sawp\",\r\n  \"/sawp/doe\",\r\n  \"/sawp/nlms\",\r\n  \"/sawp/bankGuarantee\",\r\n  \"/sawp/jitpa\",\r\n  \"/sawp/labourDeposit\",\r\n  \"/sawp/immigration\",\r\n  \"/empRequistion\",\r\n  \"/employeeInfo\",\r\n  \"/workInfo\",\r\n  \"/workPass\",\r\n  \"/nonLocalAcco\",\r\n  \"/labourImmigration\",\r\n];\r\nexport const InsurancePaths = [\r\n  \"/insuranceHr\",\r\n  \"/insuranceHr/groupHS\",\r\n  \"/insuranceHr/workmenComp\",\r\n  \"/insuranceHr/travelling\",\r\n  \"/insuranceHr/personalAcci\",\r\n  \"/insuranceHr/insuranceClaim\",\r\n];\r\nexport const LeaveManagement = [\"/leaveManage\"];\r\n\r\nexport const TimePaths = [\r\n  \"/timeSheet\",\r\n  \"/timesheetHO\",\r\n  \"/timesheetSBW\",\r\n  \"/timesheetORMC\",\r\n  \"/timesheetOffshore\",\r\n  \"/timesheetBlng\",\r\n  \"/viewTimesheet\",\r\n  \"/viewSummary\",\r\n];\r\nexport const TrainingPaths = [\r\n  \"/training\",\r\n  \"/training/hr\",\r\n  \"/training/AcTc\",\r\n  \"/training/trainingCertify\",\r\n  \"/trainingReq\",\r\n  \"/trainingReq/add\",\r\n  \"/trainingReq/view\",\r\n  \"/blngCertify\",\r\n  \"/omgCertify\",\r\n  \"/training/tcView\"\r\n];\r\n\r\nexport const UserPaths = [\"/user\", \"/addNewForm\"];\r\nexport const ReportPaths = [\"/reports\", \"/probForm\"];\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport {\r\n  DashboardIcons,\r\n  EmployeeIcons,\r\n  InsuranceIcons,\r\n  LeaveIcons,\r\n  LogoutIcons,\r\n  NotificationIcons,\r\n  RecruitmentIcons,\r\n  ReportIcons,\r\n  RewardIcons,\r\n  TimeIcons,\r\n  TrainingIcons,\r\n  UserIcons,\r\n} from \"./SvgIcons\";\r\nimport { signOut } from \"@aws-amplify/auth\";\r\nimport { generateClient } from \"@aws-amplify/api\";\r\nimport { listUsers } from \"../graphql/queries\";\r\nimport {\r\n  EmployeePaths,\r\n  InsurancePaths,\r\n  RecruitmentPaths,\r\n  ReportPaths,\r\n  TimePaths,\r\n  TrainingPaths,\r\n  UserPaths,\r\n} from \"./RouterPaths\";\r\n// import { useData } from \"../services/Api\";\r\nconst client = generateClient();\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n  // const [userData, setUserData] = useState([]);\r\n  const [mainCategories, setMainCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchUserData() {\r\n      try {\r\n        const res = await client.graphql({ query: listUsers });\r\n        const result = res?.data?.listUsers?.items;\r\n        const userID = localStorage.getItem(\"userID\");\r\n        const userType = localStorage.getItem(\"userType\");\r\n        const filteredResults = result.filter((val) => {\r\n          if (\r\n            val.empID &&\r\n            typeof val.empID === \"string\" &&\r\n            val.selectType === userType\r\n          ) {\r\n            const empID = val.empID.toLowerCase();\r\n            const isIncluded = empID.includes(userID.toLowerCase());\r\n            return isIncluded;\r\n          }\r\n        });\r\n\r\n        if (filteredResults.length > 0) {\r\n          const permissionsString = filteredResults[0].setPermissions[0];\r\n          const categories = extractMainCategories(permissionsString);\r\n          // const desiredOrder = [\"Dashboard\", \"User\", \"Recruitment\",\"Employee\",\"Training\",\"Time Sheet\" ,\"Leave Management\" ,\"Notification center\" ,\"Report\",\"Benefits & Rewards\"];\r\n          const orderedCategories = sortCategories(categories, desiredOrder);\r\n          setMainCategories(orderedCategories);\r\n        } else {\r\n          console.log(\"No results found for the userType:\", userID);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    }\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const extractMainCategories = (permissionsString) => {\r\n    const regex = /(\\w+)=\\[/g;\r\n    const matches = [];\r\n    let match;\r\n    while ((match = regex.exec(permissionsString)) !== null) {\r\n      matches.push(match[1]);\r\n    }\r\n    return matches;\r\n  };\r\n  const sortCategories = (categories, desiredOrder) => {\r\n    return categories.sort((a, b) => {\r\n      return desiredOrder.indexOf(a) - desiredOrder.indexOf(b);\r\n    });\r\n  };\r\n  const desiredOrder = [\r\n    \"Dashboard\",\r\n    \"User\",\r\n    \"Recruitment\",\r\n    \"Employee\",\r\n    \"Insurance\",\r\n    \"Training\",\r\n    \"TimeSheet\",\r\n    \"LeaveManagement\",\r\n    \"Notification\",\r\n    \"Report\",\r\n    \"BenefitsAndRewards\",\r\n  ];\r\n\r\n  const isAnyActive = (paths) => paths.includes(location.pathname);\r\n\r\n  return (\r\n    <aside className=\"w-64 fixed top-0 left-0 z-40 h-screen pt-20 bg-secondary  text-white text_size_4 \">\r\n      <section className=\"h-screen overflow-y-auto p-4 py-14 flex flex-col scrollbar-hide\">\r\n        {mainCategories.map((category, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"flex justify-between flex-col w-full pb-10 gap-4 \"\r\n            >\r\n              {category === \"Dashboard\" && (\r\n                <NavLink\r\n                  to=\"/dashboard\"\r\n                  className={({ isActive }) =>\r\n                    `flex items-center gap-3 py-2 pl-1 rounded-lg ${\r\n                      isActive ? \"bg-primary text-secondary\" : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {location.pathname === \"/dashboard\" ? (\r\n                      <DashboardIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <DashboardIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Dashboard\r\n                </NavLink>\r\n              )}\r\n              {category === \"User\" && (\r\n                <NavLink\r\n                  to=\"/user\"\r\n                  className={({ isActive }) =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isAnyActive(UserPaths) ? \"bg-primary text-secondary\" : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(UserPaths) ? (\r\n                      <UserIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <UserIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  User\r\n                </NavLink>\r\n              )}\r\n              {category === \"Recruitment\" && (\r\n                <NavLink\r\n                  to=\"/recruitment\"\r\n                  className={() =>\r\n                    `flex items-center gap-3 py-2 pl-1 rounded-lg ${\r\n                      isAnyActive(RecruitmentPaths)\r\n                        ? \"bg-primary text-secondary\"\r\n                        : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(RecruitmentPaths) ? (\r\n                      <RecruitmentIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <RecruitmentIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Recruitment\r\n                </NavLink>\r\n              )}\r\n\r\n              {category === \"Employee\" && (\r\n                <NavLink\r\n                  to=\"/employee\"\r\n                  className={() =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isAnyActive(EmployeePaths)\r\n                        ? \"bg-primary text-secondary\"\r\n                        : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(EmployeePaths) ? (\r\n                      <EmployeeIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <EmployeeIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Employee\r\n                </NavLink>\r\n              )}\r\n\r\n\r\n              {category === \"Insurance\" && (\r\n                <NavLink\r\n                  to=\"/insuranceHr\"\r\n                  className={() =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isAnyActive(InsurancePaths)\r\n                        ? \"bg-primary text-secondary\"\r\n                        : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(InsurancePaths) ? (\r\n                      <InsuranceIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <InsuranceIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Insurance\r\n                </NavLink>\r\n              )}\r\n\r\n              {category === \"Training\" && (\r\n                <NavLink\r\n                  to=\"/training\"\r\n                  className={() =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isAnyActive(TrainingPaths)\r\n                        ? \"bg-primary text-secondary\"\r\n                        : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(TrainingPaths) ? (\r\n                      <TrainingIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <TrainingIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Training\r\n                </NavLink>\r\n              )}\r\n              {category === \"TimeSheet\" && (\r\n                <NavLink\r\n                  to=\"/timeSheet\"\r\n                  className={({ isActive }) =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isAnyActive(TimePaths) ? \"bg-primary text-secondary\" : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(TimePaths) ? (\r\n                      <TimeIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <TimeIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Time Sheet\r\n                </NavLink>\r\n              )}\r\n              {category === \"LeaveManagement\" && (\r\n                <NavLink\r\n                  to=\"/leaveManage\"\r\n                  className={({ isActive }) =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isActive ? \"bg-primary text-secondary\" : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {location.pathname === \"/leaveManage\" ? (\r\n                      <LeaveIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <LeaveIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Leave Management\r\n                </NavLink>\r\n              )}\r\n              {category === \"Notification\" && (\r\n                <NavLink\r\n                  to=\"/notifications\"\r\n                  className={({ isActive }) =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isActive ? \"bg-primary text-secondary\" : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {location.pathname === \"/notifications\" ? (\r\n                      <NotificationIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <NotificationIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Notification center\r\n                </NavLink>\r\n              )}\r\n              {category === \"Report\" && (\r\n                <NavLink\r\n                  to=\"/reports\"\r\n                  className={() =>\r\n                    `flex items-center gap-3 py-2 pl-1 rounded-lg ${\r\n                      isAnyActive(ReportPaths)\r\n                        ? \"bg-primary text-secondary\"\r\n                        : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {isAnyActive(ReportPaths) ? (\r\n                      <TimeIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <TimeIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Report\r\n                </NavLink>\r\n              )}\r\n              {category === \"BenefitsAndRewards\" && (\r\n                <NavLink\r\n                  to=\"/benfitsAndrewards\"\r\n                  className={({ isActive }) =>\r\n                    `flex items-center gap-3 py-2 pl-1  rounded-lg ${\r\n                      isActive ? \"bg-primary text-secondary\" : \"\"\r\n                    }`\r\n                  }\r\n                >\r\n                  <span>\r\n                    {location.pathname === \"/benfitsAndrewards\" ? (\r\n                      <RewardIcons color=\"#303030\" />\r\n                    ) : (\r\n                      <RewardIcons color=\"white\" />\r\n                    )}\r\n                  </span>\r\n                  Benefits & Rewards\r\n                </NavLink>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </section>\r\n    </aside>\r\n  );\r\n};\r\nexport default Sidebar;\r\n"],"names":["DashboardIcons","props","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","color","UserIcons","RecruitmentIcons","EmployeeIcons","InsuranceIcons","LeaveIcons","NotificationIcons","RewardIcons","TimeIcons","TrainingIcons","RecruitmentPaths","EmployeePaths","InsurancePaths","TimePaths","TrainingPaths","UserPaths","ReportPaths","client","generateClient","Sidebar","location","useLocation","mainCategories","setMainCategories","useState","useEffect","async","_res$data","_res$data$listUsers","res","graphql","query","listUsers","result","data","items","userID","localStorage","getItem","userType","filteredResults","filter","val","empID","selectType","toLowerCase","includes","length","permissionsString","setPermissions","categories","extractMainCategories","orderedCategories","sortCategories","desiredOrder","console","log","error","fetchUserData","regex","matches","match","exec","push","sort","a","b","indexOf","isAnyActive","paths","pathname","className","map","category","index","NavLink","to","_ref","isActive","concat","_ref2","_ref3","_ref4","_ref5","_ref6"],"sourceRoot":""}