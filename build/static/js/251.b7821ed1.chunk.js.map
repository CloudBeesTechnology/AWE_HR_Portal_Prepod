{"version":3,"file":"static/js/251.b7821ed1.chunk.js","mappings":"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","sources":["../node_modules/property-expr/index.js","../node_modules/tiny-case/index.js","../node_modules/toposort/index.js","../node_modules/yup/index.esm.js","../node_modules/@aws-amplify/auth/src/client/flows/shared/handlePasswordSRP.ts","../node_modules/@aws-amplify/auth/src/client/utils/store/autoSignInStore.ts","../node_modules/@aws-amplify/auth/src/client/utils/store/signInStore.ts","../node_modules/@aws-amplify/auth/src/common/AuthErrorStrings.ts","../node_modules/@aws-amplify/auth/src/errors/types/validation.ts","../node_modules/@aws-amplify/auth/src/errors/utils/assertValidationError.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/autoSignIn.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/getCurrentUser.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/internal/getCurrentUser.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithSRP.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signIn.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithUserPassword.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomAuth.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomSRPAuth.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithUserAuth.ts","../node_modules/@aws-amplify/auth/src/client/flows/userAuth/handleUserAuthFlow.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/cacheTokens.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/types/errors.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/dispatchSignedInHubEvent.ts","../node_modules/@aws-amplify/core/src/utils/deviceName/getDeviceName.ts","../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.ts","../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.ts","../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.ts","../node_modules/@aws-amplify/auth/src/client/utils/passkey/errors.ts","../node_modules/@aws-amplify/auth/src/client/utils/passkey/getIsPasskeySupported.ts","../node_modules/@aws-amplify/auth/src/foundation/convert/base64url/convertArrayBufferToBase64Url.ts","../node_modules/@aws-amplify/auth/src/foundation/convert/base64url/convertBase64UrlToArrayBuffer.ts","../node_modules/@aws-amplify/auth/src/client/utils/passkey/getPasskey.ts","../node_modules/@aws-amplify/auth/src/client/utils/passkey/serde.ts","../node_modules/@aws-amplify/auth/src/client/utils/passkey/types/index.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getNowString.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getSignatureString.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInHelpers.ts","../node_modules/@aws-amplify/auth/src/client/flows/userAuth/handleWebAuthnSignInResult.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/BigInteger/BigInteger.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/constants.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHexFromBytes.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromData.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromHex.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getPaddedHex.ts","../node_modules/@aws-amplify/core/src/utils/WordArray.ts","../node_modules/@aws-amplify/core/src/utils/cryptoSecureRandomInt.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomBytes.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomString.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateU.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateS.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHkdfKey.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateA.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getAuthenticationHelper.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getBytesFromHex.ts","../node_modules/@aws-amplify/auth/src/providers/cognito/utils/textEncoder/index.ts","../node_modules/@hookform/resolvers/src/validateFieldsNatively.ts","../node_modules/@hookform/resolvers/src/toNestErrors.ts","../node_modules/@hookform/resolvers/yup/src/yup.ts","../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","../node_modules/react-hook-form/src/utils/isDateObject.ts","../node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","../node_modules/react-hook-form/src/utils/isObject.ts","../node_modules/react-hook-form/src/logic/getEventValue.ts","../node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","../node_modules/react-hook-form/src/logic/getNodeParentName.ts","../node_modules/react-hook-form/src/utils/isPlainObject.ts","../node_modules/react-hook-form/src/utils/isWeb.ts","../node_modules/react-hook-form/src/utils/cloneObject.ts","../node_modules/react-hook-form/src/utils/compact.ts","../node_modules/react-hook-form/src/utils/isUndefined.ts","../node_modules/react-hook-form/src/utils/get.ts","../node_modules/react-hook-form/src/utils/isBoolean.ts","../node_modules/react-hook-form/src/utils/isKey.ts","../node_modules/react-hook-form/src/utils/stringToPath.ts","../node_modules/react-hook-form/src/utils/set.ts","../node_modules/react-hook-form/src/constants.ts","../node_modules/react-hook-form/src/useFormContext.tsx","../node_modules/react-hook-form/src/logic/getProxyFormState.ts","../node_modules/react-hook-form/src/utils/isEmptyObject.ts","../node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","../node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","../node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","../node_modules/react-hook-form/src/useSubscribe.ts","../node_modules/react-hook-form/src/utils/isString.ts","../node_modules/react-hook-form/src/logic/generateWatchOutput.ts","../node_modules/react-hook-form/src/useController.ts","../node_modules/react-hook-form/src/useWatch.ts","../node_modules/react-hook-form/src/useFormState.ts","../node_modules/react-hook-form/src/controller.tsx","../node_modules/react-hook-form/src/logic/appendErrors.ts","../node_modules/react-hook-form/src/logic/generateId.ts","../node_modules/react-hook-form/src/logic/getFocusFieldName.ts","../node_modules/react-hook-form/src/logic/getValidationModes.ts","../node_modules/react-hook-form/src/logic/isWatched.ts","../node_modules/react-hook-form/src/logic/iterateFieldsByAction.ts","../node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","../node_modules/react-hook-form/src/utils/isFileInput.ts","../node_modules/react-hook-form/src/utils/isFunction.ts","../node_modules/react-hook-form/src/utils/isHTMLElement.ts","../node_modules/react-hook-form/src/utils/isMessage.ts","../node_modules/react-hook-form/src/utils/isRadioInput.ts","../node_modules/react-hook-form/src/utils/isRegex.ts","../node_modules/react-hook-form/src/logic/getCheckboxValue.ts","../node_modules/react-hook-form/src/logic/getRadioValue.ts","../node_modules/react-hook-form/src/logic/getValidateError.ts","../node_modules/react-hook-form/src/logic/getValueAndMessage.ts","../node_modules/react-hook-form/src/logic/validateField.ts","../node_modules/react-hook-form/src/utils/append.ts","../node_modules/react-hook-form/src/utils/fillEmptyArray.ts","../node_modules/react-hook-form/src/utils/insert.ts","../node_modules/react-hook-form/src/utils/move.ts","../node_modules/react-hook-form/src/utils/prepend.ts","../node_modules/react-hook-form/src/utils/remove.ts","../node_modules/react-hook-form/src/utils/swap.ts","../node_modules/react-hook-form/src/utils/unset.ts","../node_modules/react-hook-form/src/utils/update.ts","../node_modules/react-hook-form/src/useFieldArray.ts","../node_modules/react-hook-form/src/utils/createSubject.ts","../node_modules/react-hook-form/src/utils/isPrimitive.ts","../node_modules/react-hook-form/src/utils/deepEqual.ts","../node_modules/react-hook-form/src/utils/isMultipleSelect.ts","../node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","../node_modules/react-hook-form/src/utils/live.ts","../node_modules/react-hook-form/src/utils/objectHasFunction.ts","../node_modules/react-hook-form/src/logic/getDirtyFields.ts","../node_modules/react-hook-form/src/logic/getFieldValueAs.ts","../node_modules/react-hook-form/src/logic/getFieldValue.ts","../node_modules/react-hook-form/src/logic/getResolverOptions.ts","../node_modules/react-hook-form/src/logic/getRuleValue.ts","../node_modules/react-hook-form/src/logic/hasPromiseValidation.ts","../node_modules/react-hook-form/src/logic/hasValidation.ts","../node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","../node_modules/react-hook-form/src/logic/skipValidation.ts","../node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","../node_modules/react-hook-form/src/logic/createFormControl.ts","../node_modules/react-hook-form/src/useForm.ts"],"sourcesContent":["/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n","const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","import { getter, forEach, split, normalizePath, join } from 'property-expr';\nimport { camelCase, snakeCase } from 'tiny-case';\nimport toposort from 'toposort';\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet _Symbol$toStringTag, _Symbol$hasInstance, _Symbol$toStringTag2;\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\n_Symbol$toStringTag = Symbol.toStringTag;\nclass ValidationErrorNoStack {\n  constructor(errorOrErrors, value, field, type) {\n    this.name = void 0;\n    this.message = void 0;\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = void 0;\n    this.inner = void 0;\n    this[_Symbol$toStringTag] = 'Error';\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        const innerErrors = err.inner.length ? err.inner : [err];\n        this.inner.push(...innerErrors);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n  }\n}\n_Symbol$hasInstance = Symbol.hasInstance;\n_Symbol$toStringTag2 = Symbol.toStringTag;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    // Attempt to make the path more friendly for error message interpolation.\n    const path = params.label || params.path || 'this';\n    // Store the original path under `originalPath` so it isn't lost to custom\n    // message functions; e.g., ones provided in `setLocale()` calls.\n    params = Object.assign({}, params, {\n      path,\n      originalPath: params.path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type, disableStack) {\n    const errorNoStack = new ValidationErrorNoStack(errorOrErrors, value, field, type);\n    if (disableStack) {\n      return errorNoStack;\n    }\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = [];\n    this.inner = [];\n    this[_Symbol$toStringTag2] = 'Error';\n    this.name = errorNoStack.name;\n    this.message = errorNoStack.message;\n    this.type = errorNoStack.type;\n    this.value = errorNoStack.value;\n    this.path = errorNoStack.path;\n    this.errors = errorNoStack.errors;\n    this.inner = errorNoStack.inner;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n  }\n  static [_Symbol$hasInstance](inst) {\n    return ValidationErrorNoStack[Symbol.hasInstance](inst) || super[Symbol.hasInstance](inst);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  datetime: '${path} must be a valid ISO date-time',\n  datetime_precision: '${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits',\n  datetime_offset: '${path} must be a valid ISO date-time with UTC \"Z\" timezone',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}',\n  exact: '${path} object contains unknown properties: ${properties}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean,\n  tuple\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && getter(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly,\n      disableStackTrace = schema.spec.disableStackTrace\n    } = options;\n    function resolve(item) {\n      return Reference.isRef(item) ? item.getValue(value, parent, context) : item;\n    }\n    function createError(overrides = {}) {\n      const nextParams = Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec,\n        disableStackTrace: overrides.disableStackTrace || disableStackTrace\n      }, params, overrides.params);\n      for (const key of Object.keys(nextParams)) nextParams[key] = resolve(nextParams[key]);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name, nextParams.disableStackTrace);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve,\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (shouldSkip) {\n      return handleResult(true);\n    }\n    let result;\n    try {\n      var _result;\n      result = test.call(ctx, value, ctx);\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        if (options.sync) {\n          throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n        }\n        return Promise.resolve(result).then(handleResult, handleError);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  forEach(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\n// If `CustomSchemaMeta` isn't extended with any keys, we'll fall back to a\n// loose Record definition allowing free form usage.\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      disableStackTrace: false,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive, _options$disableStack;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive,\n      disableStackTrace: (_options$disableStack = options.disableStackTrace) != null ? _options$disableStack : this.spec.disableStackTrace\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({\n      value\n    }, options));\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this), rawValue);\n    if (value === undefined) {\n      value = this.getDefault(options);\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          Array.isArray(err) ? nestedErrors.push(...err) : nestedErrors.push(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${isIndex ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    var _options$disableStack2;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let disableStackTrace = (_options$disableStack2 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack2 : schema.spec.disableStackTrace;\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated, undefined, undefined, disableStackTrace));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    var _options$disableStack3;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    let disableStackTrace = (_options$disableStack3 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack3 : schema.spec.disableStackTrace;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value, undefined, undefined, disableStackTrace);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault(options) {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this, options) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault(options);\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      skipAbsent: true,\n      test(value) {\n        if (!this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.map(fn => ({\n        name: fn.OPTIONS.name,\n        params: fn.OPTIONS.params\n      })).filter((n, idx, list) => list.findIndex(c => c.name === n.name) === idx)\n    };\n    return description;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (ctx.spec.coerce && !ctx.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n/**\n * This file is a modified version of the file from the following repository:\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n// prettier-ignore\n//                1 YYYY                2 MM        3 DD              4 HH     5 mm        6 ss           7 msec         8 Z 9 ±   10 tzHH    11 tzmm\nconst isoReg = /^(\\d{4}|[+-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,.](\\d{1,}))?)?(?:(Z)|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction parseIsoDate(date) {\n  const struct = parseDateStruct(date);\n  if (!struct) return Date.parse ? Date.parse(date) : Number.NaN;\n\n  // timestamps without timezone identifiers should be considered local time\n  if (struct.z === undefined && struct.plusMinus === undefined) {\n    return new Date(struct.year, struct.month, struct.day, struct.hour, struct.minute, struct.second, struct.millisecond).valueOf();\n  }\n  let totalMinutesOffset = 0;\n  if (struct.z !== 'Z' && struct.plusMinus !== undefined) {\n    totalMinutesOffset = struct.hourOffset * 60 + struct.minuteOffset;\n    if (struct.plusMinus === '+') totalMinutesOffset = 0 - totalMinutesOffset;\n  }\n  return Date.UTC(struct.year, struct.month, struct.day, struct.hour, struct.minute + totalMinutesOffset, struct.second, struct.millisecond);\n}\nfunction parseDateStruct(date) {\n  var _regexResult$7$length, _regexResult$;\n  const regexResult = isoReg.exec(date);\n  if (!regexResult) return null;\n\n  // use of toNumber() avoids NaN timestamps caused by “undefined”\n  // values being passed to Date constructor\n  return {\n    year: toNumber(regexResult[1]),\n    month: toNumber(regexResult[2], 1) - 1,\n    day: toNumber(regexResult[3], 1),\n    hour: toNumber(regexResult[4]),\n    minute: toNumber(regexResult[5]),\n    second: toNumber(regexResult[6]),\n    millisecond: regexResult[7] ?\n    // allow arbitrary sub-second precision beyond milliseconds\n    toNumber(regexResult[7].substring(0, 3)) : 0,\n    precision: (_regexResult$7$length = (_regexResult$ = regexResult[7]) == null ? void 0 : _regexResult$.length) != null ? _regexResult$7$length : undefined,\n    z: regexResult[8] || undefined,\n    plusMinus: regexResult[9] || undefined,\n    hourOffset: toNumber(regexResult[10]),\n    minuteOffset: toNumber(regexResult[11])\n  };\n}\nfunction toNumber(str, defaultValue = 0) {\n  return Number(str) || defaultValue;\n}\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet yearMonthDay = '^\\\\d{4}-\\\\d{2}-\\\\d{2}';\nlet hourMinuteSecond = '\\\\d{2}:\\\\d{2}:\\\\d{2}';\nlet zOrOffset = '(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)';\nlet rIsoDateTime = new RegExp(`${yearMonthDay}T${hourMinuteSecond}(\\\\.\\\\d+)?${zOrOffset}$`);\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce || ctx.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n  datetime(options) {\n    let message = '';\n    let allowOffset;\n    let precision;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          message = '',\n          allowOffset = false,\n          precision = undefined\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.matches(rIsoDateTime, {\n      name: 'datetime',\n      message: message || string.datetime,\n      excludeEmptyString: true\n    }).test({\n      name: 'datetime_offset',\n      message: message || string.datetime_offset,\n      params: {\n        allowOffset\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || allowOffset) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return !!struct.z;\n      }\n    }).test({\n      name: 'datetime_precision',\n      message: message || string.datetime_precision,\n      params: {\n        precision\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || precision == undefined) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return struct.precision === precision;\n      }\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n\n        // null -> NaN isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (ctx.isType(parsed) || parsed === null) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        // null -> InvalidDate isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (!ctx.spec.coerce || ctx.isType(value) || value === null) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, ctx) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return ctx.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...normalizePath(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = getter(join(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault(options);\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      if (field) {\n        let fieldValue;\n        let inputValue = value[prop];\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ?\n        // TODO: use _cast, this is double resolving\n        field.cast(value[prop], innerOptions) : value[prop];\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = value[prop];\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== value[prop]) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s =>\n    // XXX: excludes here is wrong\n    s.setFields(nextFields, [...this._excludedEdges, ...schema._excludedEdges]));\n  }\n  _getDefault(options) {\n    if ('default' in this.spec) {\n      return super._getDefault(options);\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      var _innerOptions;\n      const field = this.fields[key];\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      dft[key] = field && 'getDefault' in field ? field.getDefault(innerOptions) : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked, this._excludedEdges.filter(([a, b]) => keys.includes(a) && keys.includes(b)));\n  }\n  omit(keys) {\n    const remaining = [];\n    for (const key of Object.keys(this.fields)) {\n      if (keys.includes(key)) continue;\n      remaining.push(key);\n    }\n    return this.pick(remaining);\n  }\n  from(from, to, alias) {\n    let fromGetter = getter(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n\n  /**\n   * Similar to `noUnknown` but only validates that an object is the right shape without stripping the unknown keys\n   */\n  exact(message) {\n    return this.test({\n      name: 'exact',\n      exclusive: true,\n      message: message || object.exact,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return unknownKeys.length === 0 || this.createError({\n          params: {\n            properties: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n  }\n  stripUnknown() {\n    return this.clone({\n      noUnknown: true\n    });\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => snakeCase(key).toUpperCase());\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(next.fields)) {\n      var _innerOptions2;\n      let innerOptions = options;\n      if ((_innerOptions2 = innerOptions) != null && _innerOptions2.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      spec: {\n        types: type\n      },\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    next.spec = Object.assign({}, next.spec, {\n      types: schema\n    });\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    if (next.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = next.innerType.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.innerType = next.spec.types.map((schema, index) => {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[index]\n        });\n      }\n      return schema.describe(innerOptions);\n    });\n    return base;\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return this._resolve(value, options).validate(value, options);\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return this._resolve(value, options).validateAt(path, value, options);\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    return this._resolve(value, options).isValid(value, options);\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\nexport { ArraySchema, BooleanSchema, DateSchema, MixedSchema, NumberSchema, ObjectSchema, Schema, StringSchema, TupleSchema, ValidationError, addMethod, create$2 as array, create$7 as bool, create$7 as boolean, create$4 as date, locale as defaultLocale, getIn, isSchema, create as lazy, create$8 as mixed, create$5 as number, create$3 as object, printValue, reach, create$9 as ref, setLocale, create$6 as string, create$1 as tuple };\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData';\nimport { getAuthenticationHelper } from '../../../providers/cognito/utils/srp';\nimport { handlePasswordVerifierChallenge, retryOnResourceNotFoundException, setActiveSignInUsername, } from '../../../providers/cognito/utils/signInHelpers';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\n/**\n * Handles the Password SRP (Secure Remote Password) authentication flow.\n * This function can be used with both USER_SRP_AUTH and USER_AUTH flows.\n *\n * @param {Object} params - The parameters for the Password SRP authentication\n * @param {string} params.username - The username for authentication\n * @param {string} params.password - The user's password\n * @param {ClientMetadata} [params.clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Token orchestrator for managing auth tokens\n * @param {AuthFlowType} params.authFlow - The type of authentication flow ('USER_SRP_AUTH' or 'USER_AUTH')\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred challenge type when using USER_AUTH flow\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The authentication response\n */\nexport async function handlePasswordSRP({ username, password, clientMetadata, config, tokenOrchestrator, authFlow, preferredChallenge, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    if (authFlow === 'USER_AUTH' && preferredChallenge) {\n        authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: authFlow,\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const resp = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (resp.ChallengeName === 'PASSWORD_VERIFIER') {\n        return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n            password,\n            challengeParameters,\n            clientMetadata,\n            session,\n            authenticationHelper,\n            config,\n            tokenOrchestrator,\n        ], activeUsername, tokenOrchestrator);\n    }\n    return resp;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction defaultState() {\n    return {\n        active: false,\n    };\n}\nconst autoSignInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_SESSION':\n            return {\n                ...state,\n                session: action.value,\n            };\n        case 'START':\n            return {\n                ...state,\n                active: true,\n            };\n        case 'RESET':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nconst createAutoSignInStore = (reducer) => {\n    let currentState = reducer(defaultState(), { type: 'RESET' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nexport const autoSignInStore = createAutoSignInStore(autoSignInReducer);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst signInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SIGN_IN_SESSION':\n            return {\n                ...state,\n                signInSession: action.value,\n            };\n        case 'SET_SIGN_IN_STATE':\n            return {\n                ...action.value,\n            };\n        case 'SET_CHALLENGE_NAME':\n            return {\n                ...state,\n                challengeName: action.value,\n            };\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_INITIAL_STATE':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nfunction defaultState() {\n    return {\n        username: undefined,\n        challengeName: undefined,\n        signInSession: undefined,\n    };\n}\nconst createStore = reducer => {\n    let currentState = reducer(defaultState(), { type: 'SET_INITIAL_STATE' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nexport const signInStore = createStore(signInReducer);\nexport function setActiveSignInState(state) {\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_STATE',\n        value: state,\n    });\n}\nexport function cleanActiveSignInState() {\n    signInStore.dispatch({ type: 'SET_INITIAL_STATE' });\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthValidationErrorCode } from '../errors/types/validation';\nexport const validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS, TOTP, or EMAIL',\n        recoverySuggestion: 'Try to pass SMS, TOTP, or EMAIL as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nexport var AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nexport var AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { validationErrorMap } from '../../common/AuthErrorStrings';\nimport { AuthError } from '../AuthError';\nexport function assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new AuthError({ name, message, recoverySuggestion });\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { autoSignInStore } from '../../../client/utils/store';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants';\nconst initialAutoSignIn = async () => {\n    throw new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n    });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\n// TODO(Eslint): can this be refactored not using `let` on exported member?\n// eslint-disable-next-line import/no-mutable-exports\nexport let autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nexport function setAutoSignIn(callback) {\n    autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nexport function resetAutoSignIn(resetCallback = true) {\n    if (resetCallback) {\n        autoSignIn = initialAutoSignIn;\n    }\n    autoSignInStore.dispatch({ type: 'RESET' });\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUserInternal } from './internal/getCurrentUser';\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const getCurrentUser = async () => {\n    return getCurrentUserInternal(Amplify);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types';\nexport const getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleUserSRPAuthFlow, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../../../client/utils/store';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithSRP(input) {\n    const { username, password } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_SRP_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = input.options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers';\nimport { signInWithCustomAuth } from './signInWithCustomAuth';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth';\nimport { signInWithSRP } from './signInWithSRP';\nimport { signInWithUserPassword } from './signInWithUserPassword';\nimport { signInWithUserAuth } from './signInWithUserAuth';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signIn(input) {\n    // Here we want to reset the store but not reassign the callback.\n    // The callback is reset when the underlying promise resolves or rejects.\n    // With the advent of session based sign in, this guarantees that the signIn API initiates a new auth flow,\n    // regardless of whether it is called for a user currently engaged in an active auto sign in session.\n    resetAutoSignIn(false);\n    const authFlowType = input.options?.authFlowType;\n    await assertUserNotAuthenticated();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return signInWithSRP(input);\n        case 'USER_PASSWORD_AUTH':\n            return signInWithUserPassword(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return signInWithCustomAuth(input);\n        case 'CUSTOM_WITH_SRP':\n            return signInWithCustomSRPAuth(input);\n        case 'USER_AUTH':\n            return signInWithUserAuth(input);\n        default:\n            return signInWithSRP(input);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleUserPasswordAuthFlow, retryOnResourceNotFoundException, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../../../client/utils/store';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithUserPassword(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_PASSWORD_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: retiredChallengeName, ChallengeParameters: retriedChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retiredChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                ...AuthenticationResult,\n                username: activeUsername,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retiredChallengeName,\n            challengeParameters: retriedChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleCustomAuthFlowWithoutSRP, retryOnResourceNotFoundException, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../../../client/utils/store';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomAuth(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITHOUT_SRP',\n    };\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n    try {\n        const { ChallengeName: retriedChallengeName, ChallengeParameters: retiredChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retriedChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retriedChallengeName,\n            challengeParameters: retiredChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleCustomSRPAuthFlow, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../../../client/utils/store';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomSRPAuth(input) {\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITH_SRP',\n    };\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, } from '../utils/signInHelpers';\nimport { autoSignInStore, cleanActiveSignInState, setActiveSignInState, } from '../../../client/utils/store';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { handleUserAuthFlow, } from '../../../client/flows/userAuth/handleUserAuthFlow';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in through a registered email or phone number without a password by by receiving and entering an OTP.\n *\n * @param input - The SignInWithUserAuthInput object\n * @returns SignInWithUserAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password -- needs to change\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithUserAuth(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = options?.clientMetadata;\n    const preferredChallenge = options?.preferredChallenge;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    try {\n        const handleUserAuthFlowInput = {\n            username,\n            config: authConfig,\n            tokenOrchestrator,\n            clientMetadata: clientMetaData,\n            preferredChallenge,\n            password,\n        };\n        const autoSignInStoreState = autoSignInStore.getState();\n        if (autoSignInStoreState.active &&\n            autoSignInStoreState.username === username) {\n            handleUserAuthFlowInput.session = autoSignInStoreState.session;\n        }\n        const response = await handleUserAuthFlow(handleUserAuthFlowInput);\n        const activeUsername = getActiveSignInUsername(username);\n        setActiveSignInState({\n            signInSession: response.Session,\n            username: activeUsername,\n            challengeName: response.ChallengeName,\n            signInDetails,\n        });\n        if (response.AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...response.AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: response.AuthenticationResult.NewDeviceMetadata,\n                    accessToken: response.AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: response.ChallengeName,\n            challengeParameters: response.ChallengeParameters,\n            availableChallenges: 'AvailableChallenges' in response\n                ? response.AvailableChallenges\n                : undefined,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { handlePasswordSRP } from '../shared/handlePasswordSRP';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/signInHelpers';\n/**\n * Handles user authentication flow with configurable challenge preferences.\n * Supports AuthFactorType challenges through the USER_AUTH flow.\n *\n * @param {HandleUserAuthFlowInput} params - Authentication flow parameters\n * @param {string} params.username - The username for authentication\n * @param {Record<string, string>} [params.clientMetadata] - Optional metadata to pass to authentication service\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Manages authentication tokens and device tracking\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred authentication method\n * @param {string} [params.password] - Required when preferredChallenge is 'PASSWORD' or 'PASSWORD_SRP'\n *\n * @returns {Promise<InitiateAuthCommandOutput>} The authentication response from Cognito\n */\nexport async function handleUserAuthFlow({ username, clientMetadata, config, tokenOrchestrator, preferredChallenge, password, session, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const authParameters = { USERNAME: username };\n    if (preferredChallenge) {\n        if (preferredChallenge === 'PASSWORD_SRP') {\n            assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n            return handlePasswordSRP({\n                username,\n                password,\n                clientMetadata,\n                config,\n                tokenOrchestrator,\n                authFlow: 'USER_AUTH',\n                preferredChallenge,\n            });\n        }\n        if (preferredChallenge === 'PASSWORD') {\n            assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n            authParameters.PASSWORD = password;\n        }\n        authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n    }\n    const jsonReq = {\n        AuthFlow: 'USER_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    if (session) {\n        jsonReq.Session = session;\n    }\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    // Set the active username immediately after successful authentication attempt\n    // If a user starts a new sign-in while another sign-in is incomplete,\n    // this ensures we're tracking the correct user for subsequent auth challenges.\n    setActiveSignInUsername(username);\n    return response;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider';\nexport async function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n    AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n    AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nexport var ChangePasswordException;\n(function (ChangePasswordException) {\n    ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nexport var ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n    ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n    ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nexport var ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n    ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nexport var ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n    ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n    ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nexport var DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n    DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nexport var DeleteUserException;\n(function (DeleteUserException) {\n    DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nexport var ForgetDeviceException;\n(function (ForgetDeviceException) {\n    ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nexport var ForgotPasswordException;\n(function (ForgotPasswordException) {\n    ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nexport var GetUserException;\n(function (GetUserException) {\n    GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nexport var GetIdException;\n(function (GetIdException) {\n    GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nexport var GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n    GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n    GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nexport var GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n    GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nexport var GlobalSignOutException;\n(function (GlobalSignOutException) {\n    GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nexport var InitiateAuthException;\n(function (InitiateAuthException) {\n    InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n    InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n    InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nexport var ResendConfirmationException;\n(function (ResendConfirmationException) {\n    ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nexport var RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n    RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n    RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nexport var SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n    SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nexport var SignUpException;\n(function (SignUpException) {\n    SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nexport var UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n    UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n    UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nexport var VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n    VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n    VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nexport var VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n    VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n    VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nexport var UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n    UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nexport var ListDevicesException;\n(function (ListDevicesException) {\n    ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nexport const SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nimport { AuthError } from '../../../errors/AuthError';\nexport const ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nexport const dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nexport const getDeviceName = async () => {\n    const { userAgentData } = navigator;\n    if (!userAgentData)\n        return navigator.userAgent;\n    const { platform = '', platformVersion = '', model = '', architecture = '', fullVersionList = [], } = await userAgentData.getHighEntropyValues([\n        'platform',\n        'platformVersion',\n        'architecture',\n        'model',\n        'fullVersionList',\n    ]);\n    const versionList = fullVersionList\n        .map((v) => `${v.brand}/${v.version}`)\n        .join(';');\n    const deviceName = [\n        platform,\n        platformVersion,\n        architecture,\n        model,\n        platform,\n        versionList,\n    ]\n        .filter(value => value)\n        .join(' ');\n    return deviceName;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createRespondToAuthChallengeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RespondToAuthChallenge'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createAssociateSoftwareTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('AssociateSoftwareToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createConfirmDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmDevice'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, AmplifyErrorCode, createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport class PasskeyError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = PasskeyError;\n        Object.setPrototypeOf(this, PasskeyError.prototype);\n    }\n}\nexport var PasskeyErrorCode;\n(function (PasskeyErrorCode) {\n    // not supported\n    PasskeyErrorCode[\"PasskeyNotSupported\"] = \"PasskeyNotSupported\";\n    // duplicate passkey\n    PasskeyErrorCode[\"PasskeyAlreadyExists\"] = \"PasskeyAlreadyExists\";\n    // misconfigurations\n    PasskeyErrorCode[\"InvalidPasskeyRegistrationOptions\"] = \"InvalidPasskeyRegistrationOptions\";\n    PasskeyErrorCode[\"InvalidPasskeyAuthenticationOptions\"] = \"InvalidPasskeyAuthenticationOptions\";\n    PasskeyErrorCode[\"RelyingPartyMismatch\"] = \"RelyingPartyMismatch\";\n    // failed credential creation / retrieval\n    PasskeyErrorCode[\"PasskeyRegistrationFailed\"] = \"PasskeyRegistrationFailed\";\n    PasskeyErrorCode[\"PasskeyRetrievalFailed\"] = \"PasskeyRetrievalFailed\";\n    // cancel / aborts\n    PasskeyErrorCode[\"PasskeyRegistrationCanceled\"] = \"PasskeyRegistrationCanceled\";\n    PasskeyErrorCode[\"PasskeyAuthenticationCanceled\"] = \"PasskeyAuthenticationCanceled\";\n    PasskeyErrorCode[\"PasskeyOperationAborted\"] = \"PasskeyOperationAborted\";\n})(PasskeyErrorCode || (PasskeyErrorCode = {}));\nconst notSupportedRecoverySuggestion = 'Passkeys may not be supported on this device. Ensure your application is running in a secure context (HTTPS) and Web Authentication API is supported.';\nconst abortOrCancelRecoverySuggestion = 'User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.';\nconst misconfigurationRecoverySuggestion = 'Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.';\nconst passkeyErrorMap = {\n    [PasskeyErrorCode.PasskeyNotSupported]: {\n        message: 'Passkeys may not be supported on this device.',\n        recoverySuggestion: notSupportedRecoverySuggestion,\n    },\n    [PasskeyErrorCode.InvalidPasskeyRegistrationOptions]: {\n        message: 'Invalid passkey registration options.',\n        recoverySuggestion: misconfigurationRecoverySuggestion,\n    },\n    [PasskeyErrorCode.InvalidPasskeyAuthenticationOptions]: {\n        message: 'Invalid passkey authentication options.',\n        recoverySuggestion: misconfigurationRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyRegistrationFailed]: {\n        message: 'Device failed to create passkey.',\n        recoverySuggestion: notSupportedRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyRetrievalFailed]: {\n        message: 'Device failed to retrieve passkey.',\n        recoverySuggestion: 'Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.',\n    },\n    [PasskeyErrorCode.PasskeyAlreadyExists]: {\n        message: 'Passkey already exists in authenticator.',\n        recoverySuggestion: 'Proceed with existing passkey or try again after deleting the credential.',\n    },\n    [PasskeyErrorCode.PasskeyRegistrationCanceled]: {\n        message: 'Passkey registration ceremony has been canceled.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyAuthenticationCanceled]: {\n        message: 'Passkey authentication ceremony has been canceled.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyOperationAborted]: {\n        message: 'Passkey operation has been aborted.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.RelyingPartyMismatch]: {\n        message: 'Relying party does not match current domain.',\n        recoverySuggestion: 'Ensure relying party identifier matches current domain.',\n    },\n};\nexport const assertPasskeyError = createAssertionFunction(passkeyErrorMap, PasskeyError);\n/**\n * Handle Passkey Authentication Errors\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nexport const handlePasskeyAuthenticationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAuthenticationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAuthenticationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n/**\n * Handle Passkey Registration Errors\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nexport const handlePasskeyRegistrationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        // Duplicate Passkey\n        if (err.name === 'InvalidStateError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAlreadyExists];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAlreadyExists,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // User Cancels Ceremony / Generic Catch All\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyRegistrationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyRegistrationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n/**\n * Handles Overlapping Passkey Errors Between Registration & Authentication\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyError = (err) => {\n    if (err instanceof Error) {\n        // Passkey Operation Aborted\n        if (err.name === 'AbortError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyOperationAborted];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyOperationAborted,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // Relying Party / Domain Mismatch\n        if (err.name === 'SecurityError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.RelyingPartyMismatch];\n            return new PasskeyError({\n                name: PasskeyErrorCode.RelyingPartyMismatch,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return new PasskeyError({\n        name: AmplifyErrorCode.Unknown,\n        message: 'An unknown error has occurred.',\n        underlyingError: err,\n    });\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isBrowser } from '@aws-amplify/core/internals/utils';\n/**\n * Determines if passkey is supported in current context\n * Will return false if executed in non-secure context\n * @returns boolean\n */\nexport const getIsPasskeySupported = () => {\n    return (isBrowser() &&\n        window.isSecureContext &&\n        'credentials' in navigator &&\n        typeof window.PublicKeyCredential === 'function');\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder } from '@aws-amplify/core/internals/utils';\n// https://datatracker.ietf.org/doc/html/rfc4648#page-7\n/**\n * Converts an ArrayBuffer to a base64url encoded string\n * @param buffer - the ArrayBuffer instance of a Uint8Array\n * @returns string - a base64url encoded string\n */\nexport const convertArrayBufferToBase64Url = (buffer) => {\n    return base64Encoder.convert(new Uint8Array(buffer), {\n        urlSafe: true,\n        skipPadding: true,\n    });\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decoder } from '@aws-amplify/core/internals/utils';\n/**\n * Converts a base64url encoded string to an ArrayBuffer\n * @param base64url - a base64url encoded string\n * @returns ArrayBuffer\n */\nexport const convertBase64UrlToArrayBuffer = (base64url) => {\n    return Uint8Array.from(base64Decoder.convert(base64url, { urlSafe: true }), x => x.charCodeAt(0)).buffer;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PasskeyErrorCode, assertPasskeyError, handlePasskeyAuthenticationError, } from './errors';\nimport { getIsPasskeySupported } from './getIsPasskeySupported';\nimport { deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson, } from './serde';\nimport { assertCredentialIsPkcWithAuthenticatorAssertionResponse, } from './types';\nexport const getPasskey = async (input) => {\n    try {\n        const isPasskeySupported = getIsPasskeySupported();\n        assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n        const passkeyGetOptions = deserializeJsonToPkcGetOptions(input);\n        const credential = await navigator.credentials.get({\n            publicKey: passkeyGetOptions,\n        });\n        assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential);\n        return serializePkcWithAssertionToJson(credential);\n    }\n    catch (err) {\n        throw handlePasskeyAuthenticationError(err);\n    }\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { convertArrayBufferToBase64Url, convertBase64UrlToArrayBuffer, } from '../../../foundation/convert';\n/**\n * Deserializes Public Key Credential Creation Options JSON\n * @param input PasskeyCreateOptionsJson\n * @returns PublicKeyCredentialCreationOptions\n */\nexport const deserializeJsonToPkcCreationOptions = (input) => {\n    const userIdBuffer = convertBase64UrlToArrayBuffer(input.user.id);\n    const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n    const excludeCredentialsWithBuffer = (input.excludeCredentials || []).map(excludeCred => ({\n        ...excludeCred,\n        id: convertBase64UrlToArrayBuffer(excludeCred.id),\n    }));\n    return {\n        ...input,\n        excludeCredentials: excludeCredentialsWithBuffer,\n        challenge: challengeBuffer,\n        user: {\n            ...input.user,\n            id: userIdBuffer,\n        },\n    };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyCreateResult\n * @returns PasskeyCreateResultJson\n */\nexport const serializePkcWithAttestationToJson = (input) => {\n    const response = {\n        clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n        attestationObject: convertArrayBufferToBase64Url(input.response.attestationObject),\n        transports: input.response.getTransports(),\n        publicKeyAlgorithm: input.response.getPublicKeyAlgorithm(),\n        authenticatorData: convertArrayBufferToBase64Url(input.response.getAuthenticatorData()),\n    };\n    const publicKey = input.response.getPublicKey();\n    if (publicKey) {\n        response.publicKey = convertArrayBufferToBase64Url(publicKey);\n    }\n    const resultJson = {\n        type: input.type,\n        id: input.id,\n        rawId: convertArrayBufferToBase64Url(input.rawId),\n        clientExtensionResults: input.getClientExtensionResults(),\n        response,\n    };\n    if (input.authenticatorAttachment) {\n        resultJson.authenticatorAttachment = input.authenticatorAttachment;\n    }\n    return resultJson;\n};\n/**\n * Deserializes Public Key Credential Get Options JSON\n * @param input PasskeyGetOptionsJson\n * @returns PublicKeyCredentialRequestOptions\n */\nexport const deserializeJsonToPkcGetOptions = (input) => {\n    const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n    const allowedCredentialsWithBuffer = (input.allowCredentials || []).map(allowedCred => ({\n        ...allowedCred,\n        id: convertBase64UrlToArrayBuffer(allowedCred.id),\n    }));\n    return {\n        ...input,\n        challenge: challengeBuffer,\n        allowCredentials: allowedCredentialsWithBuffer,\n    };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyGetResult\n * @returns PasskeyGetResultJson\n */\nexport const serializePkcWithAssertionToJson = (input) => {\n    const response = {\n        clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n        authenticatorData: convertArrayBufferToBase64Url(input.response.authenticatorData),\n        signature: convertArrayBufferToBase64Url(input.response.signature),\n    };\n    if (input.response.userHandle) {\n        response.userHandle = convertArrayBufferToBase64Url(input.response.userHandle);\n    }\n    const resultJson = {\n        id: input.id,\n        rawId: convertArrayBufferToBase64Url(input.rawId),\n        type: input.type,\n        clientExtensionResults: input.getClientExtensionResults(),\n        response,\n    };\n    if (input.authenticatorAttachment) {\n        resultJson.authenticatorAttachment = input.authenticatorAttachment;\n    }\n    return resultJson;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PasskeyErrorCode, assertPasskeyError } from '../errors';\n/**\n * Passkey Create Types\n */\nexport { assertValidCredentialCreationOptions, } from './shared';\nexport function assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAttestationResponse, PasskeyErrorCode.PasskeyRegistrationFailed);\n}\nexport function assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAssertionResponse, PasskeyErrorCode.PasskeyRetrievalFailed);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nexport const getNowString = () => {\n    const now = new Date();\n    const weekDay = WEEK_NAMES[now.getUTCDay()];\n    const month = MONTH_NAMES[now.getUTCMonth()];\n    const day = now.getUTCDate();\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n        hours = `0${hours}`;\n    }\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    const year = now.getUTCFullYear();\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n    return dateNow;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Decoder, base64Encoder, } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder';\nexport const getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AmplifyUrl, AuthAction, assertTokenProviderConfig, base64Encoder, getDeviceName, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { InitiateAuthException } from '../types/errors';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createAssociateSoftwareTokenClient, createConfirmDeviceClient, createInitiateAuthClient, createRespondToAuthChallengeClient, createVerifySoftwareTokenClient, } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { handleWebAuthnSignInResult } from '../../../client/flows/userAuth/handleWebAuthnSignInResult';\nimport { handlePasswordSRP } from '../../../client/flows/shared/handlePasswordSRP';\nimport { initiateSelectedChallenge } from '../../../client/flows/userAuth/handleSelectChallenge';\nimport { handleSelectChallengeWithPassword } from '../../../client/flows/userAuth/handleSelectChallengeWithPassword';\nimport { handleSelectChallengeWithPasswordSRP } from '../../../client/flows/userAuth/handleSelectChallengeWithPasswordSRP';\nimport { signInStore } from '../../../client/utils/store';\nimport { assertDeviceMetadata } from './types';\nimport { getAuthenticationHelper, getBytesFromHex, getNowString, getSignatureString, } from './srp';\nimport { BigInteger } from './srp/BigInteger';\nimport { getUserContextData } from './userContextData';\nconst USER_ATTRIBUTES = 'userAttributes.';\nexport async function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: challengeResponse,\n    };\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'CUSTOM_CHALLENGE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    }\n    return response;\n}\nexport async function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    if (challengeResponse === 'EMAIL') {\n        return {\n            ChallengeName: 'MFA_SETUP',\n            Session: session,\n            ChallengeParameters: {\n                MFAS_CAN_SETUP: '[\"EMAIL_OTP\"]',\n            },\n            $metadata: {},\n        };\n    }\n    if (challengeResponse === 'TOTP') {\n        return {\n            ChallengeName: 'MFA_SETUP',\n            Session: session,\n            ChallengeParameters: {\n                MFAS_CAN_SETUP: '[\"SOFTWARE_TOKEN_MFA\"]',\n            },\n            $metadata: {},\n        };\n    }\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    const isTOTPCode = /^\\d+$/.test(challengeResponse);\n    if (isTOTPCode) {\n        const verifySoftwareToken = createVerifySoftwareTokenClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        const { Session } = await verifySoftwareToken({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, {\n            UserCode: challengeResponse,\n            Session: session,\n            FriendlyDeviceName: deviceName,\n        });\n        signInStore.dispatch({\n            type: 'SET_SIGN_IN_SESSION',\n            value: Session,\n        });\n        const jsonReq = {\n            ChallengeName: 'MFA_SETUP',\n            ChallengeResponses: challengeResponses,\n            Session,\n            ClientMetadata: clientMetadata,\n            ClientId: userPoolClientId,\n        };\n        const respondToAuthChallenge = createRespondToAuthChallengeClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        return respondToAuthChallenge({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, jsonReq);\n    }\n    const isEmail = challengeResponse.includes('@');\n    if (isEmail) {\n        challengeResponses.EMAIL = challengeResponse;\n        const jsonReq = {\n            ChallengeName: 'MFA_SETUP',\n            ChallengeResponses: challengeResponses,\n            Session: session,\n            ClientMetadata: clientMetadata,\n            ClientId: userPoolClientId,\n        };\n        const respondToAuthChallenge = createRespondToAuthChallengeClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        return respondToAuthChallenge({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, jsonReq);\n    }\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `Cannot proceed with MFA setup using challengeResponse: ${challengeResponse}`,\n        recoverySuggestion: 'Try passing \"EMAIL\", \"TOTP\", a valid email, or OTP code as the challengeResponse.',\n    });\n}\nexport async function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    assertValidationError(challengeResponse === 'TOTP' ||\n        challengeResponse === 'SMS' ||\n        challengeResponse === 'EMAIL', AuthValidationErrorCode.IncorrectMFAMethod);\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: mapMfaType(challengeResponse),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SELECT_MFA_TYPE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        ...createAttributes(requiredAttributes),\n        NEW_PASSWORD: challengeResponse,\n        USERNAME: username,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_PASSWORD_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ??\n        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n        username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    return handlePasswordSRP({\n        username,\n        password,\n        clientMetadata,\n        config,\n        tokenOrchestrator,\n        authFlow: 'USER_SRP_AUTH',\n    });\n}\nexport async function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    assertTokenProviderConfig(config);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        CHALLENGE_NAME: 'SRP_A',\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: challengeParameters, Session: session } = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nasync function handleDeviceSRPAuth({ username, config, clientMetadata, session, tokenOrchestrator, }) {\n    const { userPoolId, userPoolEndpoint } = config;\n    const clientId = config.userPoolClientId;\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n    const challengeResponses = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        DEVICE_KEY: deviceMetadata.deviceKey,\n    };\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: clientId,\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: respondedChallengeParameters, Session } = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    return handleDevicePasswordVerifier(username, respondedChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, { userPoolId, userPoolClientId, userPoolEndpoint }, tokenOrchestrator) {\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const { deviceKey } = deviceMetadata;\n    const { deviceGroupKey } = deviceMetadata;\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username: deviceMetadata.deviceKey,\n        password: deviceMetadata.randomPassword,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: challengeParameters?.USERNAME ?? username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username: deviceKey,\n            userPoolName: deviceGroupKey,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n        DEVICE_KEY: deviceKey,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: userPoolClientId,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n}\nexport async function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const username = challengeParameters?.USER_ID_FOR_SRP;\n    if (!username)\n        throw new AuthError({\n            name: 'EmptyUserIdForSRPException',\n            message: 'USER_ID_FOR_SRP was not found in challengeParameters',\n        });\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username,\n        password,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username,\n            userPoolName,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function getSignInResult(params) {\n    const { challengeName, challengeParameters, availableChallenges } = params;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    switch (challengeName) {\n        case 'CUSTOM_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n                    additionalInfo: challengeParameters,\n                },\n            };\n        case 'MFA_SETUP': {\n            const { signInSession, username } = signInStore.getState();\n            const mfaSetupTypes = getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP)) || [];\n            const allowedMfaSetupTypes = getAllowedMfaSetupTypes(mfaSetupTypes);\n            const isTotpMfaSetupAvailable = allowedMfaSetupTypes.includes('TOTP');\n            const isEmailMfaSetupAvailable = allowedMfaSetupTypes.includes('EMAIL');\n            if (isTotpMfaSetupAvailable && isEmailMfaSetupAvailable) {\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SETUP_SELECTION',\n                        allowedMFATypes: allowedMfaSetupTypes,\n                    },\n                };\n            }\n            if (isEmailMfaSetupAvailable) {\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_EMAIL_SETUP',\n                    },\n                };\n            }\n            if (isTotpMfaSetupAvailable) {\n                const associateSoftwareToken = createAssociateSoftwareTokenClient({\n                    endpointResolver: createCognitoUserPoolEndpointResolver({\n                        endpointOverride: authConfig.userPoolEndpoint,\n                    }),\n                });\n                const { Session, SecretCode: secretCode } = await associateSoftwareToken({ region: getRegionFromUserPoolId(authConfig.userPoolId) }, {\n                    Session: signInSession,\n                });\n                signInStore.dispatch({\n                    type: 'SET_SIGN_IN_SESSION',\n                    value: Session,\n                });\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n                        totpSetupDetails: getTOTPSetupDetails(secretCode, username),\n                    },\n                };\n            }\n            throw new AuthError({\n                name: AuthErrorCodes.SignInException,\n                message: `Cannot initiate MFA setup from available types: ${mfaSetupTypes}`,\n            });\n        }\n        case 'NEW_PASSWORD_REQUIRED':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n                    missingAttributes: parseAttributes(challengeParameters.requiredAttributes),\n                },\n            };\n        case 'SELECT_MFA_TYPE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n                    allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE)),\n                },\n            };\n        case 'SMS_OTP':\n        case 'SMS_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'SOFTWARE_TOKEN_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n                },\n            };\n        case 'EMAIL_OTP':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_EMAIL_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'WEB_AUTHN':\n            return handleWebAuthnSignInResult(challengeParameters);\n        case 'PASSWORD':\n        case 'PASSWORD_SRP':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_PASSWORD',\n                },\n            };\n        case 'SELECT_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_FIRST_FACTOR_SELECTION',\n                    availableChallenges,\n                },\n            };\n        case 'ADMIN_NO_SRP_AUTH':\n            break;\n        case 'DEVICE_PASSWORD_VERIFIER':\n            break;\n        case 'DEVICE_SRP_AUTH':\n            break;\n        case 'PASSWORD_VERIFIER':\n            break;\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: 'An error occurred during the sign in process. ' +\n            `${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function getTOTPSetupDetails(secretCode, username) {\n    return {\n        sharedSecret: secretCode,\n        getSetupUri: (appName, accountName) => {\n            const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n            return new AmplifyUrl(totpUri);\n        },\n    };\n}\nexport function getSignInResultFromError(errorName) {\n    if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'RESET_PASSWORD' },\n        };\n    }\n    else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'CONFIRM_SIGN_UP' },\n        };\n    }\n}\nexport function parseAttributes(attributes) {\n    if (!attributes)\n        return [];\n    const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n    return parsedAttributes;\n}\nexport function createAttributes(attributes) {\n    if (!attributes)\n        return {};\n    const newAttributes = {};\n    Object.entries(attributes).forEach(([key, value]) => {\n        if (value)\n            newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n    });\n    return newAttributes;\n}\nexport async function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n    const userAttributes = options?.userAttributes;\n    const deviceName = options?.friendlyDeviceName;\n    switch (challengeName) {\n        case 'WEB_AUTHN':\n        case 'SELECT_CHALLENGE':\n            if (challengeResponse === 'PASSWORD_SRP' ||\n                challengeResponse === 'PASSWORD') {\n                return {\n                    ChallengeName: challengeResponse,\n                    Session: session,\n                    $metadata: {},\n                };\n            }\n            return initiateSelectedChallenge({\n                username,\n                session,\n                selectedChallenge: challengeResponse,\n                config,\n                clientMetadata,\n            });\n        case 'SELECT_MFA_TYPE':\n            return handleSelectMFATypeChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'MFA_SETUP':\n            return handleMFASetupChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                deviceName,\n                config,\n            });\n        case 'NEW_PASSWORD_REQUIRED':\n            return handleCompleteNewPasswordChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                requiredAttributes: userAttributes,\n                config,\n            });\n        case 'CUSTOM_CHALLENGE':\n            return retryOnResourceNotFoundException(handleCustomChallenge, [\n                {\n                    challengeResponse,\n                    clientMetadata,\n                    session,\n                    username,\n                    config,\n                    tokenOrchestrator,\n                },\n            ], username, tokenOrchestrator);\n        case 'SMS_MFA':\n        case 'SOFTWARE_TOKEN_MFA':\n        case 'SMS_OTP':\n        case 'EMAIL_OTP':\n            return handleMFAChallenge({\n                challengeName,\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'PASSWORD':\n            return handleSelectChallengeWithPassword(username, challengeResponse, clientMetadata, config, session);\n        case 'PASSWORD_SRP':\n            return handleSelectChallengeWithPasswordSRP(username, challengeResponse, // This is the actual password\n            clientMetadata, config, session, tokenOrchestrator);\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `An error occurred during the sign in process.\n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function mapMfaType(mfa) {\n    let mfaType = 'SMS_MFA';\n    if (mfa === 'TOTP')\n        mfaType = 'SOFTWARE_TOKEN_MFA';\n    if (mfa === 'EMAIL')\n        mfaType = 'EMAIL_OTP';\n    return mfaType;\n}\nexport function getMFAType(type) {\n    if (type === 'SMS_MFA')\n        return 'SMS';\n    if (type === 'SOFTWARE_TOKEN_MFA')\n        return 'TOTP';\n    if (type === 'EMAIL_OTP')\n        return 'EMAIL';\n    // TODO: log warning for unknown MFA type\n}\nexport function getMFATypes(types) {\n    if (!types)\n        return undefined;\n    return types.map(getMFAType).filter(Boolean);\n}\nexport function parseMFATypes(mfa) {\n    if (!mfa)\n        return [];\n    return JSON.parse(mfa);\n}\nexport function getAllowedMfaSetupTypes(availableMfaSetupTypes) {\n    return availableMfaSetupTypes.filter(authMfaType => authMfaType === 'EMAIL' || authMfaType === 'TOTP');\n}\nexport async function assertUserNotAuthenticated() {\n    let authUser;\n    try {\n        authUser = await getCurrentUser();\n    }\n    catch (error) { }\n    if (authUser && authUser.userId && authUser.username) {\n        throw new AuthError({\n            name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n            message: 'There is already a signed in user.',\n            recoverySuggestion: 'Call signOut before calling signIn again.',\n        });\n    }\n}\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nexport async function getNewDeviceMetadata({ userPoolId, userPoolEndpoint, newDeviceMetadata, accessToken, }) {\n    if (!newDeviceMetadata)\n        return undefined;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const deviceKey = newDeviceMetadata?.DeviceKey;\n    const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n    try {\n        await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n    }\n    catch (errGenHash) {\n        // TODO: log error here\n        return undefined;\n    }\n    const deviceSecretVerifierConfig = {\n        Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n        PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices())),\n    };\n    const randomPassword = authenticationHelper.getRandomPassword();\n    try {\n        const confirmDevice = createConfirmDeviceClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        await confirmDevice({ region: getRegionFromUserPoolId(userPoolId) }, {\n            AccessToken: accessToken,\n            DeviceName: await getDeviceName(),\n            DeviceKey: newDeviceMetadata?.DeviceKey,\n            DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        });\n        return {\n            deviceKey,\n            deviceGroupKey,\n            randomPassword,\n        };\n    }\n    catch (error) {\n        // TODO: log error here\n        return undefined;\n    }\n}\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nexport async function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n    try {\n        return await func(...args);\n    }\n    catch (error) {\n        if (error instanceof AuthError &&\n            error.name === 'ResourceNotFoundException' &&\n            error.message.includes('Device does not exist.')) {\n            await tokenOrchestrator.clearDeviceMetadata(username);\n            return func(...args);\n        }\n        throw error;\n    }\n}\nexport function setActiveSignInUsername(username) {\n    const { dispatch } = signInStore;\n    dispatch({ type: 'SET_USERNAME', value: username });\n}\nexport function getActiveSignInUsername(username) {\n    const state = signInStore.getState();\n    return state.username ?? username;\n}\nexport async function handleMFAChallenge({ challengeName, challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    if (challengeName === 'EMAIL_OTP') {\n        challengeResponses.EMAIL_OTP_CODE = challengeResponse;\n    }\n    if (challengeName === 'SMS_MFA') {\n        challengeResponses.SMS_MFA_CODE = challengeResponse;\n    }\n    if (challengeName === 'SMS_OTP') {\n        challengeResponses.SMS_OTP_CODE = challengeResponse;\n    }\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n        challengeResponses.SOFTWARE_TOKEN_MFA_CODE = challengeResponse;\n    }\n    const userContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: challengeName,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData: userContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories';\nimport { cacheCognitoTokens } from '../../../providers/cognito/tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../../../providers/cognito/utils/dispatchSignedInHubEvent';\nimport { getNewDeviceMetadata, getSignInResult, } from '../../../providers/cognito/utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, signInStore, } from '../../../client/utils/store';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { getPasskey } from '../../utils/passkey';\nimport { PasskeyErrorCode, assertPasskeyError, } from '../../utils/passkey/errors';\nimport { AuthError } from '../../../errors/AuthError';\nexport async function handleWebAuthnSignInResult(challengeParameters) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, signInSession, signInDetails, challengeName } = signInStore.getState();\n    if (challengeName !== 'WEB_AUTHN' || !username) {\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: 'Unable to proceed due to invalid sign in state.',\n        });\n    }\n    const { CREDENTIAL_REQUEST_OPTIONS: credentialRequestOptions } = challengeParameters;\n    assertPasskeyError(!!credentialRequestOptions, PasskeyErrorCode.InvalidPasskeyAuthenticationOptions);\n    const cred = await getPasskey(JSON.parse(credentialRequestOptions));\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: authConfig.userPoolEndpoint,\n        }),\n    });\n    const { ChallengeName: nextChallengeName, ChallengeParameters: nextChallengeParameters, AuthenticationResult: authenticationResult, Session: nextSession, } = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        ChallengeName: 'WEB_AUTHN',\n        ChallengeResponses: {\n            USERNAME: username,\n            CREDENTIAL: JSON.stringify(cred),\n        },\n        ClientId: authConfig.userPoolClientId,\n        Session: signInSession,\n    });\n    setActiveSignInState({\n        signInSession: nextSession,\n        username,\n        challengeName: nextChallengeName,\n        signInDetails,\n    });\n    if (authenticationResult) {\n        await cacheCognitoTokens({\n            ...authenticationResult,\n            username,\n            NewDeviceMetadata: await getNewDeviceMetadata({\n                userPoolId: authConfig.userPoolId,\n                userPoolEndpoint: authConfig.userPoolEndpoint,\n                newDeviceMetadata: authenticationResult.NewDeviceMetadata,\n                accessToken: authenticationResult.AccessToken,\n            }),\n            signInDetails,\n        });\n        cleanActiveSignInState();\n        await dispatchSignedInHubEvent();\n        return {\n            isSignedIn: true,\n            nextStep: { signInStep: 'DONE' },\n        };\n    }\n    if (nextChallengeName === 'WEB_AUTHN') {\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: 'Sequential WEB_AUTHN challenges returned from underlying service cannot be handled.',\n        });\n    }\n    return getSignInResult({\n        challengeName: nextChallengeName,\n        challengeParameters: nextChallengeParameters,\n    });\n}\n","/* eslint-disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n    if (a != null)\n        this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n    return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n    while (--n >= 0) {\n        const v = x * this[i++] + w[j] + c;\n        c = Math.floor(v / 0x4000000);\n        w[j++] = v & 0x3ffffff;\n    }\n    return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n    const xl = x & 0x7fff;\n    const xh = x >> 15;\n    while (--n >= 0) {\n        let l = this[i] & 0x7fff;\n        const h = this[i++] >> 15;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n    const xl = x & 0x3fff;\n    const xh = x >> 14;\n    while (--n >= 0) {\n        let l = this[i] & 0x3fff;\n        const h = this[i++] >> 14;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n}\nelse {\n    // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = [];\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n    const c = BI_RC[s.charCodeAt(i)];\n    return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n    for (let i = this.t - 1; i >= 0; --i)\n        r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = x < 0 ? -1 : 0;\n    if (x > 0)\n        this[0] = x;\n    else if (x < -1)\n        this[0] = x + this.DV;\n    else\n        this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    const r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n    let k;\n    if (b === 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    this.t = 0;\n    this.s = 0;\n    let i = s.length;\n    let mi = false;\n    let sh = 0;\n    while (--i >= 0) {\n        const x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) === '-')\n                mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh === 0)\n            this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = x >> (this.DB - sh);\n        }\n        else\n            this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB)\n            sh -= this.DB;\n    }\n    this.clamp();\n    if (mi)\n        BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n    const c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)\n        --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n    if (this.s < 0)\n        return '-' + this.negate().toString(b);\n    let k;\n    if (b == 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    const km = (1 << k) - 1;\n    let d;\n    let m = false;\n    let r = '';\n    let i = this.t;\n    let p = this.DB - ((i * this.DB) % k);\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += int2char(d);\n        }\n    }\n    return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n    const r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n// (public) |this|\nfunction bnAbs() {\n    return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n    let r = this.s - a.s;\n    if (r != 0)\n        return r;\n    let i = this.t;\n    r = i - a.t;\n    if (r != 0)\n        return this.s < 0 ? -r : r;\n    while (--i >= 0)\n        if ((r = this[i] - a[i]) != 0)\n            return r;\n    return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    let r = 1;\n    let t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n    if (this.t <= 0)\n        return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n    let i;\n    for (i = this.t - 1; i >= 0; --i)\n        r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n    for (let i = n; i < this.t; ++i)\n        r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << cbs) - 1;\n    const ds = Math.floor(n / this.DB);\n    let c = (this.s << bs) & this.DM;\n    let i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    const ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (let i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0)\n        r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c < -1)\n        r[i++] = this.DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n    const x = this.abs();\n    const y = a.abs();\n    let i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s !== a.s)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n    const x = this.abs();\n    let i = (r.t = 2 * x.t);\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        const c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n            x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n    const pm = m.abs();\n    if (pm.t <= 0)\n        return;\n    const pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null)\n            q.fromInt(0);\n        if (r != null)\n            this.copyTo(r);\n        return;\n    }\n    if (r === null)\n        r = nbi();\n    const y = nbi();\n    const ts = this.s;\n    const ms = m.s;\n    const nsh = this.DB - nbits(pm[pm.t - 1]);\n    // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    const ys = y.t;\n    const y0 = y[ys - 1];\n    if (y0 === 0)\n        return;\n    const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n    const d1 = this.FV / yt;\n    const d2 = (1 << this.F1) / yt;\n    const e = 1 << this.F2;\n    let i = r.t;\n    let j = i - ys;\n    const t = q === null ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y);\n    // \"negative\" y so we can replace sub with am later\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        let qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n            // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd)\n                r.subTo(t, r);\n        }\n    }\n    if (q !== null) {\n        r.drShiftTo(ys, q);\n        if (ts !== ms)\n            BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0)\n        r.rShiftTo(nsh, r);\n    // Denormalize remainder\n    if (ts < 0)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n    const r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        a.subTo(r, r);\n    return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n    if (this.t < 1)\n        return 0;\n    const x = this[0];\n    if ((x & 1) === 0)\n        return 0;\n    let y = x & 3;\n    // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - ((x * y) % this.DV))) % this.DV;\n    // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n    return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n    const r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n    const r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n    const r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n    const r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n    const r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        this.m.subTo(r, r);\n    return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n    const r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n    while (x.t <= this.mt2)\n        // pad x so am has enough room later\n        x[x.t++] = 0;\n    for (let i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        let j = x[i] & 0x7fff;\n        const u0 = (j * this.mpl +\n            (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) &\n            x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0)\n        x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n    let i = e.bitLength();\n    let k;\n    let r = nbv(1);\n    const z = new Montgomery(m);\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    // precomputation\n    const g = [];\n    let n = 3;\n    const k1 = k - 1;\n    const km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        const g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n    let j = e.t - 1;\n    let w;\n    let is1 = true;\n    let r2 = nbi();\n    let t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (this.DB + i - k1);\n        }\n        n = k;\n        while ((w & 1) === 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) {\n            // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    const result = z.revert(r);\n    callback(null, result);\n    return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nexport const SHORT_TO_HEX = {};\nexport const HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SHORT_TO_HEX } from './constants';\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nexport const getHexFromBytes = (bytes) => {\n    let out = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes';\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromData = (data) => {\n    const sha256 = new Sha256();\n    sha256.update(data);\n    const hashedData = sha256.digestSync();\n    const hashHexFromUint8 = getHexFromBytes(hashedData);\n    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBytesFromHex } from './getBytesFromHex';\nimport { getHashFromData } from './getHashFromData';\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from './BigInteger';\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nexport const getPaddedHex = (bigInt) => {\n    if (!(bigInt instanceof BigInteger)) {\n        throw new Error('Not a BigInteger');\n    }\n    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n    let hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n    if (isNegative) {\n        /* Flip the bits of the representation */\n        const invertedNibbles = hexStr\n            .split('')\n            .map((x) => {\n            const invertedNibble = ~parseInt(x, 16) & 0xf;\n            return '0123456789ABCDEF'.charAt(invertedNibble);\n        })\n            .join('');\n        /* After flipping the bits, add one to get the 2's complement representation */\n        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n        hexStr = flippedBitsBI.toString(16);\n        /*\n        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n\n        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n        without changing the represented value.\n\n        This only happens in the case when the input is 80...00\n        */\n        if (hexStr.toUpperCase().startsWith('FF8')) {\n            hexStr = hexStr.substring(2);\n        }\n    }\n    return hexStr;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { cryptoSecureRandomInt } from './cryptoSecureRandomInt';\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n    // Shortcuts\n    const { words } = wordArray;\n    const { sigBytes } = wordArray;\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i++) {\n        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        hexChars.push((bite >>> 4).toString(16));\n        hexChars.push((bite & 0x0f).toString(16));\n    }\n    return hexChars.join('');\n}\nexport class WordArray {\n    constructor(words, sigBytes) {\n        this.words = [];\n        let Words = words;\n        Words = this.words = Words || [];\n        if (sigBytes !== undefined) {\n            this.sigBytes = sigBytes;\n        }\n        else {\n            this.sigBytes = Words.length * 4;\n        }\n    }\n    random(nBytes) {\n        const words = [];\n        for (let i = 0; i < nBytes; i += 4) {\n            words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray(words, nBytes);\n    }\n    toString() {\n        return hexStringify(this);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCrypto } from './globalHelpers';\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nexport function cryptoSecureRandomInt() {\n    const crypto = getCrypto();\n    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n    return randomResult;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { WordArray } from '@aws-amplify/core/internals/utils';\nimport { getBytesFromHex } from './getBytesFromHex';\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nexport const getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { textEncoder } from '../../textEncoder';\nimport { BigInteger } from '../BigInteger';\nimport { calculateS, calculateU } from '../calculate';\nimport { getBytesFromHex } from '../getBytesFromHex';\nimport { getHashFromData } from '../getHashFromData';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getHexFromBytes } from '../getHexFromBytes';\nimport { getHkdfKey } from '../getHkdfKey';\nimport { getPaddedHex } from '../getPaddedHex';\nimport { getRandomBytes } from '../getRandomBytes';\nimport { getRandomString } from '../getRandomString';\n/** @class */\nexport default class AuthenticationHelper {\n    constructor({ userPoolName, a, g, A, N, }) {\n        this.encoder = textEncoder;\n        this.userPoolName = userPoolName;\n        this.a = a;\n        this.g = g;\n        this.A = A;\n        this.N = N;\n        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n    }\n    /**\n     * @returns {string} Generated random value included in password hash.\n     */\n    getRandomPassword() {\n        if (!this.randomPassword) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerRandomPassword',\n                message: 'random password is empty',\n            });\n        }\n        return this.randomPassword;\n    }\n    /**\n     * @returns {string} Generated random value included in devices hash.\n     */\n    getSaltToHashDevices() {\n        if (!this.saltToHashDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegersaltToHashDevices',\n                message: 'saltToHashDevices is empty',\n            });\n        }\n        return this.saltToHashDevices;\n    }\n    /**\n     * @returns {string} Value used to verify devices.\n     */\n    getVerifierDevices() {\n        if (!this.verifierDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerVerifierDevices',\n                message: 'verifyDevices is empty',\n            });\n        }\n        return this.verifierDevices;\n    }\n    /**\n     * Generate salts and compute verifier.\n     *\n     * @param {string} deviceGroupKey Devices to generate verifier for.\n     * @param {string} username User to generate verifier for.\n     *\n     * @returns {Promise<void>}\n     */\n    async generateHashDevice(deviceGroupKey, username) {\n        this.randomPassword = getRandomString();\n        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n        const hashedString = getHashFromData(combinedString);\n        const hexRandom = getHexFromBytes(getRandomBytes(16));\n        // The random hex will be unambiguously represented as a postive integer\n        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n        return new Promise((resolve, reject) => {\n            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                this.verifierDevices = getPaddedHex(result);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Calculates the final HKDF key based on computed S value, computed U value and the key\n     *\n     * @param {String} username Username.\n     * @param {String} password Password.\n     * @param {AuthBigInteger} B Server B value.\n     * @param {AuthBigInteger} salt Generated salt.\n     */\n    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n            throw new Error('B cannot be zero.');\n        }\n        const U = calculateU({\n            A: this.A,\n            B: serverBValue,\n        });\n        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n        const usernamePasswordHash = getHashFromData(usernamePassword);\n        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n        const S = await calculateS({\n            a: this.a,\n            g: this.g,\n            k: this.k,\n            x,\n            B: serverBValue,\n            N: this.N,\n            U,\n        });\n        const context = this.encoder.convert('Caldera Derived Key');\n        const spacer = this.encoder.convert(String.fromCharCode(1));\n        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n        info.set(context, 0);\n        info.set(spacer, context.byteLength);\n        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n        return hkdfKey;\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nexport const getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getPaddedHex } from '../getPaddedHex';\n/**\n * @internal\n */\nexport const calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport const calculateS = async ({ a, g, k, x, B, N, U, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(x, N, (outerErr, outerResult) => {\n            if (outerErr) {\n                reject(outerErr);\n                return;\n            }\n            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n                if (innerErr) {\n                    reject(innerErr);\n                    return;\n                }\n                resolve(innerResult.mod(N));\n            });\n        });\n    });\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nexport const getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\n/**\n * @internal\n */\nexport const calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthenticationHelper } from './AuthenticationHelper';\nimport { BigInteger } from './BigInteger';\nimport { calculateA } from './calculate';\nimport { INIT_N } from './constants';\nimport { getHexFromBytes } from './getHexFromBytes';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nexport const getAuthenticationHelper = async (userPoolName) => {\n    const N = new BigInteger(INIT_N, 16);\n    const g = new BigInteger('2', 16);\n    const a = generateRandomBigInteger();\n    const A = await calculateA({ a, g, N });\n    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n    // This will be interpreted as a postive 128-bit integer\n    const hexRandom = getHexFromBytes(getRandomBytes(128));\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n    return new BigInteger(hexRandom, 16);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_SHORT } from './constants';\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport const getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const textEncoder = {\n    convert(input) {\n        return new TextEncoder().encode(input);\n    },\n};\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  Ref,\n  ResolverOptions,\n  get,\n} from 'react-hook-form';\n\nconst setCustomValidity = (\n  ref: Ref,\n  fieldPath: string,\n  errors: FieldErrors,\n) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues extends FieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors);\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) =>\n        setCustomValidity(ref, fieldPath, errors),\n      );\n    }\n  }\n};\n","import {\n  Field,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n  ResolverOptions,\n  get,\n  set,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestErrors = <TFieldValues extends FieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n    const error = Object.assign(errors[path] || {}, {\n      ref: field && field.ref,\n    });\n\n    if (isNameInFieldArray(options.names || Object.keys(errors), path)) {\n      const fieldArrayErrors = Object.assign({}, get(fieldErrors, path));\n\n      set(fieldArrayErrors, 'root', error);\n      set(fieldErrors, path, fieldArrayErrors);\n    } else {\n      set(fieldErrors, path, error);\n    }\n  }\n\n  return fieldErrors;\n};\n\nconst isNameInFieldArray = (\n  names: InternalFieldName[],\n  name: InternalFieldName,\n) => names.some((n) => n.startsWith(name + '.'));\n","import { toNestErrors, validateFieldsNatively } from '@hookform/resolvers';\nimport {\n  FieldError,\n  FieldValues,\n  Resolver,\n  appendErrors,\n} from 'react-hook-form';\nimport * as Yup from 'yup';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport function yupResolver<TFieldValues extends FieldValues>(\n  schema:\n    | Yup.ObjectSchema<TFieldValues>\n    | ReturnType<typeof Yup.lazy<Yup.ObjectSchema<TFieldValues>>>,\n  schemaOptions: Parameters<(typeof schema)['validate']>[1] = {},\n  resolverOptions: {\n    /**\n     * @default async\n     */\n    mode?: 'async' | 'sync';\n    /**\n     * Return the raw input values rather than the parsed values.\n     * @default false\n     */\n    raw?: boolean;\n  } = {},\n): Resolver<Yup.InferType<typeof schema>> {\n  return async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: resolverOptions.raw ? values : result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestErrors(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown): value is object =>\n  typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n  const isFileListInstance =\n    typeof FileList !== 'undefined' ? data instanceof FileList : false;\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || isFileListInstance)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!isArray && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          copy[key] = cloneObject(data[key]);\n        }\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(\n  object: T,\n  path?: string | null,\n  defaultValue?: unknown,\n): any => {\n  if (!path || !isObject(object)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    object,\n  );\n\n  return isUndefined(result) || result === object\n    ? isUndefined(object[path as keyof T])\n      ? defaultValue\n      : object[path as keyof T]\n    : result;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldPath, FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default (\n  object: FieldValues,\n  path: FieldPath<FieldValues>,\n  value?: unknown,\n) => {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return;\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n};\n","export const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n} as const;\n\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n} as const;\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n} as const;\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TransformedValues extends FieldValues | undefined = undefined,\n>(): UseFormReturn<TFieldValues, TContext, TransformedValues> =>\n  React.useContext(HookFormContext) as UseFormReturn<\n    TFieldValues,\n    TContext,\n    TransformedValues\n  >;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues extends FieldValues | undefined = undefined,\n>(\n  props: FormProviderProps<TFieldValues, TContext, TTransformedValues>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  Control,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & { name?: InternalFieldName },\n  _proxyFormState: K,\n  updateFormState: Control<T>['_updateFormState'],\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  !name ||\n  !signalName ||\n  name === signalName ||\n  convertToArrayPayload(name).some(\n    (currentName) =>\n      currentName &&\n      (exact\n        ? currentName === signalName\n        : currentName.startsWith(signalName) ||\n          signalName.startsWith(currentName)),\n  );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport cloneObject from './utils/cloneObject';\nimport get from './utils/get';\nimport isBoolean from './utils/isBoolean';\nimport isUndefined from './utils/isUndefined';\nimport set from './utils/set';\nimport { EVENTS } from './constants';\nimport {\n  ControllerFieldState,\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, disabled, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as FieldPathValue<TFieldValues, TName>;\n  const formState = useFormState({\n    control,\n    name,\n    exact: true,\n  });\n\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n      ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }),\n  );\n\n  const fieldState = React.useMemo(\n    () =>\n      Object.defineProperties(\n        {},\n        {\n          invalid: {\n            enumerable: true,\n            get: () => !!get(formState.errors, name),\n          },\n          isDirty: {\n            enumerable: true,\n            get: () => !!get(formState.dirtyFields, name),\n          },\n          isTouched: {\n            enumerable: true,\n            get: () => !!get(formState.touchedFields, name),\n          },\n          isValidating: {\n            enumerable: true,\n            get: () => !!get(formState.validatingFields, name),\n          },\n          error: {\n            enumerable: true,\n            get: () => get(formState.errors, name),\n          },\n        },\n      ) as ControllerFieldState,\n    [formState, name],\n  );\n\n  const field = React.useMemo(\n    () => ({\n      name,\n      value,\n      ...(isBoolean(disabled) || formState.disabled\n        ? { disabled: formState.disabled || disabled }\n        : {}),\n      onChange: (event: any) =>\n        _registerProps.current.onChange({\n          target: {\n            value: getEventValue(event),\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.CHANGE,\n        }),\n      onBlur: () =>\n        _registerProps.current.onBlur({\n          target: {\n            value: get(control._formValues, name),\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.BLUR,\n        }),\n      ref: (elm: any) => {\n        const field = get(control._fields, name);\n\n        if (field && elm) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            select: () => elm.select(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    }),\n    [\n      name,\n      control._formValues,\n      disabled,\n      formState.disabled,\n      value,\n      control._fields,\n    ],\n  );\n\n  React.useEffect(() => {\n    const _shouldUnregisterField =\n      control._options.shouldUnregister || shouldUnregister;\n\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field && field._f) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    if (_shouldUnregisterField) {\n      const value = cloneObject(get(control._options.defaultValues, name));\n      set(control._defaultValues, name, value);\n      if (isUndefined(get(control._formValues, name))) {\n        set(control._formValues, name, value);\n      }\n    }\n\n    return () => {\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._state.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  React.useEffect(() => {\n    if (isBoolean(disabled) && get(control._fields, name)) {\n      control._updateDisabledField({\n        disabled,\n        fields: control._fields,\n        name,\n        value: get(control._fields, name)._f.value,\n      });\n    }\n  }, [disabled, name, control]);\n\n  return React.useMemo(\n    () => ({\n      field,\n      formState,\n      fieldState,\n    }),\n    [field, formState, fieldState],\n  );\n}\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends\n    readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: (formState: { name?: InternalFieldName; values?: FieldValues }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        updateValue(\n          cloneObject(\n            generateWatchOutput(\n              _name.current as InternalFieldName | InternalFieldName[],\n              control._names,\n              formState.values || control._formValues,\n              false,\n              defaultValue,\n            ),\n          ),\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState(\n    control._getWatch(\n      name as InternalFieldName,\n      defaultValue as DeepPartialSkipArrayKey<TFieldValues>,\n    ),\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    validatingFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) =>\n      _mounted.current &&\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        value.name,\n        exact,\n      ) &&\n      shouldRenderFormState(\n        value,\n        _localProxyFormState.current,\n        control._updateFormState,\n      ) &&\n      updateFormState({\n        ...control._formState,\n        ...value,\n      }),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    _localProxyFormState.current.isValid && control._updateValid(true);\n\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n\n  return React.useMemo(\n    () =>\n      getProxyFormState(\n        formState,\n        control,\n        _localProxyFormState.current,\n        false,\n      ),\n    [formState, control],\n  );\n}\n\nexport { useFormState };\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode, ValidationModeFlags } from '../types';\n\nexport default (mode?: Mode): ValidationModeFlags => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import { FieldRefs, InternalFieldName, Ref } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst iterateFieldsByAction = (\n  fields: FieldRefs,\n  action: (ref: Ref, name: string) => 1 | undefined | void,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[] | 0,\n  abortEarly?: boolean,\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f) {\n        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n          return true;\n        } else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n          return true;\n        } else {\n          if (iterateFieldsByAction(currentField, action)) {\n            break;\n          }\n        }\n      } else if (isObject(currentField)) {\n        if (iterateFieldsByAction(currentField as FieldRefs, action)) {\n          break;\n        }\n      }\n    }\n  }\n  return;\n};\nexport default iterateFieldsByAction;\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  MaxType,\n  Message,\n  MinType,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType: MaxType = INPUT_VALIDATION_RULES.maxLength,\n    minType: MinType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n            ? inputValue > maxOutput.value\n            : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n            ? inputValue < minOutput.value\n            : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > +maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < +minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default <T>(data: T[], value: T | T[]): T[] => [\n  ...data,\n  ...convertToArrayPayload(value),\n];\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default <T>(data: T[], value: T | T[]): T[] => [\n  ...convertToArrayPayload(value),\n  ...convertToArrayPayload(data),\n];\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n      ? [path]\n      : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import React from 'react';\n\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport getValidationModes from './logic/getValidationModes';\nimport isWatched from './logic/isWatched';\nimport iterateFieldsByAction from './logic/iterateFieldsByAction';\nimport updateFieldArrayRootError from './logic/updateFieldArrayRootError';\nimport validateField from './logic/validateField';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport isEmptyObject from './utils/isEmptyObject';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { VALIDATION_MODE } from './constants';\nimport {\n  Control,\n  Field,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  RegisterOptions,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends\n    FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister,\n    rules,\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  rules &&\n    (control as Control<TFieldValues>).register(\n      name as FieldPath<TFieldValues>,\n      rules as RegisterOptions<TFieldValues>,\n    );\n\n  useSubscribe({\n    next: ({\n      values,\n      name: fieldArrayName,\n    }: {\n      values?: FieldValues;\n      name?: InternalFieldName;\n    }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        const fieldValues = get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._updateFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    !Array.isArray(get(control._fields, name)) &&\n      set(control._fields, name, undefined);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: FieldArray<TFieldValues, TFieldArrayName>,\n  ) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      updateValue as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: updateValue,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._state.action = false;\n\n    isWatched(name, control._names) &&\n      control._subjects.state.next({\n        ...control._formState,\n      } as FormState<TFieldValues>);\n\n    if (\n      _actioned.current &&\n      (!getValidationModes(control._options.mode).isOnSubmit ||\n        control._formState.isSubmitted)\n    ) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then((result) => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n\n          if (\n            existingError\n              ? (!error && existingError.type) ||\n                (error &&\n                  (existingError.type !== error.type ||\n                    existingError.message !== error.message))\n              : error && error.type\n          ) {\n            error\n              ? set(control._formState.errors, name, error)\n              : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors as FieldErrors<TFieldValues>,\n            });\n          }\n        });\n      } else {\n        const field: Field = get(control._fields, name);\n        if (\n          field &&\n          field._f &&\n          !(\n            getValidationModes(control._options.reValidateMode).isOnSubmit &&\n            getValidationModes(control._options.mode).isOnSubmit\n          )\n        ) {\n          validateField(\n            field,\n            control._formValues,\n            control._options.criteriaMode === VALIDATION_MODE.all,\n            control._options.shouldUseNativeValidation,\n            true,\n          ).then(\n            (error) =>\n              !isEmptyObject(error) &&\n              control._subjects.state.next({\n                errors: updateFieldArrayRootError(\n                  control._formState.errors as FieldErrors<TFieldValues>,\n                  error,\n                  name,\n                ) as FieldErrors<TFieldValues>,\n              }),\n          );\n        }\n      }\n    }\n\n    control._subjects.values.next({\n      name,\n      values: { ...control._formValues },\n    });\n\n    control._names.focus &&\n      iterateFieldsByAction(control._fields, (ref, key: string) => {\n        if (\n          control._names.focus &&\n          key.startsWith(control._names.focus) &&\n          ref.focus\n        ) {\n          ref.focus();\n          return 1;\n        }\n        return;\n      });\n\n    control._names.focus = '';\n\n    control._updateValid();\n    _actioned.current = false;\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) &&\n        control.unregister(name as FieldPath<TFieldValues>);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default <T>(): Subject<T> => {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n};\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<T>(data: T, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: Record<\n    Extract<keyof T, string>,\n    ReturnType<typeof markFieldsDirty> | boolean\n  >,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n      ? value === ''\n        ? NaN\n        : value\n          ? +value\n          : value\n      : valueAsDate && isString(value)\n        ? new Date(value)\n        : setValueAs\n          ? setValueAs(value)\n          : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n      ? rule.source\n      : isObject(rule)\n        ? isRegex(rule.value)\n          ? rule.value.source\n          : rule.value\n        : rule;\n","import { Field, Validate } from '../types';\nimport isFunction from '../utils/isFunction';\nimport isObject from '../utils/isObject';\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\n\nexport default (fieldReference: Field['_f']) =>\n  !!fieldReference &&\n  !!fieldReference.validate &&\n  !!(\n    (isFunction(fieldReference.validate) &&\n      fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n    (isObject(fieldReference.validate) &&\n      Object.values(fieldReference.validate).find(\n        (validateFunction: Validate<unknown, unknown>) =>\n          validateFunction.constructor.name === ASYNC_FUNCTION,\n      ))\n  );\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { ValidationModeFlags } from '../types';\n\nexport default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<ValidationModeFlags>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  Control,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  ReadFormState,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasPromiseValidation from './hasPromiseValidation';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport iterateFieldsByAction from './iterateFieldsByAction';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: isFunction(_options.defaultValues),\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    validatingFields: {},\n    errors: _options.errors || {},\n    disabled: _options.disabled || false,\n  };\n  let _fields: FieldRefs = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState: ReadFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    validatingFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldUpdateValid?: boolean) => {\n    if (!_options.disabled && (_proxyFormState.isValid || shouldUpdateValid)) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (names?: string[], isValidating?: boolean) => {\n    if (\n      !_options.disabled &&\n      (_proxyFormState.isValidating || _proxyFormState.validatingFields)\n    ) {\n      (names || Array.from(_names.mount)).forEach((name) => {\n        if (name) {\n          isValidating\n            ? set(_formState.validatingFields, name, isValidating)\n            : unset(_formState.validatingFields, name);\n        }\n      });\n\n      _subjects.state.next({\n        validatingFields: _formState.validatingFields,\n        isValidating: !isEmptyObject(_formState.validatingFields),\n      });\n    }\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method && !_options.disabled) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const _setErrors = (errors: FieldErrors<TFieldValues>) => {\n    _formState.errors = errors;\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: false,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!_options.disabled) {\n      const disabledField = !!(\n        get(_fields, name) &&\n        get(_fields, name)._f &&\n        get(_fields, name)._f.disabled\n      );\n      if (!isBlurEvent || shouldDirty) {\n        if (_proxyFormState.isDirty) {\n          isPreviousDirty = _formState.isDirty;\n          _formState.isDirty = output.isDirty = _getDirty();\n          shouldUpdateField = isPreviousDirty !== output.isDirty;\n        }\n\n        const isCurrentFieldPristine =\n          disabledField || deepEqual(get(_defaultValues, name), fieldValue);\n\n        isPreviousDirty = !!(\n          !disabledField && get(_formState.dirtyFields, name)\n        );\n        isCurrentFieldPristine || disabledField\n          ? unset(_formState.dirtyFields, name)\n          : set(_formState.dirtyFields, name, true);\n        output.dirtyFields = _formState.dirtyFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.dirtyFields &&\n            isPreviousDirty !== !isCurrentFieldPristine);\n      }\n\n      if (isBlurEvent) {\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n        if (!isPreviousFieldTouched) {\n          set(_formState.touchedFields, name, isBlurEvent);\n          output.touchedFields = _formState.touchedFields;\n          shouldUpdateField =\n            shouldUpdateField ||\n            (_proxyFormState.touchedFields &&\n              isPreviousFieldTouched !== isBlurEvent);\n        }\n      }\n\n      shouldUpdateField && shouldRender && _subjects.state.next(output);\n    }\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (_options.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(_options.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) => {\n    _updateIsValidating(name, true);\n    const result = await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n    _updateIsValidating(name);\n    return result;\n  };\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema(names);\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field as Field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const isPromiseFunction =\n            field._f && hasPromiseValidation((field as Field)._f);\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name], true);\n          }\n\n          const fieldError = await validateField(\n            field as Field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation && !shouldOnlyCheckValid,\n            isFieldArrayRoot,\n          );\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name]);\n          }\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        !isEmptyObject(fieldValue) &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) =>\n    !_options.disabled &&\n    (name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n            ? _defaultValues\n            : isString(names)\n              ? { [names]: defaultValue }\n              : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        _options.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues },\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        isObject(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues },\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.values.next({\n      name: _state.mount ? name : undefined,\n      values: { ..._formValues },\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    _state.mount = true;\n    const target = event.target;\n    let name = target.name as string;\n    let isFieldValueUpdated = true;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n    const _updateIsFieldValueUpdated = (fieldValue: any): void => {\n      isFieldValueUpdated =\n        Number.isNaN(fieldValue) ||\n        (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n        deepEqual(fieldValue, get(_formValues, name, fieldValue));\n    };\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.values.next({\n          name,\n          type: event.type,\n          values: { ..._formValues },\n        });\n\n      if (shouldSkipValidation) {\n        if (_proxyFormState.isValid) {\n          if (_options.mode === 'onBlur') {\n            if (isBlurEvent) {\n              _updateValid();\n            }\n          } else {\n            _updateValid();\n          }\n        }\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          const previousErrorLookupResult = schemaErrorLookup(\n            _formState.errors,\n            _fields,\n            name,\n          );\n          const errorLookupResult = schemaErrorLookup(\n            errors,\n            _fields,\n            previousErrorLookupResult.name || name,\n          );\n\n          error = errorLookupResult.error;\n          name = errorLookupResult.name;\n\n          isValid = isEmptyObject(errors);\n        }\n      } else {\n        _updateIsValidating([name], true);\n        error = (\n          await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n        _updateIsValidating([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          if (error) {\n            isValid = false;\n          } else if (_proxyFormState.isValid) {\n            isValid = await executeBuiltInValidation(_fields, true);\n          }\n        }\n      }\n\n      if (isFieldValueUpdated) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      }\n    }\n  };\n\n  const _focusInput = (ref: Ref, key: string) => {\n    if (get(_formState.errors, key) && ref.focus) {\n      ref.focus();\n      return 1;\n    }\n    return;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      iterateFieldsByAction(\n        _fields,\n        _focusInput,\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ...(_state.mount ? _formValues : _defaultValues),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n        ? get(values, fieldNames)\n        : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    error: get((formState || _formState).errors, name),\n    isValidating: !!get(_formState.validatingFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n    const currentError = get(_formState.errors, name) || {};\n\n    // Don't override existing error messages elsewhere in the object tree.\n    const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n\n    set(_formState.errors, name, {\n      ...restOfErrorTree,\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.values.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (!options.keepValue) {\n        unset(_fields, fieldName);\n        unset(_formValues, fieldName);\n      }\n\n      !options.keepError && unset(_formState.errors, fieldName);\n      !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n      !options.keepTouched && unset(_formState.touchedFields, fieldName);\n      !options.keepIsValidating &&\n        unset(_formState.validatingFields, fieldName);\n      !_options.shouldUnregister &&\n        !options.keepDefaultValue &&\n        unset(_defaultValues, fieldName);\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues },\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const _updateDisabledField: Control<TFieldValues>['_updateDisabledField'] = ({\n    disabled,\n    name,\n    field,\n    fields,\n    value,\n  }) => {\n    if ((isBoolean(disabled) && _state.mount) || !!disabled) {\n      const inputValue = disabled\n        ? undefined\n        : isUndefined(value)\n          ? getFieldValue(field ? field._f : get(fields, name)._f)\n          : value;\n      if (disabled || (!disabled && !isUndefined(inputValue))) {\n        set(_formValues, name, inputValue);\n      }\n      updateTouchAndDirty(name, inputValue, false, false, true);\n    }\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined =\n      isBoolean(options.disabled) || isBoolean(_options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    if (field) {\n      _updateDisabledField({\n        field,\n        disabled: isBoolean(options.disabled)\n          ? options.disabled\n          : _options.disabled,\n        name,\n        value: options.value,\n      });\n    } else {\n      updateValidAndValue(name, true, options.value);\n    }\n\n    return {\n      ...(disabledIsDefined\n        ? { disabled: options.disabled || _options.disabled }\n        : {}),\n      ...(_options.progressive\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    iterateFieldsByAction(_fields, _focusInput, _names.mount);\n\n  const _disableForm = (disabled?: boolean) => {\n    if (isBoolean(disabled)) {\n      _subjects.state.next({ disabled });\n      iterateFieldsByAction(\n        _fields,\n        (ref, name) => {\n          const currentField: Field = get(_fields, name);\n          if (currentField) {\n            ref.disabled = currentField._f.disabled || disabled;\n\n            if (Array.isArray(currentField._f.refs)) {\n              currentField._f.refs.forEach((inputRef) => {\n                inputRef.disabled = currentField._f.disabled || disabled;\n              });\n            }\n          }\n        },\n        0,\n        false,\n      );\n    }\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      let onValidError = undefined;\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n\n      if (_options.disabled) {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        return;\n      }\n\n      let fieldValues = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        try {\n          await onValid(fieldValues as TFieldValues, e);\n        } catch (error) {\n          onValidError = error;\n        }\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n      if (onValidError) {\n        throw onValidError;\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, cloneObject(get(_defaultValues, name)));\n      } else {\n        setValue(\n          name,\n          options.defaultValue as PathValue<\n            TFieldValues,\n            FieldPath<TFieldValues>\n          >,\n        );\n        set(_defaultValues, name, cloneObject(options.defaultValue));\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const isEmptyResetValues = isEmptyObject(formValues);\n    const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        const fieldsToCheck = new Set([\n          ..._names.mount,\n          ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n        ]);\n        for (const fieldName of Array.from(fieldsToCheck)) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = _options.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneObject(values);\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.values.next({\n        values: { ...values },\n      });\n    }\n\n    _names = {\n      mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _state.mount =\n      !_proxyFormState.isValid ||\n      !!keepStateOptions.keepIsValid ||\n      !!keepStateOptions.keepDirtyValues;\n\n    _state.watch = !!_options.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: isEmptyResetValues\n        ? false\n        : keepStateOptions.keepDirty\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: isEmptyResetValues\n        ? {}\n        : keepStateOptions.keepDirtyValues\n          ? keepStateOptions.keepDefaultValues && _formValues\n            ? getDirtyFields(_defaultValues, _formValues)\n            : _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n            ? getDirtyFields(_defaultValues, formValues)\n            : keepStateOptions.keepDirty\n              ? _formState.dirtyFields\n              : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n        ? _formState.isSubmitSuccessful\n        : false,\n      isSubmitting: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? (formValues as Function)(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect &&\n          isFunction(fieldRef.select) &&\n          fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  const _resetDefaultValues = () =>\n    isFunction(_options.defaultValues) &&\n    (_options.defaultValues as Function)().then((values: TFieldValues) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      handleSubmit,\n      setError,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _updateDisabledField,\n      _getFieldArray,\n      _reset,\n      _resetDefaultValues,\n      _updateFormState,\n      _disableForm,\n      _subjects,\n      _proxyFormState,\n      _setErrors,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues extends FieldValues | undefined = undefined,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext, TTransformedValues> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues> | undefined\n  >();\n  const _values = React.useRef<typeof props.values>();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: isFunction(props.defaultValues),\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    validatingFields: {},\n    errors: props.errors || {},\n    disabled: props.disabled || false,\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) => {\n      if (\n        shouldRenderFormState(\n          value,\n          control._proxyFormState,\n          control._updateFormState,\n          true,\n        )\n      ) {\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(\n    () => control._disableForm(props.disabled),\n    [control, props.disabled],\n  );\n\n  React.useEffect(() => {\n    if (control._proxyFormState.isDirty) {\n      const isDirty = control._getDirty();\n      if (isDirty !== formState.isDirty) {\n        control._subjects.state.next({\n          isDirty,\n        });\n      }\n    }\n  }, [control, formState.isDirty]);\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, _values.current)) {\n      control._reset(props.values, control._options.resetOptions);\n      _values.current = props.values;\n      updateFormState((state) => ({ ...state }));\n    } else {\n      control._resetDefaultValues();\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (props.errors) {\n      control._setErrors(props.errors);\n    }\n  }, [props.errors, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    props.shouldUnregister &&\n      control._subjects.values.next({\n        values: control._getWatch(),\n      });\n  }, [props.shouldUnregister, control]);\n\n  return React.useMemo(\n    () =>\n      ({\n        ..._formControl.current,\n        formState: getProxyFormState(formState, control),\n      }) as UseFormReturn<TFieldValues, TContext, TTransformedValues>,\n    [formState, control],\n  );\n}\n"],"names":["Cache","maxSize","this","_maxSize","clear","prototype","_size","_values","Object","create","get","key","set","value","SPLIT_REGEX","DIGIT_REGEX","LEAD_DIGIT_REGEX","SPEC_CHAR_REGEX","CLEAN_QUOTES_REGEX","pathCache","setCache","getCache","normalizePath","path","split","map","part","replace","match","isQuoted","str","indexOf","charAt","shouldBeQuoted","hasLeadingNumber","test","hasSpecialChars","module","exports","setter","parts","obj","index","len","length","data","getter","safe","join","segments","reduce","forEach","cb","thisArg","iter","idx","isArray","isBracket","call","Array","reWords","words","upperFirst","toUpperCase","slice","d","toLowerCase","camelCase","acc","next","concat","pascalCase","snakeCase","kebabCase","sentenceCase","titleCase","toposort","nodes","edges","cursor","sorted","visited","i","outgoingEdges","arr","Map","edge","has","Set","add","makeOutgoingEdges","nodesHash","res","makeNodesHash","Error","visit","node","predecessors","nodeRep","JSON","stringify","e","outgoing","from","child","delete","uniqueNodes","array","toString","errorToString","regExpToString","RegExp","symbolToString","Symbol","SYMBOL_REGEXP","printSimpleValue","val","quoteStrings","arguments","undefined","typeOf","printNumber","name","tag","isNaN","getTime","toISOString","printValue","result","toArray","_Symbol$toStringTag","_Symbol$hasInstance","_Symbol$toStringTag2","strReg","toStringTag","ValidationErrorNoStack","constructor","errorOrErrors","field","type","message","params","errors","inner","err","ValidationError","isError","push","innerErrors","hasInstance","formatError","label","assign","originalPath","_","disableStack","errorNoStack","super","captureStackTrace","inst","mixed","default","required","defined","notNull","oneOf","notOneOf","notType","_ref","originalValue","castMsg","string","min","max","matches","email","url","uuid","datetime","datetime_precision","datetime_offset","trim","lowercase","uppercase","number","lessThan","moreThan","positive","negative","integer","date","boolean","isValue","object","noUnknown","exact","tuple","spec","typeLen","types","isSchema","__isYupSchema__","Condition","fromOptions","refs","config","then","otherwise","TypeError","is","check","_len","values","_key","every","schema","_branch","branch","builder","fn","resolve","base","options","ref","getValue","parent","context","prefixes","create$9","Reference","isContext","isSibling","prefix","cast","describe","isRef","__isYupRef","isAbsent","createValidation","validate","_ref2","panic","skipAbsent","abortEarly","disableStackTrace","item","createError","overrides","nextParams","keys","error","invalid","ctx","handleResult","validOrError","handleError","_result","sync","Promise","OPTIONS","getIn","lastPart","lastPartDebug","_part","isTuple","parseInt","innerType","fields","parentPath","ReferenceSet","description","resolveAll","clone","merge","newItems","removeItems","src","copy","seen","Date","k","v","entries","Schema","deps","tests","transforms","conditions","_mutate","internalTests","_whitelist","_blacklist","exclusiveTests","_typeCheck","withMutation","typeError","strip","strict","recursive","nullable","optional","coerce","s","nonNullable","_type","getPrototypeOf","meta","before","combined","mergedSpec","isType","prevSchema","condition","resolveOptions","_options$strict","_options$abortEarly","_options$recursive","_options$disableStack","resolvedSchema","allowOptionality","assert","_cast","formattedValue","formattedResult","rawValue","prevValue","getDefault","_validate","_value","initialTests","runTests","initialErrors","runOptions","fired","panicOnce","arg","nextOnce","count","nestedErrors","args","asNestedTest","_ref3","originalParent","isIndex","testOptions","includes","_options$disableStack2","reject","parsed","validated","validateSync","_options$disableStack3","isValid","isValidSync","_getDefault","defaultValue","def","isStrict","nullability","optionality","notRequired","transform","opts","isExclusive","exclusive","filter","when","dep","enums","whiteList","valids","resolved","blacklist","invalids","n","list","findIndex","c","method","alias","returnsTrue","create$8","MixedSchema","BooleanSchema","Boolean","valueOf","_raw","String","isTrue","isFalse","msg","isoReg","parseDateStruct","_regexResult$7$length","_regexResult$","regexResult","exec","year","toNumber","month","day","hour","minute","second","millisecond","substring","precision","z","plusMinus","hourOffset","minuteOffset","Number","rEmail","rUrl","rUUID","rIsoDateTime","isTrimmed","objStringTag","create$6","StringSchema","strValue","t","regex","excludeEmptyString","search","allowOffset","struct","ensure","create$5","NumberSchema","isNaN$1","NaN","parseFloat","less","more","isInteger","truncate","round","_method","avail","Math","invalidDate","create$4","DateSchema","parse","totalMinutesOffset","UTC","parseIsoDate","INVALID_DATE","prepareParam","param","limit","Infinity","some","ii","_err$path","sortByKeyOrder","a","b","parseJson","deepPartial","partial","fieldSchema","setFields","nextArray","isObject","unknown","known","defaultSort","create$3","ObjectSchema","_sortErrors","_nodes","_excludedEdges","shape","_options$stripUnknown","stripUnknown","props","intermediateValue","innerOptions","__validating","isChanged","prop","exists","fieldValue","inputValue","fieldSpec","objectErrors","fieldErrors","sort","nextFields","schemaOrRef","target","dft","_innerOptions","excludedEdges","excludes","_ref4","addNode","depPath","reverse","sortFields","additions","Function","pick","picked","_ref5","omit","remaining","to","fromGetter","newObj","deepHas","p","last","pop","json","unknownKeys","properties","noAllow","allow","transformKeys","constantCase","_innerOptions2","create$2","ArraySchema","_opts","castArray","castElement","arrayErrors","_options$originalValu2","_options$originalValu","innerTypeErrors","of","original","compact","rejector","TupleSchema","schemas","itemTypes","tupleErrors","itemSchema","async","handlePasswordSRP","_challengeParameters$","username","password","clientMetadata","tokenOrchestrator","authFlow","preferredChallenge","userPoolId","userPoolClientId","userPoolEndpoint","userPoolName","authenticationHelper","getAuthenticationHelper","authParameters","USERNAME","SRP_A","A","PREFERRED_CHALLENGE","jsonReq","AuthFlow","AuthParameters","ClientMetadata","ClientId","UserContextData","getUserContextData","initiateAuth","createInitiateAuthClient","endpointResolver","createCognitoUserPoolEndpointResolver","endpointOverride","resp","region","getRegionFromUserPoolId","userAgentValue","getAuthUserAgentValue","AuthAction","SignIn","ChallengeParameters","challengeParameters","Session","session","activeUsername","setActiveSignInUsername","ChallengeName","retryOnResourceNotFoundException","handlePasswordVerifierChallenge","autoSignInStore","reducer","currentState","active","getState","dispatch","action","createAutoSignInStore","autoSignInReducer","state","_objectSpread","defaultState","challengeName","signInSession","signInStore","createStore","signInReducer","setActiveSignInState","cleanActiveSignInState","validationErrorMap","AuthValidationErrorCode","EmptyChallengeResponse","EmptyConfirmResetPasswordUsername","EmptyConfirmSignUpCode","EmptyConfirmSignUpUsername","EmptyConfirmResetPasswordConfirmationCode","EmptyConfirmResetPasswordNewPassword","EmptyResendSignUpCodeUsername","EmptyResetPasswordUsername","EmptySignInPassword","EmptySignInUsername","EmptySignUpPassword","EmptySignUpUsername","CustomAuthSignInPassword","recoverySuggestion","IncorrectMFAMethod","EmptyVerifyTOTPSetupCode","EmptyUpdatePassword","EmptyConfirmUserAttributeCode","AuthErrorStrings","AuthErrorCodes","assertValidationError","assertion","AuthError","initialAutoSignIn","AUTO_SIGN_IN_EXCEPTION","autoSignIn","setAutoSignIn","callback","resetAutoSignIn","getCurrentUser","_amplify$getConfig$Au","_tokens$idToken$paylo","_tokens$idToken","authConfig","amplify","getConfig","Auth","Cognito","assertTokenProviderConfig","tokens","getTokens","forceRefresh","assertAuthTokens","sub","idToken","payload","authUser","userId","signInDetails","getSignInDetailsFromTokens","getCurrentUser$1","Amplify","signInWithSRP","input","_Amplify$getConfig$Au","_input$options","loginId","authFlowType","clientMetaData","handledChallengeName","handledChallengeParameters","AuthenticationResult","handleUserSRPAuthFlow","getActiveSignInUsername","cacheCognitoTokens","NewDeviceMetadata","getNewDeviceMetadata","newDeviceMetadata","accessToken","AccessToken","dispatchSignedInHubEvent","isSignedIn","nextStep","signInStep","getSignInResult","assertServiceError","getSignInResultFromError","signIn","assertUserNotAuthenticated","metadata","retiredChallengeName","retriedChallengeParameters","handleUserPasswordAuthFlow","signInWithUserPassword","retriedChallengeName","retiredChallengeParameters","handleCustomAuthFlowWithoutSRP","signInWithCustomAuth","handleCustomSRPAuthFlow","signInWithCustomSRPAuth","signInWithUserAuth","handleUserAuthFlowInput","autoSignInStoreState","response","PASSWORD","handleUserAuthFlow","availableChallenges","AvailableChallenges","AmplifyError","decodeJWT","accessTokenIssuedAtInMillis","iat","currentTime","clockDrift","refreshToken","deviceMetadata","RefreshToken","IdToken","setTokens","AssociateSoftwareTokenException","ChangePasswordException","ConfirmDeviceException","ConfirmForgotPasswordException","ConfirmSignUpException","DeleteUserAttributesException","DeleteUserException","ForgetDeviceException","ForgotPasswordException","GetUserException","GetIdException","GetCredentialsForIdentityException","GetUserAttributeVerificationException","GlobalSignOutException","InitiateAuthException","ResendConfirmationException","RespondToAuthChallengeException","SetUserMFAPreferenceException","SignUpException","UpdateUserAttributesException","VerifySoftwareTokenException","VerifyUserAttributeException","UpdateDeviceStatusException","ListDevicesException","Hub","event","AMPLIFY_SYMBOL","USER_UNAUTHENTICATED_EXCEPTION","UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION","getDeviceName","userAgentData","navigator","userAgent","platform","platformVersion","model","architecture","fullVersionList","getHighEntropyValues","brand","version","createRespondToAuthChallengeClient","composeServiceApi","cognitoUserPoolTransferHandler","createUserPoolSerializer","createUserPoolDeserializer","DEFAULT_SERVICE_CLIENT_API_CONFIG","createAssociateSoftwareTokenClient","createConfirmDeviceClient","PasskeyErrorCode","PasskeyError","setPrototypeOf","notSupportedRecoverySuggestion","abortOrCancelRecoverySuggestion","misconfigurationRecoverySuggestion","passkeyErrorMap","PasskeyNotSupported","InvalidPasskeyRegistrationOptions","InvalidPasskeyAuthenticationOptions","PasskeyRegistrationFailed","PasskeyRetrievalFailed","PasskeyAlreadyExists","PasskeyRegistrationCanceled","PasskeyAuthenticationCanceled","PasskeyOperationAborted","RelyingPartyMismatch","assertPasskeyError","createAssertionFunction","handlePasskeyError","underlyingError","AmplifyErrorCode","Unknown","convertArrayBufferToBase64Url","buffer","base64Encoder","convert","Uint8Array","urlSafe","skipPadding","convertBase64UrlToArrayBuffer","base64url","base64Decoder","x","charCodeAt","getPasskey","isPasskeySupported","isBrowser","window","isSecureContext","PublicKeyCredential","passkeyGetOptions","challengeBuffer","challenge","allowedCredentialsWithBuffer","allowCredentials","allowedCred","id","deserializeJsonToPkcGetOptions","credential","credentials","publicKey","AuthenticatorAssertionResponse","assertCredentialIsPkcWithAuthenticatorAssertionResponse","clientDataJSON","authenticatorData","signature","userHandle","resultJson","rawId","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","serializePkcWithAssertionToJson","handlePasskeyAuthenticationError","MONTH_NAMES","WEEK_NAMES","getNowString","now","weekDay","getUTCDay","getUTCMonth","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getUTCFullYear","getSignatureString","dateNow","hkdf","bufUPIDaToB","textEncoder","bufUNaToB","bufSBaToB","urlB64ToUint8Array","SECRET_BLOCK","bufDNaToB","bufConcat","byteLength","awsCryptoHash","Sha256","update","resultFromAWSCrypto","digestSync","base64String","base64","repeat","rawData","outputArray","USER_ATTRIBUTES","_response$ChallengePa","_response$ChallengePa2","_response$ChallengePa3","getDeviceMetadata","deviceKey","DEVICE_KEY","USER_ID_FOR_SRP","handleDeviceSRPAuth","_response$ChallengePa4","_response$ChallengePa5","CHALLENGE_NAME","_ref6","clientId","assertDeviceMetadata","deviceGroupKey","jsonReqResponseChallenge","ChallengeResponses","respondToAuthChallenge","respondedChallengeParameters","_ref7","_challengeParameters$2","serverBValue","BigInteger","SRP_B","salt","SALT","getPasswordAuthenticationKey","randomPassword","challengeResponses","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","handleDevicePasswordVerifier","additionalInfo","mfaSetupTypes","getMFATypes","parseMFATypes","MFAS_CAN_SETUP","allowedMfaSetupTypes","authMfaType","isTotpMfaSetupAvailable","isEmailMfaSetupAvailable","allowedMFATypes","associateSoftwareToken","SecretCode","secretCode","totpSetupDetails","getTOTPSetupDetails","SignInException","missingAttributes","parseAttributes","requiredAttributes","MFAS_CAN_CHOOSE","codeDeliveryDetails","deliveryMedium","CODE_DELIVERY_DELIVERY_MEDIUM","destination","CODE_DELIVERY_DESTINATION","CREDENTIAL_REQUEST_OPTIONS","credentialRequestOptions","cred","nextChallengeName","nextChallengeParameters","authenticationResult","nextSession","ConfirmSignIn","CREDENTIAL","handleWebAuthnSignInResult","sharedSecret","getSetupUri","appName","accountName","totpUri","AmplifyUrl","errorName","PasswordResetRequiredException","UserNotConfirmedException","attributes","att","getMFAType","mfa","USER_ALREADY_AUTHENTICATED_EXCEPTION","_ref9","DeviceKey","DeviceGroupKey","generateHashDevice","errGenHash","deviceSecretVerifierConfig","Salt","getBytesFromHex","getSaltToHashDevices","PasswordVerifier","getVerifierDevices","getRandomPassword","confirmDevice","DeviceName","DeviceSecretVerifierConfig","func","clearDeviceMetadata","_state$username","fromString","nbi","dbits","inBrowser","am","w","j","xl","xh","l","h","m","floor","DB","DM","DV","FV","pow","F1","F2","BI_RC","rr","vv","int2char","intAt","nbv","r","fromInt","nbits","Montgomery","mp","invDigit","mpl","mph","um","mt2","abs","dlShiftTo","divRemTo","compareTo","ZERO","subTo","revert","copyTo","u0","clamp","drShiftTo","mulTo","y","multiplyTo","sqrTo","squareTo","mi","sh","lShiftTo","bs","cbs","bm","ds","rShiftTo","q","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","ONE","qd","addTo","negate","km","bitLength","mod","equals","subtract","multiply","divide","modPow","g","k1","g2","is1","r2","INIT_N","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","getHexFromBytes","bytes","out","getHashFromData","sha256","hashedData","hashHexFromUint8","getHashFromHex","hexStr","HEX_MSB_REGEX","getPaddedHex","bigInt","isNegative","invertedNibbles","invertedNibble","startsWith","WordArray","sigBytes","Words","random","nBytes","getCrypto","getRandomValues","Uint32Array","wordArray","hexChars","bite","hexStringify","getRandomBytes","AuthenticationHelper","N","encoder","saltToHashDevices","verifierDevices","combinedString","hashedString","hexRandom","U","B","calculateU","usernamePassword","usernamePasswordHash","S","outerErr","outerResult","innerErr","innerResult","calculateS","spacer","fromCharCode","info","hkdfKey","getHkdfKey","ikm","resultFromAWSCryptoPrk","awsCryptoHashHmac","generateRandomBigInteger","calculateA","encoded","TextEncoder","encode","o","setCustomValidity","reportValidity","shouldUseNativeValidation","f","names","u","mode","raw","criteriaMode","isCheckBoxInput","element","isDateObject","isNullOrUndefined","isObjectType","getEventValue","checked","isNameInFieldArray","getNodeParentName","isPlainObject","tempObject","prototypeCopy","hasOwnProperty","isWeb","HTMLElement","document","cloneObject","isFileListInstance","FileList","Blob","isUndefined","isBoolean","isKey","stringToPath","tempPath","lastIndex","newValue","objValue","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","HookFormContext","React","useFormContext","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","defineProperty","_proxyFormState","isEmptyObject","shouldRenderFormState","formStateData","updateFormState","_objectWithoutProperties","_excluded2","find","convertToArrayPayload","shouldSubscribeByName","signalName","currentName","useSubscribe","_props","current","subscription","disabled","subject","subscribe","unsubscribe","isString","generateWatchOutput","_names","formValues","isGlobal","watch","fieldName","watchAll","useController","methods","shouldUnregister","isArrayField","_name","_subjects","updateValue","_formValues","_getWatch","_removeUnmounted","useWatch","_formState","_mounted","_localProxyFormState","isDirty","isLoading","dirtyFields","touchedFields","validatingFields","isValidating","_updateFormState","_updateValid","useFormState","_registerProps","register","rules","fieldState","defineProperties","enumerable","isTouched","elm","_fields","_f","focus","select","_shouldUnregisterField","_options","updateMounted","mount","_state","unregister","_updateDisabledField","Controller","render","appendErrors","validateAllFieldCriteria","generateId","performance","getFocusFieldName","shouldFocus","focusName","focusIndex","getValidationModes","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","watchName","iterateFieldsByAction","fieldsNames","currentField","_excluded4","updateFieldArrayRootError","fieldArrayErrors","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","defaultResult","validResult","getCheckboxValue","option","defaultReturn","getRadioValue","previous","getValidateError","getValueAndMessage","validationData","validateField","isFieldArray","maxLength","minLength","pattern","valueAsNumber","inputRef","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","appendAt","fillEmptyArray","insert","moveArrayAt","splice","prependAt","removeArrayAt","indexes","temp","removeAtIndexes","swapArrayAt","indexA","indexB","unset","paths","childObject","updatePath","baseGet","isEmptyArray","updateAt","fieldValues","useFieldArray","keyName","_getFieldArray","ids","_fieldIds","_actioned","fieldArrayName","updateValues","updatedFieldArrayValues","_updateFieldArray","isSubmitted","resolver","_executeSchema","existingError","reValidateMode","swap","argA","argB","move","prepend","prependValue","append","appendValue","remove","insertValue","createSubject","_observers","observers","observer","isPrimitive","deepEqual","object1","object2","keys1","keys2","val1","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","getFieldValue","files","selectedOptions","getResolverOptions","getRuleValue","rule","source","ASYNC_FUNCTION","hasPromiseValidation","fieldReference","validateFunction","hasValidation","schemaErrorLookup","foundError","skipValidation","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","delayErrorCallback","submitCount","isSubmitting","isSubmitSuccessful","unMount","timer","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","shouldUpdateValid","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","disabledField","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","previousFieldError","delayError","updateErrors","wait","clearTimeout","setTimeout","updatedFormState","shouldOnlyCheckValid","valid","_excluded5","isFieldArrayRoot","isPromiseFunction","fieldError","getValues","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","isFieldValueUpdated","_updateIsFieldValueUpdated","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","executeSchemaAndUpdateState","getFieldState","setError","currentError","currentRef","restOfErrorTree","_excluded6","keepValue","keepError","keepDirty","keepTouched","keepIsValidating","keepDefaultValue","keepIsValid","disabledIsDefined","progressive","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","onValidError","preventDefault","persist","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","keepDefaultValues","keepValues","keepDirtyValues","fieldsToCheck","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","keepIsSubmitSuccessful","shouldSetValues","shouldUpdateFieldsAndState","_resetDefaultValues","resetOptions","_disableForm","_setErrors","resetField","clearErrors","inputName","setFocus","shouldSelect","useForm","_formControl"],"sourceRoot":""}