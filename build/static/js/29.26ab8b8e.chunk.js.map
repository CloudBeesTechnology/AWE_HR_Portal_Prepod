{"version":3,"file":"static/js/29.26ab8b8e.chunk.js","mappings":"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","sources":["pages/profile/PPPopUp.jsx","pages/profile/Profile.jsx","services/uploadsDocsS3/UploadProfile.jsx","components/Navbar.jsx","services/uploadsDocsS3/DeleteDocs.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport avatar from \"../../assets/navabar/avatar.jpeg\";\r\nimport { getUrl } from \"@aws-amplify/storage\";\r\nimport { FiLoader } from \"react-icons/fi\";\r\n\r\nimport { IoCloseCircleOutline } from \"react-icons/io5\";\r\nexport const PPPopUp = ({\r\n  handleProfile,\r\n  profilePhoto,\r\n\r\n  changeProfilePhoto,\r\n  handleFileUpload,\r\n  PPLastUP,\r\n  setPPLastUP,\r\n  loading,\r\n  message,\r\n  removeProfilePhoto,\r\n}) => {\r\n  const watchedEmpID = localStorage.getItem(\"userID\").toString().toUpperCase();\r\n\r\n  useEffect(() => {\r\n    if (changeProfilePhoto?.profilePhoto) {\r\n      const lastUploadProf = changeProfilePhoto.profilePhoto;\r\n\r\n      const linkToStorageFile = async (url) => {\r\n        const result = await getUrl({ path: url });\r\n        setPPLastUP(result?.url?.toString());\r\n      };\r\n      linkToStorageFile(lastUploadProf);\r\n    }\r\n  }, [changeProfilePhoto]);\r\n\r\n  return (\r\n    <section className=\"fixed top-0 left-0 center w-full h-full z-50 bg-grey bg-opacity-15 inset-0\">\r\n      <div className=\"bg-white max-w-md w-full max-h-80 h-full rounded-md center flex-col shadow-xl p-5 gap-1\">\r\n        <div\r\n          className=\"flex justify-end w-full h-[50px] \"\r\n          onClick={handleProfile}\r\n        >\r\n          <IoCloseCircleOutline className=\"text-[28px] text-dark_grey cursor-pointer\" />\r\n        </div>\r\n        <div className=\"center pb-2\">\r\n          <div className=\"py-2 center flex-col max-w-[160px]\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"fileInput\"\r\n              name=\"profilePhoto\"\r\n              accept=\".jpg,.jpeg,.png\"\r\n              onChange={(e) => handleFileUpload(e, \"profilePhoto\")}\r\n              className=\"hidden\"\r\n            />\r\n            <div className=\"h-[180px] w-[180px] border border-grey rounded-full center \">\r\n              <div\r\n                className={`h-[150px] w-[150px] rounded-full overflow-hidden flex items-center justify-center ${\r\n                  loading ? \"bg-lite_grey\" : \"\"\r\n                }`}\r\n              >\r\n                {loading && (\r\n                  <FiLoader className=\"absolute animate-spin-slow text-grey text-[40px]\" />\r\n                )}\r\n                <img\r\n                  src={\r\n                    // PPLastUP\r\n                    //   ? PPLastUP\r\n                    //   : changeProfilePhoto || profilePhoto || avatar\r\n                    profilePhoto || avatar\r\n                  }\r\n                  id=\"previewImg\"\r\n                  alt=\"profile\"\r\n                  className={`object-cover w-full h-full ${\r\n                    loading ? \"opacity-50\" : \"\"\r\n                  }`}\r\n                  onError={(e) => (e.target.src = avatar)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          {/* <p className=\"text-dark_grey text_size_6\">{message}</p> */}\r\n        </div>\r\n        <div className=\"flex justify-evenly items-center w-full pb-2\">\r\n          <button\r\n            className=\"border-2 border-primary bg-[#FFFCD7] rounded-md px-5 py-2\"\r\n            onClick={() => document.getElementById(\"fileInput\").click()}\r\n          >\r\n            Change\r\n          </button>\r\n\r\n          <button\r\n            className=\"border-2 border-primary rounded-md px-5 py-2\"\r\n            onClick={() => {\r\n              removeProfilePhoto();\r\n            }}\r\n          >\r\n            Remove\r\n          </button>\r\n\r\n          {/* <button\r\n            className=\"border-2 border-primary bg-[#FFFCD7] rounded-md px-5 py-2\"\r\n            onClick={handleProfile}\r\n          >\r\n            Cancel\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { IoCameraOutline } from \"react-icons/io5\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"@aws-amplify/auth\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { PPPopUp } from \"./PPPopUp\";\r\nimport { UploadProfile } from \"../../services/uploadsDocsS3/UploadProfile\";\r\nimport avatar from \"../../assets/navabar/avatar.jpeg\";\r\nimport { handleDeleteFile } from \"../../services/uploadsDocsS3/DeleteDocs\";\r\nimport { generateClient } from \"@aws-amplify/api\";\r\nimport { listEmpPersonalInfos } from \"../../graphql/queries\";\r\nimport { updateEmpPersonalInfo } from \"../../graphql/mutations\";\r\nconst client = generateClient();\r\nexport const Profile = ({\r\n  setIsOpen,\r\n  profilePhoto,\r\n  name,\r\n  email,\r\n  contactNo,\r\n  getPPhotoString,\r\n  setPersonalInfo,\r\n  handleAfterUpload,\r\n  loading,\r\n  setLoading,\r\n}) => {\r\n  const fileInputRef = useRef(null);\r\n  const watchedEmpID = localStorage.getItem(\"userID\")?.toString().toUpperCase();\r\n  const [changeProfilePhoto, setChangeProfilePhoto] = useState(\"\");\r\n\r\n  const [PPLastUP, setPPLastUP] = useState(null);\r\n  const [popup, setPopUp] = useState(false);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const handleProfile = () => {\r\n    setPopUp(!popup);\r\n  };\r\n\r\n  const SignOut = async () => {\r\n    try {\r\n      await signOut();\r\n      localStorage.removeItem(\"userID\");\r\n      localStorage.removeItem(\"userType\");\r\n\r\n      window.location.href = \"/login\";\r\n    } catch (error) {\r\n      // console.log(\"Error signing out\", error);\r\n    }\r\n  };\r\n\r\n  const deleteFile = async (fileName, watchedEmpID) => {\r\n    try {\r\n      await handleDeleteFile(\"profilePhoto\", fileName, watchedEmpID);\r\n    } catch (error) {\r\n      console.error(\"Error deleting file:\", error);\r\n    }\r\n  };\r\n\r\n  const removeProfilePhoto = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setMessage(\"Removing profile photo...\");\r\n      const fileName = getPPhotoString.split(\"/\").pop();\r\n\r\n      await deleteFile(fileName, watchedEmpID);\r\n\r\n      setChangeProfilePhoto(\"\");\r\n      setPersonalInfo(({ profilePhoto, ...rest }) => ({\r\n        ...rest,\r\n        profilePhoto: null,\r\n      }));\r\n      setPPLastUP(null);\r\n\r\n      await onSubmit(null, watchedEmpID);\r\n      // await handleAfterUpload();\r\n    } catch (err) {\r\n    } finally {\r\n    }\r\n  }, [getPPhotoString]);\r\n\r\n  const onSubmit = async (fileName, watchedEmpID) => {\r\n    async function fetchAllData(queryName) {\r\n      let allData = [];\r\n      let nextToken = null;\r\n      const filter = {\r\n        and: [\r\n          {\r\n            empID: { eq: watchedEmpID || null },\r\n          },\r\n        ],\r\n      };\r\n      do {\r\n        const response = await client.graphql({\r\n          query: queryName,\r\n          variables: { filter: filter, nextToken },\r\n        });\r\n\r\n        const items = response.data[Object.keys(response.data)[0]].items;\r\n        allData = [...allData, ...items];\r\n        nextToken = response.data[Object.keys(response.data)[0]].nextToken;\r\n      } while (nextToken);\r\n\r\n      return allData;\r\n    }\r\n\r\n    async function updateProfile(data) {\r\n      try {\r\n        for (const input of data) {\r\n          const { __typename, createdAt, updatedAt, ...validTimeSheet } = input;\r\n          const response = await client.graphql({\r\n            query: updateEmpPersonalInfo,\r\n            variables: { input: validTimeSheet },\r\n          });\r\n\r\n          const empDetails = response.data.updateEmpPersonalInfo;\r\n\r\n          // window.location.reload();\r\n\r\n          // setPPLastUP(null);\r\n\r\n          let result = empDetails?.profilePhoto;\r\n          const fileName = result?.split(\"/\").pop();\r\n          if (fileName !== \"null\") {\r\n            await handleAfterUpload();\r\n            // setLoading(false);\r\n          } else if (fileName === \"null\") {\r\n            setLoading(false);\r\n          }\r\n\r\n          const message =\r\n            fileName === \"null\"\r\n              ? \"Profile photo removed.\"\r\n              : fileName\r\n              ? \"Profile photo added.\"\r\n              : \"Change Profile File\";\r\n\r\n          setMessage(message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching employee data: \", error);\r\n      }\r\n    }\r\n\r\n    async function fetchEmployeeData() {\r\n      const empDetails = await fetchAllData(listEmpPersonalInfos);\r\n\r\n      const fileKey = `public/${\"profilePhoto\"}/${watchedEmpID}/${fileName}`;\r\n      const updatedData = empDetails.map((val) => {\r\n        return {\r\n          ...val,\r\n          profilePhoto: fileKey || null,\r\n        };\r\n      });\r\n      updateProfile(updatedData);\r\n    }\r\n\r\n    fetchEmployeeData();\r\n  };\r\n\r\n  const handleFileUpload = async (e, type) => {\r\n    try {\r\n      setLoading(true);\r\n      setMessage(\"Uploading profile photo...\");\r\n      const fileInput = e.target;\r\n\r\n      const file = fileInput.files[0];\r\n\r\n      if (!file) return;\r\n\r\n      // Allowed file types\r\n      const allowedTypes = [\r\n        \"application/pdf\",\r\n        \"image/jpeg\",\r\n        \"image/png\",\r\n        \"image/jpg\",\r\n      ];\r\n      if (!allowedTypes.includes(file.type)) {\r\n        alert(\"Upload must be a PDF file or an image (JPG, JPEG, PNG)\");\r\n        return;\r\n      }\r\n\r\n      if (file) {\r\n        setPopUp(true);\r\n      }\r\n\r\n      // setSelectedFile(file.name);\r\n      await deleteFile(file.name, watchedEmpID);\r\n      await UploadProfile(file, type, setChangeProfilePhoto, watchedEmpID);\r\n      await onSubmit(file.name, watchedEmpID);\r\n      fileInput.value = \"\";\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handleUploadButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"center flex-col gap-2 py-2\">\r\n        <div className=\"relative\">\r\n          <div className=\"max-w-10 h-10 w-full rounded-full center relative overflow-hidden shadow-md shadow-[#00000033]\">\r\n            <img\r\n              className=\"w-full object-cover h-full \"\r\n              src={profilePhoto || avatar}\r\n              alt=\"avatar not found\"\r\n              onError={(e) => (e.target.src = avatar)}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            name=\"profilePhoto\"\r\n            ref={fileInputRef}\r\n            accept=\".jpg,.jpeg,.png\"\r\n            onChange={(e) => handleFileUpload(e, \"profilePhoto\")}\r\n            className=\"hidden\"\r\n          />\r\n          <p\r\n            className=\"absolute -right-2 bottom-0 h-5 w-5 rounded-full bg-[#D9D9D9] center\"\r\n            onClick={() => {\r\n              handleUploadButtonClick();\r\n            }}\r\n          >\r\n            <IoCameraOutline className=\"text-xs text-dark_grey cursor-pointer\" />\r\n          </p>\r\n        </div>\r\n        <Link\r\n          to=\"/personalInformation\"\r\n          className=\"text-xs text-dark_grey\"\r\n          onClick={() => {\r\n            setIsOpen(false);\r\n          }}\r\n        >\r\n          Personal Info Edit\r\n        </Link>\r\n        <div className=\"h-1 w-full bg-[#AAAAAA]\"></div>\r\n      </div>\r\n      <div className=\"space-y-2 mb-3 px-4\">\r\n        <div className=\" space-y-1 text-[#4F4F4F] text-xs\">\r\n          <label htmlFor=\"name\" className=\"font-medium \">\r\n            Name\r\n          </label>\r\n          <div className=\"border flex-1 rounded-md border-[#d4cfcf]  px-2 py-1 \">\r\n            <input\r\n              id=\"name\"\r\n              className=\"outline-none w-full\"\r\n              type=\"text\"\r\n              value={name}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\" space-y-1 text-[#4F4F4F] text-xs\">\r\n          <label htmlFor=\"phoneNo\" className=\"font-medium \">\r\n            Phone Number\r\n          </label>\r\n          <div className=\"border rounded-md border-[#d4cfcf] text-[#4F4F4F] text-xs px-2 py-1 \">\r\n            <input\r\n              id=\"phoneNo\"\r\n              className=\"outline-none w-full\"\r\n              type=\"text\"\r\n              value={contactNo}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\" space-y-1 text-[#4F4F4F] text-xs\">\r\n          <label htmlFor=\"email\" className=\"font-medium \">\r\n            Email\r\n          </label>\r\n          <div className=\"border rounded-md border-[#d4cfcf] text-[#4F4F4F] text-xs px-2 py-1 \">\r\n            <input\r\n              id=\"email\"\r\n              className=\"outline-none w-full\"\r\n              type=\"text\"\r\n              value={email}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between text-xs text-dark_grey font-semibold pt-3\">\r\n          <Link\r\n            to=\"/changePassword\"\r\n            className=\"py-1 px-2 border-2 rounded-md border-primary \"\r\n          >\r\n            Change Password\r\n          </Link>\r\n          <Link\r\n            className={`flex items-center gap-1 py-1 px-2 bg-primary  rounded-md `}\r\n            onClick={SignOut}\r\n          >\r\n            Logout\r\n            <span>\r\n              <IoMdLogOut className=\"text-lg text-dark_grey\" />\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {popup && (\r\n        <PPPopUp\r\n          handleProfile={handleProfile}\r\n          profilePhoto={profilePhoto}\r\n          changeProfilePhoto={changeProfilePhoto}\r\n          handleFileUpload={handleFileUpload}\r\n          PPLastUP={PPLastUP}\r\n          setPPLastUP={setPPLastUP}\r\n          loading={loading}\r\n          message={message}\r\n          removeProfilePhoto={removeProfilePhoto}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n","import { getCurrentUser } from \"@aws-amplify/auth\";\r\nimport { uploadData, remove } from \"@aws-amplify/storage\";\r\n\r\nexport const UploadProfile = async (\r\n  file,\r\n  fileType,\r\n  setUploadedDocs,\r\n  empID,\r\n  index\r\n) => {\r\n  try {\r\n    const currentUser = await getCurrentUser();\r\n\r\n    if (currentUser) {\r\n      const result = await uploadData({\r\n        path: `public/${fileType}/${empID}/${file.name}`,\r\n        data: file,\r\n      }).result;\r\n      const fileUrl = result.path;\r\n\r\n      const uploadDate = new Date().toISOString().split(\"T\")[0];\r\n\r\n      if (typeof index === \"number\") {\r\n        setUploadedDocs((prev) => {\r\n          const updatedUploads = { ...prev };\r\n\r\n          // Initialize the array if it doesn't exist\r\n          updatedUploads[fileType] = updatedUploads[fileType] || [];\r\n          updatedUploads[fileType][index] =\r\n            updatedUploads[fileType][index] || [];\r\n\r\n          const existingUpload = updatedUploads[fileType][index].find(\r\n            (item) => item.upload === fileUrl\r\n          );\r\n\r\n          if (!existingUpload) {\r\n            updatedUploads[fileType][index].push({\r\n              upload: fileUrl,\r\n              date: uploadDate,\r\n            });\r\n          }\r\n\r\n          return updatedUploads;\r\n        });\r\n      } else if (\r\n        fileType === \"profilePhoto\" ||\r\n        fileType === \"inducBriefUp\" ||\r\n        fileType === \"uploadJobDetails\"\r\n      ) {\r\n        setUploadedDocs((prevState) => ({\r\n          ...prevState,\r\n          [fileType]: fileUrl,\r\n        }));\r\n      } else {\r\n        setUploadedDocs((prev) => ({\r\n          ...prev,\r\n          [fileType]: [\r\n            ...(prev[fileType] || []),\r\n            { upload: fileUrl, date: uploadDate },\r\n          ],\r\n        }));\r\n      }\r\n    }\r\n  } catch (error) {\r\n    // console.log(Error uploading ${fileType}:, error);\r\n  }\r\n};\r\n\r\n// Delete file from S3 and update state\r\nexport const deleteDocs = async (\r\n  fileUrl,\r\n  fileType,\r\n  setUploadedDocs,\r\n  empID,\r\n  index\r\n) => {\r\n  try {\r\n    // Delete from S3\r\n    await remove(fileUrl);\r\n\r\n    // Update the state to remove the deleted file reference\r\n    setUploadedDocs((prev) => {\r\n      const updatedUploads = { ...prev };\r\n\r\n      if (\r\n        typeof index === \"number\" &&\r\n        Array.isArray(updatedUploads[fileType])\r\n      ) {\r\n        updatedUploads[fileType][index] = updatedUploads[fileType][\r\n          index\r\n        ].filter((item) => item.upload !== fileUrl);\r\n\r\n        // Remove the index array if it becomes empty\r\n        if (updatedUploads[fileType][index].length === 0) {\r\n          delete updatedUploads[fileType][index];\r\n        }\r\n      } else if (updatedUploads[fileType] === fileUrl) {\r\n        // Handle single file types like profilePhoto\r\n        updatedUploads[fileType] = null;\r\n      } else if (Array.isArray(updatedUploads[fileType])) {\r\n        // For general arrays of files\r\n        updatedUploads[fileType] = updatedUploads[fileType].filter(\r\n          (item) => item.upload !== fileUrl\r\n        );\r\n      }\r\n\r\n      return updatedUploads;\r\n    });\r\n  } catch (error) {\r\n    console.error(`Error deleting ${fileType}:, error`);\r\n  }\r\n};","import { IoMdNotificationsOutline } from \"react-icons/io\";\r\nimport logo from \"../assets/logo/logo-with-name.svg\";\r\nimport avatar from \"../assets/navabar/avatar.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { GoPencil } from \"react-icons/go\";\r\nimport { Profile } from \"../pages/profile/Profile\";\r\nimport { generateClient } from \"@aws-amplify/api\";\r\nimport { listEmpPersonalInfos } from \"../graphql/queries\";\r\nimport { getUrl } from \"@aws-amplify/storage\";\r\nimport { useNotifiCenter } from \"../hooks/useNotifiCenter\";\r\n\r\nconst client = generateClient();\r\nconst Navbar = () => {\r\n  const { unreadCount } = useNotifiCenter();\r\n  useEffect(() => {}, [unreadCount]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [currentTimeValue, setCurrentTimeValue] = useState(\"\");\r\n  const [currentDateValue, setCurrentDateValue] = useState(\"\");\r\n  const [getPPhotoString, setGetPPhotoString] = useState(null);\r\n  const [callAfterUploaded, setCallAfterUploaded] = useState(false);\r\n  const [loading, setLoading] = useState(null);\r\n  const [personalInfo, setPersonalInfo] = useState({\r\n    profilePhoto: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    contactNo: \"\",\r\n  });\r\n\r\n  const [userID, setUserID] = useState(\"\");\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen((prev) => !prev);\r\n  };\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userType = localStorage.getItem(\"userType\");\r\n    setUserName(userType);\r\n    // Add event listener to detect clicks outside\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      // Clean up the event listener\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateTime = () => {\r\n      const today = new Date();\r\n      const date = today.getDate();\r\n      const month = today.getMonth() + 1;\r\n      const year = today.getFullYear();\r\n      const currentDate = `${date}/${month}/${year}`;\r\n      setCurrentDateValue(currentDate);\r\n      let hours = today.getHours();\r\n      const minutes = today.getMinutes();\r\n      const seconds = today.getSeconds();\r\n      const ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n\r\n      hours = hours % 12;\r\n      hours = hours ? hours : 12;\r\n\r\n      const paddedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n      const paddedSeconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n      const formattedTime = `${hours}:${paddedMinutes}:${paddedSeconds} ${ampm}`;\r\n      const formattedDateTime = `${currentDate} ${formattedTime}`;\r\n      setCurrentTimeValue(formattedDateTime);\r\n    };\r\n\r\n    const intervalId = setInterval(updateTime, 1000);\r\n\r\n    // Cleanup the interval when the component unmounts\r\n    return () => clearInterval(intervalId);\r\n  }, []); // Empty dependency array, so it runs only once when the component mounts\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPersonalInfo({ ...personalInfo, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userID = localStorage.getItem(\"userID\");\r\n    setUserID(userID);\r\n  }, []);\r\n\r\n  const handleAfterUpload = async () => {\r\n    setCallAfterUploaded(!callAfterUploaded);\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        let allEmployees = [];\r\n        let nextToken = null;\r\n\r\n        do {\r\n          const response = await client.graphql({\r\n            query: listEmpPersonalInfos,\r\n            variables: {\r\n              nextToken: nextToken,\r\n            },\r\n          });\r\n\r\n          allEmployees = [\r\n            ...allEmployees,\r\n            ...response.data.listEmpPersonalInfos.items,\r\n          ];\r\n\r\n          nextToken = response.data.listEmpPersonalInfos.nextToken;\r\n        } while (nextToken);\r\n\r\n        const empPersonalInfos = allEmployees;\r\n\r\n        if (empPersonalInfos.length === 0) {\r\n          return;\r\n        }\r\n\r\n        // Find the employee matching the userID, ignoring case\r\n        const userPersonalInfo = empPersonalInfos.find(\r\n          (emp) =>\r\n            emp.empID.toString().toLowerCase() ===\r\n            userID.toString().toLowerCase()\r\n        );\r\n\r\n        if (userPersonalInfo) {\r\n          let splitfunc = userPersonalInfo?.profilePhoto.split(\"/\").pop();\r\n\r\n          let profilePhotoString =\r\n            splitfunc === \"null\"\r\n              ? \"User-avatar.svg.png\"\r\n              : userPersonalInfo?.profilePhoto;\r\n\r\n          setGetPPhotoString(profilePhotoString);\r\n          const linkToStorageFile = async (pathUrl) => {\r\n            const result = await getUrl({\r\n              path: pathUrl,\r\n            });\r\n            setLoading(false);\r\n            return setPersonalInfo({\r\n              name: userPersonalInfo?.name,\r\n              profilePhoto: result?.url?.toString(),\r\n              email: userPersonalInfo?.email,\r\n              contactNo: userPersonalInfo?.contactNo || \"\",\r\n            });\r\n          };\r\n\r\n          linkToStorageFile(profilePhotoString);\r\n        } else {\r\n          // console.log(`No matching employee found for userID: ${userID}`);\r\n        }\r\n      } catch (err) {\r\n        // console.log(\"Error fetching employee personal infos:\", err);\r\n      }\r\n    };\r\n    if (userID) {\r\n      fetchData();\r\n    }\r\n  }, [userID, callAfterUploaded]);\r\n\r\n  return (\r\n    <nav className=\"center bg-medium_white h-28 fixed top-0 w-full z-50 shadow-sm\">\r\n      <div className=\"screen-size flex justify-between items-center gap-10 py-7 px-3\">\r\n        <section className=\"flex-initial\">\r\n          <div className=\"max-w-[250px] w-full\">\r\n            <img className=\"w-full\" src={logo} alt=\"not found\" />\r\n          </div>\r\n        </section>\r\n        {/* searchbox disable */}\r\n        {/* <section className=\"flex-1 flex-grow-1 center\">\r\n          <div className=\"center w-[90%] gap-3 py-2 px-5 shadow-md shadow-[#00000033] rounded-full bg-white\">\r\n            <span>\r\n              <IoSearchOutline className=\"text-ash text-2xl font-semibold\" />\r\n            </span>\r\n            <input\r\n              className=\"outline-none bg-[transparent] text-lg text-ash w-full\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n            />\r\n          </div>\r\n        </section> */}\r\n        <section className=\"flex-initial flex item-center gap-5 \">\r\n          <div className=\" my-auto\">\r\n            <p className=\"relative\">\r\n              <Link to=\"/notifications\">\r\n                {\" \"}\r\n                <IoMdNotificationsOutline className=\"text-2xl\" />\r\n              </Link>\r\n\r\n              {unreadCount > 0 && (\r\n                <span className=\"absolute -top-[4px] right-[2px] rounded-full h-2 w-2 text-dark_grey bg-[#d04545] text-xs center\">\r\n                  {\" \"}\r\n                </span>\r\n              )}\r\n\r\n              {/* // )} */}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center gap-5 px-5\">\r\n            <div className=\"space-y-2 \">\r\n              <p className=\"text-dark_grey text_size_5\">\r\n                {\" \"}\r\n                Welcome {personalInfo.name}\r\n              </p>\r\n              <article className=\"flex gap-5 text_size_7 text-dark_grey\">\r\n                {/* <p>{currentDateValue}</p> */}\r\n\r\n                <p>{currentTimeValue}</p>\r\n              </article>\r\n            </div>\r\n            <div className=\"relative\">\r\n              <div className=\"relative\">\r\n                <div\r\n                  className=\"w-12 h-12 rounded-full relative center overflow-hidden shadow-md shadow-[#00000033]\"\r\n                  onClick={() => toggleDropdown()}\r\n                >\r\n                  <img\r\n                    className=\"w-full object-center\"\r\n                    src={personalInfo?.profilePhoto || avatar}\r\n                    alt=\"avatar not found\"\r\n                    onError={(e) => (e.target.src = avatar)}\r\n                  />\r\n                </div>\r\n                <p\r\n                  className=\"absolute -right-2 bottom-0 h-5 w-5 rounded-full bg-[#D9D9D9] center\"\r\n                  onClick={() => toggleDropdown()}\r\n                >\r\n                  <GoPencil className=\"text-xs text-dark_grey\" />\r\n                </p>\r\n              </div>\r\n              {isOpen && (\r\n                <div\r\n                  ref={dropdownRef}\r\n                  className=\"absolute top-12 -left-40 bg-white shadow-md  py-2 text-dark_grey text-[15px]  w-[250px]  flex flex-col\"\r\n                >\r\n                  <Profile\r\n                    setIsOpen={setIsOpen}\r\n                    name={personalInfo?.name}\r\n                    email={personalInfo?.email}\r\n                    profilePhoto={personalInfo?.profilePhoto}\r\n                    contactNo={personalInfo?.contactNo}\r\n                    getPPhotoString={getPPhotoString}\r\n                    setPersonalInfo={setPersonalInfo}\r\n                    handleAfterUpload={handleAfterUpload}\r\n                    loading={loading}\r\n                    setLoading={setLoading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import { remove } from \"aws-amplify/storage\";\r\n\r\nexport const handleDeleteFile = async (fileType, fileName, empID) => {\r\n  // if (!empID) {\r\n  //   alert(\"Please provide the Employee ID before deleting files.\");\r\n  //   return false;\r\n  // }\r\n  if (!fileName) {\r\n    alert(\"File name is missing. Please select a valid file to delete.\");\r\n    console.error(\"Missing fileName. Received parameters:\", { fileType, empID, fileName });\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    // Construct the file key for S3\r\n    const fileKey = `public/${fileType}/${empID}/${fileName}`;\r\n\r\n    // Delete the file from S3\r\n    await remove({\r\n      path: fileKey,\r\n      bucket: \"aweadininstorage20242a2fe-dev\",\r\n    });  \r\n \r\n    return true;\r\n  } catch (err) {\r\n    console.error(\"Error deleting file:\", err);\r\n    alert(\"Error processing the file deletion.\");\r\n    return false;\r\n  }\r\n};"],"names":["PPPopUp","_ref","handleProfile","profilePhoto","changeProfilePhoto","handleFileUpload","PPLastUP","setPPLastUP","loading","message","removeProfilePhoto","localStorage","getItem","toString","toUpperCase","useEffect","async","_result$url","result","getUrl","path","url","linkToStorageFile","_jsx","className","children","_jsxs","onClick","IoCloseCircleOutline","type","id","name","accept","onChange","e","concat","FiLoader","src","avatar","alt","onError","target","document","getElementById","click","client","generateClient","Profile","_localStorage$getItem","setIsOpen","email","contactNo","getPPhotoString","setPersonalInfo","handleAfterUpload","setLoading","fileInputRef","useRef","watchedEmpID","setChangeProfilePhoto","useState","popup","setPopUp","setMessage","deleteFile","fileName","handleDeleteFile","error","console","useCallback","split","pop","_ref2","rest","_objectWithoutProperties","_excluded","_objectSpread","onSubmit","err","empDetails","queryName","allData","nextToken","filter","and","empID","eq","response","graphql","query","variables","items","data","Object","keys","fetchAllData","listEmpPersonalInfos","fileKey","input","__typename","createdAt","updatedAt","validTimeSheet","_excluded2","updateEmpPersonalInfo","updateProfile","map","val","fetchEmployeeData","fileInput","file","files","includes","alert","fileType","setUploadedDocs","index","getCurrentUser","fileUrl","uploadData","uploadDate","Date","toISOString","prev","updatedUploads","find","item","upload","push","date","prevState","UploadProfile","value","ref","current","IoCameraOutline","Link","to","htmlFor","readOnly","signOut","removeItem","window","location","href","IoMdLogOut","Navbar","unreadCount","useNotifiCenter","isOpen","userName","setUserName","currentTimeValue","setCurrentTimeValue","currentDateValue","setCurrentDateValue","setGetPPhotoString","callAfterUploaded","setCallAfterUploaded","personalInfo","userID","setUserID","toggleDropdown","dropdownRef","handleClickOutside","event","contains","userType","addEventListener","removeEventListener","intervalId","setInterval","updateTime","today","getDate","month","getMonth","year","getFullYear","currentDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","paddedMinutes","paddedSeconds","formattedTime","formattedDateTime","clearInterval","allEmployees","empPersonalInfos","length","userPersonalInfo","emp","toLowerCase","profilePhotoString","pathUrl","fetchData","logo","IoMdNotificationsOutline","GoPencil","remove","bucket"],"sourceRoot":""}